-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cordic_sincos_generi is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    t_in : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of cordic_sincos_generi is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv87_0 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv87_9B74EDA8435E5A67F5F91 : STD_LOGIC_VECTOR (86 downto 0) := "000100110110111010011101101101010000100001101011110010110100110011111110101111110010001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv87_1000000000000000000000 : STD_LOGIC_VECTOR (86 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv64_7FFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "0111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_3FF0000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "0011111111110000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv11_7FF : STD_LOGIC_VECTOR (10 downto 0) := "11111111111";
    constant ap_const_lv11_3E4 : STD_LOGIC_VECTOR (10 downto 0) := "01111100100";
    constant ap_const_lv11_3FE : STD_LOGIC_VECTOR (10 downto 0) := "01111111110";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv11_44D : STD_LOGIC_VECTOR (10 downto 0) := "10001001101";
    constant ap_const_lv11_4A : STD_LOGIC_VECTOR (10 downto 0) := "00001001010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_A6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100110";
    constant ap_const_lv32_A7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100111";
    constant ap_const_lv32_A9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101001";
    constant ap_const_lv145_lc_1 : STD_LOGIC_VECTOR (144 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_E5 : STD_LOGIC_VECTOR (7 downto 0) := "11100101";
    constant ap_const_lv168_lc_2 : STD_LOGIC_VECTOR (167 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000110010010000111111011010101000100010000101101000110000100011010011000100110001100110";
    constant ap_const_lv7_57 : STD_LOGIC_VECTOR (6 downto 0) := "1010111";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111101";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv64_8000000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ref_4oPi_table_256_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ref_4oPi_table_256_V_ce0 : STD_LOGIC;
    signal ref_4oPi_table_256_V_q0 : STD_LOGIC_VECTOR (255 downto 0);
    signal cordic_ctab_table_12_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal cordic_ctab_table_12_1_ce0 : STD_LOGIC;
    signal cordic_ctab_table_12_1_q0 : STD_LOGIC_VECTOR (125 downto 0);
    signal p_Result_s_reg_1012 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1017 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1021 : STD_LOGIC_VECTOR (0 downto 0);
    signal closepath_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal closepath_reg_1025 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_1031 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Result_15_fu_406_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_15_reg_1036 : STD_LOGIC_VECTOR (51 downto 0);
    signal tmp_35_fu_439_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_35_reg_1046 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal p_Val2_24_fu_503_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Val2_24_reg_1061 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal p_Val2_15_fu_520_p3 : STD_LOGIC_VECTOR (144 downto 0);
    signal p_Val2_15_reg_1067 : STD_LOGIC_VECTOR (144 downto 0);
    signal Mx_zeros_V_fu_572_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal Mx_zeros_V_reg_1072 : STD_LOGIC_VECTOR (5 downto 0);
    signal fout_V_fu_661_p3 : STD_LOGIC_VECTOR (83 downto 0);
    signal fout_V_reg_1078 : STD_LOGIC_VECTOR (83 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_41_fu_669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_reg_1083 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_V_fu_695_p1 : STD_LOGIC_VECTOR (86 downto 0);
    signal yprescale_V_cast_fu_703_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal z_V_fu_728_p1 : STD_LOGIC_VECTOR (86 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal k_fu_738_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal k_reg_1105 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal d_V_fu_744_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_V_reg_1110 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tx_V_fu_774_p3 : STD_LOGIC_VECTOR (86 downto 0);
    signal tx_V_reg_1115 : STD_LOGIC_VECTOR (86 downto 0);
    signal ty_V_fu_800_p3 : STD_LOGIC_VECTOR (86 downto 0);
    signal ty_V_reg_1120 : STD_LOGIC_VECTOR (86 downto 0);
    signal sel_fu_818_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal sel_reg_1130 : STD_LOGIC_VECTOR (2 downto 0);
    signal tz_V_fu_868_p3 : STD_LOGIC_VECTOR (86 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_scaled_fixed2ieee_fu_332_ap_start : STD_LOGIC;
    signal grp_scaled_fixed2ieee_fu_332_ap_done : STD_LOGIC;
    signal grp_scaled_fixed2ieee_fu_332_ap_idle : STD_LOGIC;
    signal grp_scaled_fixed2ieee_fu_332_ap_ready : STD_LOGIC;
    signal grp_scaled_fixed2ieee_fu_332_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_scaled_fixed2ieee_fu_344_ap_start : STD_LOGIC;
    signal grp_scaled_fixed2ieee_fu_344_ap_done : STD_LOGIC;
    signal grp_scaled_fixed2ieee_fu_344_ap_idle : STD_LOGIC;
    signal grp_scaled_fixed2ieee_fu_344_ap_ready : STD_LOGIC;
    signal grp_scaled_fixed2ieee_fu_344_ap_return : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_19_reg_198 : STD_LOGIC_VECTOR (86 downto 0);
    signal p_Val2_1_reg_208 : STD_LOGIC_VECTOR (86 downto 0);
    signal p_Val2_2_reg_219 : STD_LOGIC_VECTOR (86 downto 0);
    signal sh_assign_reg_230 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_0_reg_241 : STD_LOGIC_VECTOR (86 downto 0);
    signal p_1_reg_254 : STD_LOGIC_VECTOR (86 downto 0);
    signal p_s_reg_265 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_46_fu_990_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_s_out_write_assign_phi_fu_280_p20 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_out_write_assign_reg_276 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_predicate_op126_call_state8 : BOOLEAN;
    signal ap_block_state8_on_subcall_done : BOOLEAN;
    signal tmp_53_fu_885_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_51_fu_900_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_49_fu_930_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_c_out_write_assign_phi_fu_308_p20 : STD_LOGIC_VECTOR (63 downto 0);
    signal c_out_write_assign_reg_303 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_52_fu_915_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_50_fu_945_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_48_fu_960_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_47_fu_975_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_scaled_fixed2ieee_fu_332_ap_start_reg : STD_LOGIC := '0';
    signal grp_scaled_fixed2ieee_fu_344_ap_start_reg : STD_LOGIC := '0';
    signal tmp_2_i_i_fu_434_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_43_fu_808_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_8_fu_356_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal loc_V_fu_368_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal expv_op_fu_410_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal addr_V_fu_416_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_i_i_fu_424_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_i_i_fu_450_p1 : STD_LOGIC_VECTOR (255 downto 0);
    signal r_V_fu_453_p2 : STD_LOGIC_VECTOR (255 downto 0);
    signal ret_V_fu_459_p4 : STD_LOGIC_VECTOR (169 downto 0);
    signal p_Result_16_fu_443_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal grp_fu_477_p0 : STD_LOGIC_VECTOR (52 downto 0);
    signal grp_fu_477_p1 : STD_LOGIC_VECTOR (169 downto 0);
    signal grp_fu_477_p2 : STD_LOGIC_VECTOR (222 downto 0);
    signal tmp_18_i_fu_493_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Val2_13_fu_483_p4 : STD_LOGIC_VECTOR (144 downto 0);
    signal tmp_36_fu_510_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_i_fu_514_p2 : STD_LOGIC_VECTOR (144 downto 0);
    signal p_Result_i2_i_fu_528_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal p_Result_17_fu_538_p3 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_Result_18_fu_546_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal p_Result_19_fu_556_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i3_i_fu_564_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_cast_fu_576_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal storemerge_i_fu_581_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_19_i_fu_592_p1 : STD_LOGIC_VECTOR (144 downto 0);
    signal p_Val2_17_fu_595_p2 : STD_LOGIC_VECTOR (144 downto 0);
    signal storemerge_i_cast_fu_588_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_22_i_cast_fu_610_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal Ex_V_fu_613_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal isNeg_fu_619_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_i_fu_627_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sh_assign_2_fu_633_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sh_assign_3_cast_fu_641_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Mx_V_fu_600_p4 : STD_LOGIC_VECTOR (83 downto 0);
    signal tmp_25_i_fu_645_p1 : STD_LOGIC_VECTOR (83 downto 0);
    signal tmp_26_i_fu_649_p2 : STD_LOGIC_VECTOR (83 downto 0);
    signal tmp_27_i_fu_655_p2 : STD_LOGIC_VECTOR (83 downto 0);
    signal p_Val2_s_fu_679_p1 : STD_LOGIC_VECTOR (83 downto 0);
    signal p_Val2_s_fu_679_p2 : STD_LOGIC_VECTOR (167 downto 0);
    signal tmp_3_fu_685_p4 : STD_LOGIC_VECTOR (83 downto 0);
    signal tmp_39_fu_699_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_18_fu_712_p0 : STD_LOGIC_VECTOR (83 downto 0);
    signal p_Val2_18_fu_712_p2 : STD_LOGIC_VECTOR (167 downto 0);
    signal tmp_4_fu_718_p4 : STD_LOGIC_VECTOR (83 downto 0);
    signal tmp_42_fu_752_p1 : STD_LOGIC_VECTOR (86 downto 0);
    signal y_s_V_fu_756_p2 : STD_LOGIC_VECTOR (86 downto 0);
    signal r_V_i3_fu_768_p2 : STD_LOGIC_VECTOR (86 downto 0);
    signal r_V_2_i_fu_762_p2 : STD_LOGIC_VECTOR (86 downto 0);
    signal x_s_V_fu_782_p2 : STD_LOGIC_VECTOR (86 downto 0);
    signal r_V_1_i_fu_788_p2 : STD_LOGIC_VECTOR (86 downto 0);
    signal r_V_i8_fu_794_p2 : STD_LOGIC_VECTOR (86 downto 0);
    signal tmp_45_fu_813_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_44_fu_834_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_cast_fu_842_p1 : STD_LOGIC_VECTOR (83 downto 0);
    signal p_Val2_29_cast_fu_824_p4 : STD_LOGIC_VECTOR (83 downto 0);
    signal z_s_V_fu_846_p2 : STD_LOGIC_VECTOR (83 downto 0);
    signal z_s_V_cast_fu_852_p1 : STD_LOGIC_VECTOR (86 downto 0);
    signal r_V_i_fu_862_p2 : STD_LOGIC_VECTOR (86 downto 0);
    signal r_V_3_i_fu_856_p2 : STD_LOGIC_VECTOR (86 downto 0);
    signal tmp_217_to_int_fu_875_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_217_neg_fu_879_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_215_to_int_fu_890_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_215_neg_fu_894_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_216_to_int_fu_905_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_216_neg_fu_909_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_213_to_int_fu_920_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_213_neg_fu_924_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_214_to_int_fu_935_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_214_neg_fu_939_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_212_to_int_fu_950_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_212_neg_fu_954_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_211_to_int_fu_965_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_211_neg_fu_969_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_218_to_int_fu_980_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_218_neg_fu_984_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_477_p00 : STD_LOGIC_VECTOR (222 downto 0);
    signal grp_fu_477_p10 : STD_LOGIC_VECTOR (222 downto 0);
    signal p_Val2_18_fu_712_p00 : STD_LOGIC_VECTOR (167 downto 0);
    signal p_Val2_s_fu_679_p10 : STD_LOGIC_VECTOR (167 downto 0);

    component scaled_fixed2ieee IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_V : IN STD_LOGIC_VECTOR (86 downto 0);
        prescale : IN STD_LOGIC_VECTOR (6 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component filter_mul_53ns_1g8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (52 downto 0);
        din1 : IN STD_LOGIC_VECTOR (169 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (222 downto 0) );
    end component;


    component cordic_sincos_geneOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (255 downto 0) );
    end component;


    component cordic_sincos_genfYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (125 downto 0) );
    end component;



begin
    ref_4oPi_table_256_V_U : component cordic_sincos_geneOg
    generic map (
        DataWidth => 256,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ref_4oPi_table_256_V_address0,
        ce0 => ref_4oPi_table_256_V_ce0,
        q0 => ref_4oPi_table_256_V_q0);

    cordic_ctab_table_12_1_U : component cordic_sincos_genfYi
    generic map (
        DataWidth => 126,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cordic_ctab_table_12_1_address0,
        ce0 => cordic_ctab_table_12_1_ce0,
        q0 => cordic_ctab_table_12_1_q0);

    grp_scaled_fixed2ieee_fu_332 : component scaled_fixed2ieee
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_scaled_fixed2ieee_fu_332_ap_start,
        ap_done => grp_scaled_fixed2ieee_fu_332_ap_done,
        ap_idle => grp_scaled_fixed2ieee_fu_332_ap_idle,
        ap_ready => grp_scaled_fixed2ieee_fu_332_ap_ready,
        in_V => p_1_reg_254,
        prescale => p_s_reg_265,
        ap_return => grp_scaled_fixed2ieee_fu_332_ap_return);

    grp_scaled_fixed2ieee_fu_344 : component scaled_fixed2ieee
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_scaled_fixed2ieee_fu_344_ap_start,
        ap_done => grp_scaled_fixed2ieee_fu_344_ap_done,
        ap_idle => grp_scaled_fixed2ieee_fu_344_ap_idle,
        ap_ready => grp_scaled_fixed2ieee_fu_344_ap_ready,
        in_V => p_0_reg_241,
        prescale => ap_const_lv7_0,
        ap_return => grp_scaled_fixed2ieee_fu_344_ap_return);

    filter_mul_53ns_1g8j_U51 : component filter_mul_53ns_1g8j
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 53,
        din1_WIDTH => 170,
        dout_WIDTH => 223)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_477_p0,
        din1 => grp_fu_477_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_477_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv64_0;
            else
                if (((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    ap_return_0_preg <= ap_phi_mux_s_out_write_assign_phi_fu_280_p20;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv64_0;
            else
                if (((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                    ap_return_1_preg <= ap_phi_mux_c_out_write_assign_phi_fu_308_p20;
                end if; 
            end if;
        end if;
    end process;


    grp_scaled_fixed2ieee_fu_332_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_scaled_fixed2ieee_fu_332_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and ((exitcond_i_fu_732_p2 = ap_const_lv1_1) or (tmp_41_reg_1083 = ap_const_lv1_1)))) then 
                    grp_scaled_fixed2ieee_fu_332_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_scaled_fixed2ieee_fu_332_ap_ready = ap_const_logic_1)) then 
                    grp_scaled_fixed2ieee_fu_332_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_scaled_fixed2ieee_fu_344_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_scaled_fixed2ieee_fu_344_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and ((exitcond_i_fu_732_p2 = ap_const_lv1_1) or (tmp_41_reg_1083 = ap_const_lv1_1)))) then 
                    grp_scaled_fixed2ieee_fu_344_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_scaled_fixed2ieee_fu_344_ap_ready = ap_const_logic_1)) then 
                    grp_scaled_fixed2ieee_fu_344_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    c_out_write_assign_reg_303_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_378_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                c_out_write_assign_reg_303 <= ap_const_lv64_7FFFFFFFFFFFFFFF;
            elsif (((tmp_s_fu_384_p2 = ap_const_lv1_1) and (tmp_fu_378_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                c_out_write_assign_reg_303 <= ap_const_lv64_3FF0000000000000;
            elsif (((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_2))) then 
                c_out_write_assign_reg_303 <= tmp_47_fu_975_p1;
            elsif (((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_3))) then 
                c_out_write_assign_reg_303 <= tmp_48_fu_960_p1;
            elsif (((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_4))) then 
                c_out_write_assign_reg_303 <= tmp_50_fu_945_p1;
            elsif (((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_5))) then 
                c_out_write_assign_reg_303 <= tmp_52_fu_915_p1;
            elsif ((((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_1)) or ((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_6)))) then 
                c_out_write_assign_reg_303 <= grp_scaled_fixed2ieee_fu_332_ap_return;
            elsif ((((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_0)) or ((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_7)))) then 
                c_out_write_assign_reg_303 <= grp_scaled_fixed2ieee_fu_344_ap_return;
            end if; 
        end if;
    end process;

    p_0_reg_241_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_41_reg_1083 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond_i_fu_732_p2 = ap_const_lv1_1))) then 
                p_0_reg_241 <= p_Val2_2_reg_219;
            elsif (((tmp_41_fu_669_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                p_0_reg_241 <= ap_const_lv87_1000000000000000000000;
            end if; 
        end if;
    end process;

    p_1_reg_254_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_41_reg_1083 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond_i_fu_732_p2 = ap_const_lv1_1))) then 
                p_1_reg_254 <= p_Val2_1_reg_208;
            elsif (((tmp_41_fu_669_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                p_1_reg_254 <= y_V_fu_695_p1;
            end if; 
        end if;
    end process;

    p_Val2_19_reg_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                p_Val2_19_reg_198 <= tz_V_fu_868_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                p_Val2_19_reg_198 <= z_V_fu_728_p1;
            end if; 
        end if;
    end process;

    p_Val2_1_reg_208_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                p_Val2_1_reg_208 <= ty_V_reg_1120;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                p_Val2_1_reg_208 <= ap_const_lv87_0;
            end if; 
        end if;
    end process;

    p_Val2_2_reg_219_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                p_Val2_2_reg_219 <= tx_V_reg_1115;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                p_Val2_2_reg_219 <= ap_const_lv87_9B74EDA8435E5A67F5F91;
            end if; 
        end if;
    end process;

    p_s_reg_265_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_41_reg_1083 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (exitcond_i_fu_732_p2 = ap_const_lv1_1))) then 
                p_s_reg_265 <= ap_const_lv7_0;
            elsif (((tmp_41_fu_669_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                p_s_reg_265 <= yprescale_V_cast_fu_703_p2;
            end if; 
        end if;
    end process;

    s_out_write_assign_reg_276_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_378_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_out_write_assign_reg_276 <= ap_const_lv64_7FFFFFFFFFFFFFFF;
            elsif (((tmp_s_fu_384_p2 = ap_const_lv1_1) and (tmp_fu_378_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_out_write_assign_reg_276 <= t_in;
            elsif ((((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_1)) or ((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_2)))) then 
                s_out_write_assign_reg_276 <= grp_scaled_fixed2ieee_fu_344_ap_return;
            elsif ((((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_0)) or ((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_3)))) then 
                s_out_write_assign_reg_276 <= grp_scaled_fixed2ieee_fu_332_ap_return;
            elsif (((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_4))) then 
                s_out_write_assign_reg_276 <= tmp_49_fu_930_p1;
            elsif (((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_5))) then 
                s_out_write_assign_reg_276 <= tmp_51_fu_900_p1;
            elsif (((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_6))) then 
                s_out_write_assign_reg_276 <= tmp_53_fu_885_p1;
            elsif (((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_7))) then 
                s_out_write_assign_reg_276 <= tmp_46_fu_990_p1;
            end if; 
        end if;
    end process;

    sh_assign_reg_230_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                sh_assign_reg_230 <= k_reg_1105;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                sh_assign_reg_230 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                Mx_zeros_V_reg_1072 <= Mx_zeros_V_fu_572_p1;
                p_Val2_15_reg_1067 <= p_Val2_15_fu_520_p3;
                p_Val2_24_reg_1061 <= p_Val2_24_fu_503_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_fu_384_p2 = ap_const_lv1_0) and (tmp_fu_378_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                closepath_reg_1025 <= closepath_fu_390_p2;
                p_Result_15_reg_1036 <= p_Result_15_fu_406_p1;
                tmp_1_reg_1031 <= p_Val2_8_fu_356_p1(57 downto 52);
                tmp_35_reg_1046 <= tmp_35_fu_439_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_fu_732_p2 = ap_const_lv1_0) and (tmp_41_reg_1083 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                d_V_reg_1110 <= p_Val2_19_reg_198(86 downto 86);
                tx_V_reg_1115 <= tx_V_fu_774_p3;
                ty_V_reg_1120 <= ty_V_fu_800_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                fout_V_reg_1078 <= fout_V_fu_661_p3;
                tmp_41_reg_1083 <= tmp_41_fu_669_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_41_reg_1083 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                k_reg_1105 <= k_fu_738_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                p_Result_s_reg_1012 <= p_Val2_8_fu_356_p1(63 downto 63);
                tmp_reg_1017 <= tmp_fu_378_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and ((exitcond_i_fu_732_p2 = ap_const_lv1_1) or (tmp_41_reg_1083 = ap_const_lv1_1)))) then
                sel_reg_1130 <= sel_fu_818_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_378_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                tmp_s_reg_1021 <= tmp_s_fu_384_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, tmp_fu_378_p2, tmp_s_fu_384_p2, ap_CS_fsm_state4, tmp_41_fu_669_p2, tmp_41_reg_1083, ap_CS_fsm_state6, exitcond_i_fu_732_p2, ap_CS_fsm_state8, ap_block_state8_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((tmp_s_fu_384_p2 = ap_const_lv1_0) and (tmp_fu_378_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and ((tmp_s_fu_384_p2 = ap_const_lv1_1) or (tmp_fu_378_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((tmp_41_fu_669_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and ((exitcond_i_fu_732_p2 = ap_const_lv1_1) or (tmp_41_reg_1083 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state8 => 
                if (((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    Ex_V_fu_613_p2 <= std_logic_vector(signed(storemerge_i_cast_fu_588_p1) - signed(tmp_22_i_cast_fu_610_p1));
    Mx_V_fu_600_p4 <= p_Val2_17_fu_595_p2(144 downto 61);
    Mx_zeros_V_fu_572_p1 <= tmp_i3_i_fu_564_p3(6 - 1 downto 0);
    addr_V_fu_416_p3 <= 
        ap_const_lv11_4A when (closepath_fu_390_p2(0) = '1') else 
        expv_op_fu_410_p2;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_block_state8_on_subcall_done_assign_proc : process(grp_scaled_fixed2ieee_fu_332_ap_done, grp_scaled_fixed2ieee_fu_344_ap_done, ap_predicate_op126_call_state8)
    begin
                ap_block_state8_on_subcall_done <= (((grp_scaled_fixed2ieee_fu_344_ap_done = ap_const_logic_0) and (ap_predicate_op126_call_state8 = ap_const_boolean_1)) or ((grp_scaled_fixed2ieee_fu_332_ap_done = ap_const_logic_0) and (ap_predicate_op126_call_state8 = ap_const_boolean_1)));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state8, ap_block_state8_on_subcall_done)
    begin
        if ((((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_c_out_write_assign_phi_fu_308_p20_assign_proc : process(tmp_reg_1017, tmp_s_reg_1021, sel_reg_1130, grp_scaled_fixed2ieee_fu_332_ap_return, grp_scaled_fixed2ieee_fu_344_ap_return, ap_CS_fsm_state8, c_out_write_assign_reg_303, tmp_52_fu_915_p1, tmp_50_fu_945_p1, tmp_48_fu_960_p1, tmp_47_fu_975_p1)
    begin
        if (((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_2))) then 
            ap_phi_mux_c_out_write_assign_phi_fu_308_p20 <= tmp_47_fu_975_p1;
        elsif (((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_3))) then 
            ap_phi_mux_c_out_write_assign_phi_fu_308_p20 <= tmp_48_fu_960_p1;
        elsif (((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_4))) then 
            ap_phi_mux_c_out_write_assign_phi_fu_308_p20 <= tmp_50_fu_945_p1;
        elsif (((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_5))) then 
            ap_phi_mux_c_out_write_assign_phi_fu_308_p20 <= tmp_52_fu_915_p1;
        elsif ((((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_1)) or ((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_6)))) then 
            ap_phi_mux_c_out_write_assign_phi_fu_308_p20 <= grp_scaled_fixed2ieee_fu_332_ap_return;
        elsif ((((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_0)) or ((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_7)))) then 
            ap_phi_mux_c_out_write_assign_phi_fu_308_p20 <= grp_scaled_fixed2ieee_fu_344_ap_return;
        else 
            ap_phi_mux_c_out_write_assign_phi_fu_308_p20 <= c_out_write_assign_reg_303;
        end if; 
    end process;


    ap_phi_mux_s_out_write_assign_phi_fu_280_p20_assign_proc : process(tmp_reg_1017, tmp_s_reg_1021, sel_reg_1130, grp_scaled_fixed2ieee_fu_332_ap_return, grp_scaled_fixed2ieee_fu_344_ap_return, tmp_46_fu_990_p1, s_out_write_assign_reg_276, ap_CS_fsm_state8, tmp_53_fu_885_p1, tmp_51_fu_900_p1, tmp_49_fu_930_p1)
    begin
        if ((((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_1)) or ((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_2)))) then 
            ap_phi_mux_s_out_write_assign_phi_fu_280_p20 <= grp_scaled_fixed2ieee_fu_344_ap_return;
        elsif ((((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_0)) or ((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_3)))) then 
            ap_phi_mux_s_out_write_assign_phi_fu_280_p20 <= grp_scaled_fixed2ieee_fu_332_ap_return;
        elsif (((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_4))) then 
            ap_phi_mux_s_out_write_assign_phi_fu_280_p20 <= tmp_49_fu_930_p1;
        elsif (((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_5))) then 
            ap_phi_mux_s_out_write_assign_phi_fu_280_p20 <= tmp_51_fu_900_p1;
        elsif (((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_6))) then 
            ap_phi_mux_s_out_write_assign_phi_fu_280_p20 <= tmp_53_fu_885_p1;
        elsif (((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (sel_reg_1130 = ap_const_lv3_7))) then 
            ap_phi_mux_s_out_write_assign_phi_fu_280_p20 <= tmp_46_fu_990_p1;
        else 
            ap_phi_mux_s_out_write_assign_phi_fu_280_p20 <= s_out_write_assign_reg_276;
        end if; 
    end process;


    ap_predicate_op126_call_state8_assign_proc : process(tmp_reg_1017, tmp_s_reg_1021)
    begin
                ap_predicate_op126_call_state8 <= ((tmp_s_reg_1021 = ap_const_lv1_0) and (tmp_reg_1017 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state8, ap_block_state8_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_phi_mux_s_out_write_assign_phi_fu_280_p20, ap_CS_fsm_state8, ap_block_state8_on_subcall_done, ap_return_0_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ap_return_0 <= ap_phi_mux_s_out_write_assign_phi_fu_280_p20;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_CS_fsm_state8, ap_block_state8_on_subcall_done, ap_phi_mux_c_out_write_assign_phi_fu_308_p20, ap_return_1_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state8_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ap_return_1 <= ap_phi_mux_c_out_write_assign_phi_fu_308_p20;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;

    closepath_fu_390_p2 <= "1" when (unsigned(loc_V_fu_368_p4) < unsigned(ap_const_lv11_3FE)) else "0";
    cordic_ctab_table_12_1_address0 <= tmp_43_fu_808_p1(7 - 1 downto 0);

    cordic_ctab_table_12_1_ce0_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            cordic_ctab_table_12_1_ce0 <= ap_const_logic_1;
        else 
            cordic_ctab_table_12_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    d_V_fu_744_p3 <= p_Val2_19_reg_198(86 downto 86);
    exitcond_i_fu_732_p2 <= "1" when (sh_assign_reg_230 = ap_const_lv7_57) else "0";
    expv_op_fu_410_p2 <= std_logic_vector(signed(ap_const_lv11_44D) + signed(loc_V_fu_368_p4));
    fout_V_fu_661_p3 <= 
        tmp_26_i_fu_649_p2 when (isNeg_fu_619_p3(0) = '1') else 
        tmp_27_i_fu_655_p2;
    grp_fu_477_p0 <= grp_fu_477_p00(53 - 1 downto 0);
    grp_fu_477_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_16_fu_443_p3),223));
    grp_fu_477_p1 <= grp_fu_477_p10(170 - 1 downto 0);
    grp_fu_477_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_fu_459_p4),223));
    grp_scaled_fixed2ieee_fu_332_ap_start <= grp_scaled_fixed2ieee_fu_332_ap_start_reg;
    grp_scaled_fixed2ieee_fu_344_ap_start <= grp_scaled_fixed2ieee_fu_344_ap_start_reg;
    isNeg_fu_619_p3 <= Ex_V_fu_613_p2(7 downto 7);
    k_fu_738_p2 <= std_logic_vector(unsigned(sh_assign_reg_230) + unsigned(ap_const_lv7_1));
    loc_V_fu_368_p4 <= p_Val2_8_fu_356_p1(62 downto 52);
    p_Result_15_fu_406_p1 <= p_Val2_8_fu_356_p1(52 - 1 downto 0);
    p_Result_16_fu_443_p3 <= (ap_const_lv1_1 & p_Result_15_reg_1036);
    p_Result_17_fu_538_p3 <= (p_Result_i2_i_fu_528_p4 & ap_const_lv1_1);
    
    p_Result_18_fu_546_p4_proc : process(p_Result_17_fu_538_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(62+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(62+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(62 - 1 downto 0);
    variable p_Result_18_fu_546_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(62 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(62 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(62 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(6 - 1 downto 0) := ap_const_lv32_3D(6 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(6 - 1 downto 0) := ap_const_lv32_0(6 - 1 downto 0);
        v0_cpy := p_Result_17_fu_538_p3;
        if (vlo_cpy(6 - 1 downto 0) > vhi_cpy(6 - 1 downto 0)) then
            vhi_cpy(6-1 downto 0) := std_logic_vector(62-1-unsigned(ap_const_lv32_0(6-1 downto 0)));
            vlo_cpy(6-1 downto 0) := std_logic_vector(62-1-unsigned(ap_const_lv32_3D(6-1 downto 0)));
            for p_Result_18_fu_546_p4_i in 0 to 62-1 loop
                v0_cpy(p_Result_18_fu_546_p4_i) := p_Result_17_fu_538_p3(62-1-p_Result_18_fu_546_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(6-1 downto 0)))));

        section := (others=>'0');
        section(6-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(6-1 downto 0)) - unsigned(vlo_cpy(6-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(62-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_18_fu_546_p4 <= resvalue(62-1 downto 0);
    end process;

    p_Result_19_fu_556_p3 <= (ap_const_lv2_3 & p_Result_18_fu_546_p4);
    p_Result_i2_i_fu_528_p4 <= p_Val2_15_fu_520_p3(144 downto 84);
    p_Result_i_i_fu_424_p4 <= addr_V_fu_416_p3(10 downto 7);
    p_Val2_13_fu_483_p4 <= grp_fu_477_p2(166 downto 22);
    p_Val2_15_fu_520_p3 <= 
        p_Val2_i_fu_514_p2 when (tmp_36_fu_510_p1(0) = '1') else 
        p_Val2_13_fu_483_p4;
    p_Val2_17_fu_595_p2 <= std_logic_vector(shift_left(unsigned(p_Val2_15_reg_1067),to_integer(unsigned('0' & tmp_19_i_fu_592_p1(31-1 downto 0)))));
    p_Val2_18_fu_712_p0 <= p_Val2_18_fu_712_p00(84 - 1 downto 0);
    p_Val2_18_fu_712_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fout_V_reg_1078),168));
    p_Val2_18_fu_712_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_18_fu_712_p0) * unsigned(ap_const_lv168_lc_2), 168));
    p_Val2_24_fu_503_p3 <= 
        ap_const_lv3_0 when (closepath_reg_1025(0) = '1') else 
        tmp_18_i_fu_493_p4;
    p_Val2_29_cast_fu_824_p4 <= cordic_ctab_table_12_1_q0(125 downto 42);
    p_Val2_8_fu_356_p1 <= t_in;
    p_Val2_i_fu_514_p2 <= std_logic_vector(unsigned(ap_const_lv145_lc_1) - unsigned(p_Val2_13_fu_483_p4));
    p_Val2_s_fu_679_p1 <= p_Val2_s_fu_679_p10(84 - 1 downto 0);
    p_Val2_s_fu_679_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Mx_V_fu_600_p4),168));
    p_Val2_s_fu_679_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_const_lv168_lc_2) * unsigned(p_Val2_s_fu_679_p1), 168));
    r_V_1_i_fu_788_p2 <= std_logic_vector(unsigned(p_Val2_1_reg_208) - unsigned(x_s_V_fu_782_p2));
    r_V_2_i_fu_762_p2 <= std_logic_vector(unsigned(p_Val2_2_reg_219) - unsigned(y_s_V_fu_756_p2));
    r_V_3_i_fu_856_p2 <= std_logic_vector(unsigned(p_Val2_19_reg_198) - unsigned(z_s_V_cast_fu_852_p1));
    r_V_fu_453_p2 <= std_logic_vector(shift_left(unsigned(ref_4oPi_table_256_V_q0),to_integer(unsigned('0' & tmp_4_i_i_fu_450_p1(31-1 downto 0)))));
    r_V_i3_fu_768_p2 <= std_logic_vector(unsigned(p_Val2_2_reg_219) + unsigned(y_s_V_fu_756_p2));
    r_V_i8_fu_794_p2 <= std_logic_vector(unsigned(p_Val2_1_reg_208) + unsigned(x_s_V_fu_782_p2));
    r_V_i_fu_862_p2 <= std_logic_vector(unsigned(p_Val2_19_reg_198) + unsigned(z_s_V_cast_fu_852_p1));
    ref_4oPi_table_256_V_address0 <= tmp_2_i_i_fu_434_p1(4 - 1 downto 0);

    ref_4oPi_table_256_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            ref_4oPi_table_256_V_ce0 <= ap_const_logic_1;
        else 
            ref_4oPi_table_256_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_fu_459_p4 <= r_V_fu_453_p2(255 downto 86);
    sel_fu_818_p3 <= 
        tmp_45_fu_813_p2 when (p_Result_s_reg_1012(0) = '1') else 
        p_Val2_24_reg_1061;
    sh_assign_2_fu_633_p3 <= 
        tmp_24_i_fu_627_p2 when (isNeg_fu_619_p3(0) = '1') else 
        Ex_V_fu_613_p2;
        sh_assign_3_cast_fu_641_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_2_fu_633_p3),32));

        storemerge_i_cast_fu_588_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(storemerge_i_fu_581_p3),8));

    storemerge_i_fu_581_p3 <= 
        tmp_i_cast_fu_576_p2 when (closepath_reg_1025(0) = '1') else 
        ap_const_lv6_0;
    tmp_18_i_fu_493_p4 <= grp_fu_477_p2(169 downto 167);
    tmp_19_i_fu_592_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Mx_zeros_V_reg_1072),145));
    tmp_211_neg_fu_969_p2 <= (tmp_211_to_int_fu_965_p1 xor ap_const_lv64_8000000000000000);
    tmp_211_to_int_fu_965_p1 <= grp_scaled_fixed2ieee_fu_332_ap_return;
    tmp_212_neg_fu_954_p2 <= (tmp_212_to_int_fu_950_p1 xor ap_const_lv64_8000000000000000);
    tmp_212_to_int_fu_950_p1 <= grp_scaled_fixed2ieee_fu_344_ap_return;
    tmp_213_neg_fu_924_p2 <= (tmp_213_to_int_fu_920_p1 xor ap_const_lv64_8000000000000000);
    tmp_213_to_int_fu_920_p1 <= grp_scaled_fixed2ieee_fu_332_ap_return;
    tmp_214_neg_fu_939_p2 <= (tmp_214_to_int_fu_935_p1 xor ap_const_lv64_8000000000000000);
    tmp_214_to_int_fu_935_p1 <= grp_scaled_fixed2ieee_fu_344_ap_return;
    tmp_215_neg_fu_894_p2 <= (tmp_215_to_int_fu_890_p1 xor ap_const_lv64_8000000000000000);
    tmp_215_to_int_fu_890_p1 <= grp_scaled_fixed2ieee_fu_344_ap_return;
    tmp_216_neg_fu_909_p2 <= (tmp_216_to_int_fu_905_p1 xor ap_const_lv64_8000000000000000);
    tmp_216_to_int_fu_905_p1 <= grp_scaled_fixed2ieee_fu_332_ap_return;
    tmp_217_neg_fu_879_p2 <= (tmp_217_to_int_fu_875_p1 xor ap_const_lv64_8000000000000000);
    tmp_217_to_int_fu_875_p1 <= grp_scaled_fixed2ieee_fu_344_ap_return;
    tmp_218_neg_fu_984_p2 <= (tmp_218_to_int_fu_980_p1 xor ap_const_lv64_8000000000000000);
    tmp_218_to_int_fu_980_p1 <= grp_scaled_fixed2ieee_fu_332_ap_return;
    tmp_22_i_cast_fu_610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Mx_zeros_V_reg_1072),8));
    tmp_24_i_fu_627_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(Ex_V_fu_613_p2));
    tmp_25_i_fu_645_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_3_cast_fu_641_p1),84));
    tmp_26_i_fu_649_p2 <= std_logic_vector(shift_right(unsigned(Mx_V_fu_600_p4),to_integer(unsigned('0' & tmp_25_i_fu_645_p1(31-1 downto 0)))));
    tmp_27_i_fu_655_p2 <= std_logic_vector(shift_left(unsigned(Mx_V_fu_600_p4),to_integer(unsigned('0' & tmp_25_i_fu_645_p1(31-1 downto 0)))));
    tmp_2_i_i_fu_434_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_fu_424_p4),64));
    tmp_35_fu_439_p1 <= addr_V_fu_416_p3(7 - 1 downto 0);
    tmp_36_fu_510_p1 <= p_Val2_24_fu_503_p3(1 - 1 downto 0);
    tmp_39_fu_699_p1 <= Ex_V_fu_613_p2(7 - 1 downto 0);
    tmp_3_fu_685_p4 <= p_Val2_s_fu_679_p2(167 downto 84);
    tmp_41_fu_669_p2 <= "1" when (signed(Ex_V_fu_613_p2) < signed(ap_const_lv8_E5)) else "0";
    tmp_42_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_reg_230),87));
    tmp_43_fu_808_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_reg_230),64));
    tmp_44_fu_834_p3 <= cordic_ctab_table_12_1_q0(41 downto 41);
    tmp_45_fu_813_p2 <= (p_Val2_24_reg_1061 xor ap_const_lv3_7);
    tmp_46_fu_990_p1 <= tmp_218_neg_fu_984_p2;
    tmp_47_fu_975_p1 <= tmp_211_neg_fu_969_p2;
    tmp_48_cast_fu_842_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_44_fu_834_p3),84));
    tmp_48_fu_960_p1 <= tmp_212_neg_fu_954_p2;
    tmp_49_fu_930_p1 <= tmp_213_neg_fu_924_p2;
    tmp_4_fu_718_p4 <= p_Val2_18_fu_712_p2(167 downto 84);
    tmp_4_i_i_fu_450_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_35_reg_1046),256));
    tmp_50_fu_945_p1 <= tmp_214_neg_fu_939_p2;
    tmp_51_fu_900_p1 <= tmp_215_neg_fu_894_p2;
    tmp_52_fu_915_p1 <= tmp_216_neg_fu_909_p2;
    tmp_53_fu_885_p1 <= tmp_217_neg_fu_879_p2;
    tmp_fu_378_p2 <= "1" when (loc_V_fu_368_p4 = ap_const_lv11_7FF) else "0";
    
    tmp_i3_i_fu_564_p3_proc : process(p_Result_19_fu_556_p3)
    begin
        tmp_i3_i_fu_564_p3 <= std_logic_vector(to_unsigned(64, 64));
        for i in 0 to 64 - 1 loop
            if p_Result_19_fu_556_p3(i) = '1' then
                tmp_i3_i_fu_564_p3 <= std_logic_vector(to_unsigned(i,64));
                exit;
            end if;
        end loop;
    end process;

    tmp_i_cast_fu_576_p2 <= std_logic_vector(unsigned(ap_const_lv6_3) + unsigned(tmp_1_reg_1031));
    tmp_s_fu_384_p2 <= "1" when (unsigned(loc_V_fu_368_p4) < unsigned(ap_const_lv11_3E4)) else "0";
    tx_V_fu_774_p3 <= 
        r_V_i3_fu_768_p2 when (d_V_fu_744_p3(0) = '1') else 
        r_V_2_i_fu_762_p2;
    ty_V_fu_800_p3 <= 
        r_V_1_i_fu_788_p2 when (d_V_fu_744_p3(0) = '1') else 
        r_V_i8_fu_794_p2;
    tz_V_fu_868_p3 <= 
        r_V_i_fu_862_p2 when (d_V_reg_1110(0) = '1') else 
        r_V_3_i_fu_856_p2;
    x_s_V_fu_782_p2 <= std_logic_vector(shift_right(signed(p_Val2_2_reg_219),to_integer(unsigned('0' & tmp_42_fu_752_p1(31-1 downto 0)))));
    y_V_fu_695_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_685_p4),87));
    y_s_V_fu_756_p2 <= std_logic_vector(shift_right(signed(p_Val2_1_reg_208),to_integer(unsigned('0' & tmp_42_fu_752_p1(31-1 downto 0)))));
    yprescale_V_cast_fu_703_p2 <= std_logic_vector(unsigned(ap_const_lv7_0) - unsigned(tmp_39_fu_699_p1));
    z_V_fu_728_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_718_p4),87));
    z_s_V_cast_fu_852_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z_s_V_fu_846_p2),87));
    z_s_V_fu_846_p2 <= std_logic_vector(unsigned(tmp_48_cast_fu_842_p1) + unsigned(p_Val2_29_cast_fu_824_p4));
end behav;
