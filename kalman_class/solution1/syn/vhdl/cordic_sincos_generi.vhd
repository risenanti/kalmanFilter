-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.1
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cordic_sincos_generi is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    t_in : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of cordic_sincos_generi is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv43_0 : STD_LOGIC_VECTOR (42 downto 0) := "0000000000000000000000000000000000000000000";
    constant ap_const_lv43_9B74EDA843 : STD_LOGIC_VECTOR (42 downto 0) := "0001001101101110100111011011010100001000011";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv43_10000000000 : STD_LOGIC_VECTOR (42 downto 0) := "0010000000000000000000000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv32_3F800000 : STD_LOGIC_VECTOR (31 downto 0) := "00111111100000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_73 : STD_LOGIC_VECTOR (7 downto 0) := "01110011";
    constant ap_const_lv8_7E : STD_LOGIC_VECTOR (7 downto 0) := "01111110";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv8_C2 : STD_LOGIC_VECTOR (7 downto 0) := "11000010";
    constant ap_const_lv8_3F : STD_LOGIC_VECTOR (7 downto 0) := "00111111";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_63 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv69_0 : STD_LOGIC_VECTOR (68 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv7_74 : STD_LOGIC_VECTOR (6 downto 0) := "1110100";
    constant ap_const_lv80_C90FDAA221 : STD_LOGIC_VECTOR (79 downto 0) := "00000000000000000000000000000000000000001100100100001111110110101010001000100001";
    constant ap_const_lv6_2B : STD_LOGIC_VECTOR (5 downto 0) := "101011";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv32_7D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111101";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ref_4oPi_table_100_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ref_4oPi_table_100_V_ce0 : STD_LOGIC;
    signal ref_4oPi_table_100_V_q0 : STD_LOGIC_VECTOR (99 downto 0);
    signal cordic_ctab_table_12_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal cordic_ctab_table_12_1_ce0 : STD_LOGIC;
    signal cordic_ctab_table_12_1_q0 : STD_LOGIC_VECTOR (125 downto 0);
    signal p_Result_s_reg_1024 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1029 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_reg_1033 : STD_LOGIC_VECTOR (0 downto 0);
    signal closepath_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal closepath_reg_1037 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_1043 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_Result_9_fu_418_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Result_9_reg_1048 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_34_fu_451_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_34_reg_1058 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Val2_13_reg_1063 : STD_LOGIC_VECTOR (68 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tmp_16_i_reg_1069 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Val2_23_fu_531_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_Val2_23_reg_1074 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal fout_V_fu_673_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal fout_V_reg_1080 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_37_fu_681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_reg_1085 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_V_fu_707_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal yprescale_V_cast_fu_715_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal z_V_fu_740_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal k_fu_750_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal k_reg_1107 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal d_V_fu_756_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal d_V_reg_1112 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tx_V_fu_786_p3 : STD_LOGIC_VECTOR (42 downto 0);
    signal tx_V_reg_1117 : STD_LOGIC_VECTOR (42 downto 0);
    signal ty_V_fu_812_p3 : STD_LOGIC_VECTOR (42 downto 0);
    signal ty_V_reg_1122 : STD_LOGIC_VECTOR (42 downto 0);
    signal sel_fu_830_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal sel_reg_1132 : STD_LOGIC_VECTOR (2 downto 0);
    signal tz_V_fu_880_p3 : STD_LOGIC_VECTOR (42 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_scaled_fixed2ieee_fu_344_ap_start : STD_LOGIC;
    signal grp_scaled_fixed2ieee_fu_344_ap_done : STD_LOGIC;
    signal grp_scaled_fixed2ieee_fu_344_ap_idle : STD_LOGIC;
    signal grp_scaled_fixed2ieee_fu_344_ap_ready : STD_LOGIC;
    signal grp_scaled_fixed2ieee_fu_344_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scaled_fixed2ieee_fu_356_ap_start : STD_LOGIC;
    signal grp_scaled_fixed2ieee_fu_356_ap_done : STD_LOGIC;
    signal grp_scaled_fixed2ieee_fu_356_ap_idle : STD_LOGIC;
    signal grp_scaled_fixed2ieee_fu_356_ap_ready : STD_LOGIC;
    signal grp_scaled_fixed2ieee_fu_356_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_18_reg_210 : STD_LOGIC_VECTOR (42 downto 0);
    signal p_Val2_1_reg_220 : STD_LOGIC_VECTOR (42 downto 0);
    signal p_Val2_2_reg_231 : STD_LOGIC_VECTOR (42 downto 0);
    signal sh_assign_reg_242 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0_reg_253 : STD_LOGIC_VECTOR (42 downto 0);
    signal p_1_reg_266 : STD_LOGIC_VECTOR (42 downto 0);
    signal p_s_reg_277 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_43_fu_1002_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_s_out_write_assign_phi_fu_292_p20 : STD_LOGIC_VECTOR (31 downto 0);
    signal s_out_write_assign_reg_288 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_predicate_op125_call_state7 : BOOLEAN;
    signal ap_block_state7_on_subcall_done : BOOLEAN;
    signal tmp_50_fu_897_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_912_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_942_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_c_out_write_assign_phi_fu_320_p20 : STD_LOGIC_VECTOR (31 downto 0);
    signal c_out_write_assign_reg_315 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_fu_927_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_fu_957_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_fu_972_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_fu_987_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scaled_fixed2ieee_fu_344_ap_start_reg : STD_LOGIC := '0';
    signal grp_scaled_fixed2ieee_fu_356_ap_start_reg : STD_LOGIC := '0';
    signal tmp_5_i_i_fu_446_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_40_fu_820_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Val2_7_fu_368_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal loc_V_fu_380_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal expv_op_fu_422_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal addr_V_fu_428_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_fu_436_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_7_i_i_fu_462_p1 : STD_LOGIC_VECTOR (99 downto 0);
    signal r_V_fu_465_p2 : STD_LOGIC_VECTOR (99 downto 0);
    signal Med_V_fu_471_p4 : STD_LOGIC_VECTOR (79 downto 0);
    signal p_Result_10_fu_455_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_1_fu_489_p0 : STD_LOGIC_VECTOR (79 downto 0);
    signal r_V_1_fu_489_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal r_V_1_fu_489_p2 : STD_LOGIC_VECTOR (103 downto 0);
    signal p_i_cast_fu_515_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal storemerge_i_fu_520_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_35_fu_537_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_i_fu_541_p2 : STD_LOGIC_VECTOR (68 downto 0);
    signal p_Val2_15_fu_546_p3 : STD_LOGIC_VECTOR (68 downto 0);
    signal p_Result_i2_i_fu_553_p4 : STD_LOGIC_VECTOR (28 downto 0);
    signal p_Result_11_fu_563_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Result_12_fu_571_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_Result_13_fu_581_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_assign_fu_589_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal Mx_zeros_V_fu_597_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_17_i_fu_601_p1 : STD_LOGIC_VECTOR (68 downto 0);
    signal p_Val2_17_fu_605_p2 : STD_LOGIC_VECTOR (68 downto 0);
    signal storemerge_i_cast_fu_527_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_20_i_cast_fu_621_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal Ex_V_fu_625_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal isNeg_fu_631_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_i_fu_639_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sh_assign_2_fu_645_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal sh_assign_3_cast_fu_653_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Mx_V_fu_611_p4 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_23_i_fu_657_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_24_i_fu_661_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_25_i_fu_667_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_Val2_9_fu_691_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_Val2_9_fu_691_p2 : STD_LOGIC_VECTOR (79 downto 0);
    signal tmp_14_fu_697_p4 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_39_fu_711_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_Val2_s_fu_724_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_Val2_s_fu_724_p2 : STD_LOGIC_VECTOR (79 downto 0);
    signal tmp_15_fu_730_p4 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_38_fu_764_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal y_s_V_fu_768_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal r_V_i2_fu_780_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal r_V_4_i_fu_774_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal x_s_V_fu_794_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal r_V_1_i_fu_800_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal r_V_i7_fu_806_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_42_fu_825_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_41_fu_846_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_cast_fu_854_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_Val2_27_cast_fu_836_p4 : STD_LOGIC_VECTOR (39 downto 0);
    signal z_s_V_fu_858_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal z_s_V_cast_fu_864_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal r_V_i_fu_874_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal r_V_5_i_fu_868_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_218_to_int_fu_887_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_218_neg_fu_891_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_216_to_int_fu_902_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_216_neg_fu_906_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_217_to_int_fu_917_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_217_neg_fu_921_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_214_to_int_fu_932_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_214_neg_fu_936_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_215_to_int_fu_947_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_215_neg_fu_951_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_213_to_int_fu_962_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_213_neg_fu_966_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_212_to_int_fu_977_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_212_neg_fu_981_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_219_to_int_fu_992_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_219_neg_fu_996_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_return_0_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_return_1_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Val2_9_fu_691_p10 : STD_LOGIC_VECTOR (79 downto 0);
    signal p_Val2_s_fu_724_p00 : STD_LOGIC_VECTOR (79 downto 0);
    signal r_V_1_fu_489_p00 : STD_LOGIC_VECTOR (103 downto 0);
    signal r_V_1_fu_489_p10 : STD_LOGIC_VECTOR (103 downto 0);

    component scaled_fixed2ieee IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_V : IN STD_LOGIC_VECTOR (42 downto 0);
        prescale : IN STD_LOGIC_VECTOR (5 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component cordic_sincos_geneOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (99 downto 0) );
    end component;


    component cordic_sincos_genfYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (125 downto 0) );
    end component;



begin
    ref_4oPi_table_100_V_U : component cordic_sincos_geneOg
    generic map (
        DataWidth => 100,
        AddressRange => 13,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ref_4oPi_table_100_V_address0,
        ce0 => ref_4oPi_table_100_V_ce0,
        q0 => ref_4oPi_table_100_V_q0);

    cordic_ctab_table_12_1_U : component cordic_sincos_genfYi
    generic map (
        DataWidth => 126,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cordic_ctab_table_12_1_address0,
        ce0 => cordic_ctab_table_12_1_ce0,
        q0 => cordic_ctab_table_12_1_q0);

    grp_scaled_fixed2ieee_fu_344 : component scaled_fixed2ieee
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_scaled_fixed2ieee_fu_344_ap_start,
        ap_done => grp_scaled_fixed2ieee_fu_344_ap_done,
        ap_idle => grp_scaled_fixed2ieee_fu_344_ap_idle,
        ap_ready => grp_scaled_fixed2ieee_fu_344_ap_ready,
        in_V => p_1_reg_266,
        prescale => p_s_reg_277,
        ap_return => grp_scaled_fixed2ieee_fu_344_ap_return);

    grp_scaled_fixed2ieee_fu_356 : component scaled_fixed2ieee
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_scaled_fixed2ieee_fu_356_ap_start,
        ap_done => grp_scaled_fixed2ieee_fu_356_ap_done,
        ap_idle => grp_scaled_fixed2ieee_fu_356_ap_idle,
        ap_ready => grp_scaled_fixed2ieee_fu_356_ap_ready,
        in_V => p_0_reg_253,
        prescale => ap_const_lv6_0,
        ap_return => grp_scaled_fixed2ieee_fu_356_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_0_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_0_preg <= ap_const_lv32_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done))) then 
                    ap_return_0_preg <= ap_phi_mux_s_out_write_assign_phi_fu_292_p20;
                end if; 
            end if;
        end if;
    end process;


    ap_return_1_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_1_preg <= ap_const_lv32_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done))) then 
                    ap_return_1_preg <= ap_phi_mux_c_out_write_assign_phi_fu_320_p20;
                end if; 
            end if;
        end if;
    end process;


    grp_scaled_fixed2ieee_fu_344_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_scaled_fixed2ieee_fu_344_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and ((exitcond_i_fu_744_p2 = ap_const_lv1_1) or (tmp_37_reg_1085 = ap_const_lv1_1)))) then 
                    grp_scaled_fixed2ieee_fu_344_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_scaled_fixed2ieee_fu_344_ap_ready = ap_const_logic_1)) then 
                    grp_scaled_fixed2ieee_fu_344_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_scaled_fixed2ieee_fu_356_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_scaled_fixed2ieee_fu_356_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and ((exitcond_i_fu_744_p2 = ap_const_lv1_1) or (tmp_37_reg_1085 = ap_const_lv1_1)))) then 
                    grp_scaled_fixed2ieee_fu_356_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_scaled_fixed2ieee_fu_356_ap_ready = ap_const_logic_1)) then 
                    grp_scaled_fixed2ieee_fu_356_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    c_out_write_assign_reg_315_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_fu_390_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                c_out_write_assign_reg_315 <= ap_const_lv32_7FFFFFFF;
            elsif (((tmp_36_fu_396_p2 = ap_const_lv1_1) and (tmp_s_fu_390_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                c_out_write_assign_reg_315 <= ap_const_lv32_3F800000;
            elsif (((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (sel_reg_1132 = ap_const_lv3_2))) then 
                c_out_write_assign_reg_315 <= tmp_44_fu_987_p1;
            elsif (((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (sel_reg_1132 = ap_const_lv3_3))) then 
                c_out_write_assign_reg_315 <= tmp_45_fu_972_p1;
            elsif (((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (sel_reg_1132 = ap_const_lv3_4))) then 
                c_out_write_assign_reg_315 <= tmp_47_fu_957_p1;
            elsif (((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (sel_reg_1132 = ap_const_lv3_5))) then 
                c_out_write_assign_reg_315 <= tmp_49_fu_927_p1;
            elsif ((((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (sel_reg_1132 = ap_const_lv3_1)) or ((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (sel_reg_1132 = ap_const_lv3_6)))) then 
                c_out_write_assign_reg_315 <= grp_scaled_fixed2ieee_fu_344_ap_return;
            elsif ((((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (sel_reg_1132 = ap_const_lv3_0)) or ((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (sel_reg_1132 = ap_const_lv3_7)))) then 
                c_out_write_assign_reg_315 <= grp_scaled_fixed2ieee_fu_356_ap_return;
            end if; 
        end if;
    end process;

    p_0_reg_253_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_fu_744_p2 = ap_const_lv1_1) and (tmp_37_reg_1085 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                p_0_reg_253 <= p_Val2_2_reg_231;
            elsif (((tmp_37_fu_681_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                p_0_reg_253 <= ap_const_lv43_10000000000;
            end if; 
        end if;
    end process;

    p_1_reg_266_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_fu_744_p2 = ap_const_lv1_1) and (tmp_37_reg_1085 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                p_1_reg_266 <= p_Val2_1_reg_220;
            elsif (((tmp_37_fu_681_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                p_1_reg_266 <= y_V_fu_707_p1;
            end if; 
        end if;
    end process;

    p_Val2_18_reg_210_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                p_Val2_18_reg_210 <= tz_V_fu_880_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_Val2_18_reg_210 <= z_V_fu_740_p1;
            end if; 
        end if;
    end process;

    p_Val2_1_reg_220_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                p_Val2_1_reg_220 <= ty_V_reg_1122;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_Val2_1_reg_220 <= ap_const_lv43_0;
            end if; 
        end if;
    end process;

    p_Val2_2_reg_231_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                p_Val2_2_reg_231 <= tx_V_reg_1117;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                p_Val2_2_reg_231 <= ap_const_lv43_9B74EDA843;
            end if; 
        end if;
    end process;

    p_s_reg_277_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_fu_744_p2 = ap_const_lv1_1) and (tmp_37_reg_1085 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                p_s_reg_277 <= ap_const_lv6_0;
            elsif (((tmp_37_fu_681_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                p_s_reg_277 <= yprescale_V_cast_fu_715_p2;
            end if; 
        end if;
    end process;

    s_out_write_assign_reg_288_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_fu_390_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_out_write_assign_reg_288 <= ap_const_lv32_7FFFFFFF;
            elsif (((tmp_36_fu_396_p2 = ap_const_lv1_1) and (tmp_s_fu_390_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                s_out_write_assign_reg_288 <= t_in;
            elsif ((((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (sel_reg_1132 = ap_const_lv3_1)) or ((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (sel_reg_1132 = ap_const_lv3_2)))) then 
                s_out_write_assign_reg_288 <= grp_scaled_fixed2ieee_fu_356_ap_return;
            elsif ((((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (sel_reg_1132 = ap_const_lv3_0)) or ((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (sel_reg_1132 = ap_const_lv3_3)))) then 
                s_out_write_assign_reg_288 <= grp_scaled_fixed2ieee_fu_344_ap_return;
            elsif (((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (sel_reg_1132 = ap_const_lv3_4))) then 
                s_out_write_assign_reg_288 <= tmp_46_fu_942_p1;
            elsif (((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (sel_reg_1132 = ap_const_lv3_5))) then 
                s_out_write_assign_reg_288 <= tmp_48_fu_912_p1;
            elsif (((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (sel_reg_1132 = ap_const_lv3_6))) then 
                s_out_write_assign_reg_288 <= tmp_50_fu_897_p1;
            elsif (((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done) and (sel_reg_1132 = ap_const_lv3_7))) then 
                s_out_write_assign_reg_288 <= tmp_43_fu_1002_p1;
            end if; 
        end if;
    end process;

    sh_assign_reg_242_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                sh_assign_reg_242 <= k_reg_1107;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                sh_assign_reg_242 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_36_fu_396_p2 = ap_const_lv1_0) and (tmp_s_fu_390_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                closepath_reg_1037 <= closepath_fu_402_p2;
                p_Result_9_reg_1048 <= p_Result_9_fu_418_p1;
                tmp_34_reg_1058 <= tmp_34_fu_451_p1;
                tmp_reg_1043 <= p_Val2_7_fu_368_p1(27 downto 23);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_37_reg_1085 = ap_const_lv1_0) and (exitcond_i_fu_744_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                d_V_reg_1112 <= p_Val2_18_reg_210(42 downto 42);
                tx_V_reg_1117 <= tx_V_fu_786_p3;
                ty_V_reg_1122 <= ty_V_fu_812_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                fout_V_reg_1080 <= fout_V_fu_673_p3;
                p_Val2_23_reg_1074 <= p_Val2_23_fu_531_p3;
                tmp_37_reg_1085 <= tmp_37_fu_681_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_37_reg_1085 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                k_reg_1107 <= k_fu_750_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                p_Result_s_reg_1024 <= p_Val2_7_fu_368_p1(31 downto 31);
                tmp_s_reg_1029 <= tmp_s_fu_390_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                p_Val2_13_reg_1063 <= r_V_1_fu_489_p2(76 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and ((exitcond_i_fu_744_p2 = ap_const_lv1_1) or (tmp_37_reg_1085 = ap_const_lv1_1)))) then
                sel_reg_1132 <= sel_fu_830_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((closepath_reg_1037 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp_16_i_reg_1069 <= r_V_1_fu_489_p2(79 downto 77);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_fu_390_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                tmp_36_reg_1033 <= tmp_36_fu_396_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, tmp_s_fu_390_p2, tmp_36_fu_396_p2, ap_CS_fsm_state3, tmp_37_fu_681_p2, tmp_37_reg_1085, ap_CS_fsm_state5, exitcond_i_fu_744_p2, ap_CS_fsm_state7, ap_block_state7_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((tmp_36_fu_396_p2 = ap_const_lv1_0) and (tmp_s_fu_390_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1) and ((tmp_36_fu_396_p2 = ap_const_lv1_1) or (tmp_s_fu_390_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((tmp_37_fu_681_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and ((exitcond_i_fu_744_p2 = ap_const_lv1_1) or (tmp_37_reg_1085 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    Ex_V_fu_625_p2 <= std_logic_vector(signed(storemerge_i_cast_fu_527_p1) - signed(tmp_20_i_cast_fu_621_p1));
    Med_V_fu_471_p4 <= r_V_fu_465_p2(99 downto 20);
    Mx_V_fu_611_p4 <= p_Val2_17_fu_605_p2(68 downto 29);
    Mx_zeros_V_fu_597_p1 <= val_assign_fu_589_p3(5 - 1 downto 0);
    addr_V_fu_428_p3 <= 
        ap_const_lv8_3F when (closepath_fu_402_p2(0) = '1') else 
        expv_op_fu_422_p2;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);

    ap_block_state7_on_subcall_done_assign_proc : process(grp_scaled_fixed2ieee_fu_344_ap_done, grp_scaled_fixed2ieee_fu_356_ap_done, ap_predicate_op125_call_state7)
    begin
                ap_block_state7_on_subcall_done <= (((grp_scaled_fixed2ieee_fu_356_ap_done = ap_const_logic_0) and (ap_predicate_op125_call_state7 = ap_const_boolean_1)) or ((grp_scaled_fixed2ieee_fu_344_ap_done = ap_const_logic_0) and (ap_predicate_op125_call_state7 = ap_const_boolean_1)));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state7, ap_block_state7_on_subcall_done)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_c_out_write_assign_phi_fu_320_p20_assign_proc : process(tmp_s_reg_1029, tmp_36_reg_1033, sel_reg_1132, grp_scaled_fixed2ieee_fu_344_ap_return, grp_scaled_fixed2ieee_fu_356_ap_return, ap_CS_fsm_state7, c_out_write_assign_reg_315, tmp_49_fu_927_p1, tmp_47_fu_957_p1, tmp_45_fu_972_p1, tmp_44_fu_987_p1)
    begin
        if (((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (sel_reg_1132 = ap_const_lv3_2))) then 
            ap_phi_mux_c_out_write_assign_phi_fu_320_p20 <= tmp_44_fu_987_p1;
        elsif (((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (sel_reg_1132 = ap_const_lv3_3))) then 
            ap_phi_mux_c_out_write_assign_phi_fu_320_p20 <= tmp_45_fu_972_p1;
        elsif (((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (sel_reg_1132 = ap_const_lv3_4))) then 
            ap_phi_mux_c_out_write_assign_phi_fu_320_p20 <= tmp_47_fu_957_p1;
        elsif (((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (sel_reg_1132 = ap_const_lv3_5))) then 
            ap_phi_mux_c_out_write_assign_phi_fu_320_p20 <= tmp_49_fu_927_p1;
        elsif ((((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (sel_reg_1132 = ap_const_lv3_1)) or ((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (sel_reg_1132 = ap_const_lv3_6)))) then 
            ap_phi_mux_c_out_write_assign_phi_fu_320_p20 <= grp_scaled_fixed2ieee_fu_344_ap_return;
        elsif ((((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (sel_reg_1132 = ap_const_lv3_0)) or ((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (sel_reg_1132 = ap_const_lv3_7)))) then 
            ap_phi_mux_c_out_write_assign_phi_fu_320_p20 <= grp_scaled_fixed2ieee_fu_356_ap_return;
        else 
            ap_phi_mux_c_out_write_assign_phi_fu_320_p20 <= c_out_write_assign_reg_315;
        end if; 
    end process;


    ap_phi_mux_s_out_write_assign_phi_fu_292_p20_assign_proc : process(tmp_s_reg_1029, tmp_36_reg_1033, sel_reg_1132, grp_scaled_fixed2ieee_fu_344_ap_return, grp_scaled_fixed2ieee_fu_356_ap_return, tmp_43_fu_1002_p1, s_out_write_assign_reg_288, ap_CS_fsm_state7, tmp_50_fu_897_p1, tmp_48_fu_912_p1, tmp_46_fu_942_p1)
    begin
        if ((((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (sel_reg_1132 = ap_const_lv3_1)) or ((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (sel_reg_1132 = ap_const_lv3_2)))) then 
            ap_phi_mux_s_out_write_assign_phi_fu_292_p20 <= grp_scaled_fixed2ieee_fu_356_ap_return;
        elsif ((((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (sel_reg_1132 = ap_const_lv3_0)) or ((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (sel_reg_1132 = ap_const_lv3_3)))) then 
            ap_phi_mux_s_out_write_assign_phi_fu_292_p20 <= grp_scaled_fixed2ieee_fu_344_ap_return;
        elsif (((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (sel_reg_1132 = ap_const_lv3_4))) then 
            ap_phi_mux_s_out_write_assign_phi_fu_292_p20 <= tmp_46_fu_942_p1;
        elsif (((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (sel_reg_1132 = ap_const_lv3_5))) then 
            ap_phi_mux_s_out_write_assign_phi_fu_292_p20 <= tmp_48_fu_912_p1;
        elsif (((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (sel_reg_1132 = ap_const_lv3_6))) then 
            ap_phi_mux_s_out_write_assign_phi_fu_292_p20 <= tmp_50_fu_897_p1;
        elsif (((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7) and (sel_reg_1132 = ap_const_lv3_7))) then 
            ap_phi_mux_s_out_write_assign_phi_fu_292_p20 <= tmp_43_fu_1002_p1;
        else 
            ap_phi_mux_s_out_write_assign_phi_fu_292_p20 <= s_out_write_assign_reg_288;
        end if; 
    end process;


    ap_predicate_op125_call_state7_assign_proc : process(tmp_s_reg_1029, tmp_36_reg_1033)
    begin
                ap_predicate_op125_call_state7 <= ((tmp_36_reg_1033 = ap_const_lv1_0) and (tmp_s_reg_1029 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state7, ap_block_state7_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_0_assign_proc : process(ap_phi_mux_s_out_write_assign_phi_fu_292_p20, ap_CS_fsm_state7, ap_block_state7_on_subcall_done, ap_return_0_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done))) then 
            ap_return_0 <= ap_phi_mux_s_out_write_assign_phi_fu_292_p20;
        else 
            ap_return_0 <= ap_return_0_preg;
        end if; 
    end process;


    ap_return_1_assign_proc : process(ap_CS_fsm_state7, ap_block_state7_on_subcall_done, ap_phi_mux_c_out_write_assign_phi_fu_320_p20, ap_return_1_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (ap_const_boolean_0 = ap_block_state7_on_subcall_done))) then 
            ap_return_1 <= ap_phi_mux_c_out_write_assign_phi_fu_320_p20;
        else 
            ap_return_1 <= ap_return_1_preg;
        end if; 
    end process;

    closepath_fu_402_p2 <= "1" when (unsigned(loc_V_fu_380_p4) < unsigned(ap_const_lv8_7E)) else "0";
    cordic_ctab_table_12_1_address0 <= tmp_40_fu_820_p1(7 - 1 downto 0);

    cordic_ctab_table_12_1_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            cordic_ctab_table_12_1_ce0 <= ap_const_logic_1;
        else 
            cordic_ctab_table_12_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    d_V_fu_756_p3 <= p_Val2_18_reg_210(42 downto 42);
    exitcond_i_fu_744_p2 <= "1" when (sh_assign_reg_242 = ap_const_lv6_2B) else "0";
    expv_op_fu_422_p2 <= std_logic_vector(signed(ap_const_lv8_C2) + signed(loc_V_fu_380_p4));
    fout_V_fu_673_p3 <= 
        tmp_24_i_fu_661_p2 when (isNeg_fu_631_p3(0) = '1') else 
        tmp_25_i_fu_667_p2;
    grp_scaled_fixed2ieee_fu_344_ap_start <= grp_scaled_fixed2ieee_fu_344_ap_start_reg;
    grp_scaled_fixed2ieee_fu_356_ap_start <= grp_scaled_fixed2ieee_fu_356_ap_start_reg;
    isNeg_fu_631_p3 <= Ex_V_fu_625_p2(6 downto 6);
    k_fu_750_p2 <= std_logic_vector(unsigned(sh_assign_reg_242) + unsigned(ap_const_lv6_1));
    loc_V_fu_380_p4 <= p_Val2_7_fu_368_p1(30 downto 23);
    p_Result_10_fu_455_p3 <= (ap_const_lv1_1 & p_Result_9_reg_1048);
    p_Result_11_fu_563_p3 <= (p_Result_i2_i_fu_553_p4 & ap_const_lv1_1);
    
    p_Result_12_fu_571_p4_proc : process(p_Result_11_fu_563_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(30+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(30+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(30 - 1 downto 0);
    variable p_Result_12_fu_571_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(30 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(30 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(30 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(5 - 1 downto 0) := ap_const_lv32_1D(5 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(5 - 1 downto 0) := ap_const_lv32_0(5 - 1 downto 0);
        v0_cpy := p_Result_11_fu_563_p3;
        if (vlo_cpy(5 - 1 downto 0) > vhi_cpy(5 - 1 downto 0)) then
            vhi_cpy(5-1 downto 0) := std_logic_vector(30-1-unsigned(ap_const_lv32_0(5-1 downto 0)));
            vlo_cpy(5-1 downto 0) := std_logic_vector(30-1-unsigned(ap_const_lv32_1D(5-1 downto 0)));
            for p_Result_12_fu_571_p4_i in 0 to 30-1 loop
                v0_cpy(p_Result_12_fu_571_p4_i) := p_Result_11_fu_563_p3(30-1-p_Result_12_fu_571_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(5-1 downto 0)))));

        section := (others=>'0');
        section(5-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(5-1 downto 0)) - unsigned(vlo_cpy(5-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(30-1 downto 0)))));
        res_mask := res_mask(30-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        p_Result_12_fu_571_p4 <= resvalue(30-1 downto 0);
    end process;

    p_Result_13_fu_581_p3 <= (ap_const_lv2_3 & p_Result_12_fu_571_p4);
    p_Result_9_fu_418_p1 <= p_Val2_7_fu_368_p1(23 - 1 downto 0);
    p_Result_i2_i_fu_553_p4 <= p_Val2_15_fu_546_p3(68 downto 40);
    p_Val2_15_fu_546_p3 <= 
        p_Val2_i_fu_541_p2 when (tmp_35_fu_537_p1(0) = '1') else 
        p_Val2_13_reg_1063;
    p_Val2_17_fu_605_p2 <= std_logic_vector(shift_left(unsigned(p_Val2_15_fu_546_p3),to_integer(unsigned('0' & tmp_17_i_fu_601_p1(31-1 downto 0)))));
    p_Val2_23_fu_531_p3 <= 
        ap_const_lv3_0 when (closepath_reg_1037(0) = '1') else 
        tmp_16_i_reg_1069;
    p_Val2_27_cast_fu_836_p4 <= cordic_ctab_table_12_1_q0(125 downto 86);
    p_Val2_7_fu_368_p1 <= t_in;
    p_Val2_9_fu_691_p1 <= p_Val2_9_fu_691_p10(40 - 1 downto 0);
    p_Val2_9_fu_691_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Mx_V_fu_611_p4),80));
    p_Val2_9_fu_691_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_const_lv80_C90FDAA221) * unsigned(p_Val2_9_fu_691_p1), 80));
    p_Val2_i_fu_541_p2 <= std_logic_vector(unsigned(ap_const_lv69_0) - unsigned(p_Val2_13_reg_1063));
    p_Val2_s_fu_724_p0 <= p_Val2_s_fu_724_p00(40 - 1 downto 0);
    p_Val2_s_fu_724_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(fout_V_reg_1080),80));
    p_Val2_s_fu_724_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_s_fu_724_p0) * unsigned(ap_const_lv80_C90FDAA221), 80));
    p_i_cast_fu_515_p2 <= std_logic_vector(unsigned(ap_const_lv5_3) + unsigned(tmp_reg_1043));
    r_V_1_fu_489_p0 <= r_V_1_fu_489_p00(80 - 1 downto 0);
    r_V_1_fu_489_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Med_V_fu_471_p4),104));
    r_V_1_fu_489_p1 <= r_V_1_fu_489_p10(24 - 1 downto 0);
    r_V_1_fu_489_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_10_fu_455_p3),104));
    r_V_1_fu_489_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_1_fu_489_p0) * unsigned(r_V_1_fu_489_p1), 104));
    r_V_1_i_fu_800_p2 <= std_logic_vector(unsigned(p_Val2_1_reg_220) - unsigned(x_s_V_fu_794_p2));
    r_V_4_i_fu_774_p2 <= std_logic_vector(unsigned(p_Val2_2_reg_231) - unsigned(y_s_V_fu_768_p2));
    r_V_5_i_fu_868_p2 <= std_logic_vector(unsigned(p_Val2_18_reg_210) - unsigned(z_s_V_cast_fu_864_p1));
    r_V_fu_465_p2 <= std_logic_vector(shift_left(unsigned(ref_4oPi_table_100_V_q0),to_integer(unsigned('0' & tmp_7_i_i_fu_462_p1(31-1 downto 0)))));
    r_V_i2_fu_780_p2 <= std_logic_vector(unsigned(p_Val2_2_reg_231) + unsigned(y_s_V_fu_768_p2));
    r_V_i7_fu_806_p2 <= std_logic_vector(unsigned(p_Val2_1_reg_220) + unsigned(x_s_V_fu_794_p2));
    r_V_i_fu_874_p2 <= std_logic_vector(unsigned(p_Val2_18_reg_210) + unsigned(z_s_V_cast_fu_864_p1));
    ref_4oPi_table_100_V_address0 <= tmp_5_i_i_fu_446_p1(4 - 1 downto 0);

    ref_4oPi_table_100_V_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            ref_4oPi_table_100_V_ce0 <= ap_const_logic_1;
        else 
            ref_4oPi_table_100_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    sel_fu_830_p3 <= 
        tmp_42_fu_825_p2 when (p_Result_s_reg_1024(0) = '1') else 
        p_Val2_23_reg_1074;
    sh_assign_2_fu_645_p3 <= 
        tmp_22_i_fu_639_p2 when (isNeg_fu_631_p3(0) = '1') else 
        Ex_V_fu_625_p2;
        sh_assign_3_cast_fu_653_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_assign_2_fu_645_p3),32));

        storemerge_i_cast_fu_527_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(storemerge_i_fu_520_p3),7));

    storemerge_i_fu_520_p3 <= 
        p_i_cast_fu_515_p2 when (closepath_reg_1037(0) = '1') else 
        ap_const_lv5_0;
    tmp_12_fu_436_p4 <= addr_V_fu_428_p3(7 downto 4);
    tmp_14_fu_697_p4 <= p_Val2_9_fu_691_p2(79 downto 40);
    tmp_15_fu_730_p4 <= p_Val2_s_fu_724_p2(79 downto 40);
    tmp_17_i_fu_601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Mx_zeros_V_fu_597_p1),69));
    tmp_20_i_cast_fu_621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Mx_zeros_V_fu_597_p1),7));
    tmp_212_neg_fu_981_p2 <= (tmp_212_to_int_fu_977_p1 xor ap_const_lv32_80000000);
    tmp_212_to_int_fu_977_p1 <= grp_scaled_fixed2ieee_fu_344_ap_return;
    tmp_213_neg_fu_966_p2 <= (tmp_213_to_int_fu_962_p1 xor ap_const_lv32_80000000);
    tmp_213_to_int_fu_962_p1 <= grp_scaled_fixed2ieee_fu_356_ap_return;
    tmp_214_neg_fu_936_p2 <= (tmp_214_to_int_fu_932_p1 xor ap_const_lv32_80000000);
    tmp_214_to_int_fu_932_p1 <= grp_scaled_fixed2ieee_fu_344_ap_return;
    tmp_215_neg_fu_951_p2 <= (tmp_215_to_int_fu_947_p1 xor ap_const_lv32_80000000);
    tmp_215_to_int_fu_947_p1 <= grp_scaled_fixed2ieee_fu_356_ap_return;
    tmp_216_neg_fu_906_p2 <= (tmp_216_to_int_fu_902_p1 xor ap_const_lv32_80000000);
    tmp_216_to_int_fu_902_p1 <= grp_scaled_fixed2ieee_fu_356_ap_return;
    tmp_217_neg_fu_921_p2 <= (tmp_217_to_int_fu_917_p1 xor ap_const_lv32_80000000);
    tmp_217_to_int_fu_917_p1 <= grp_scaled_fixed2ieee_fu_344_ap_return;
    tmp_218_neg_fu_891_p2 <= (tmp_218_to_int_fu_887_p1 xor ap_const_lv32_80000000);
    tmp_218_to_int_fu_887_p1 <= grp_scaled_fixed2ieee_fu_356_ap_return;
    tmp_219_neg_fu_996_p2 <= (tmp_219_to_int_fu_992_p1 xor ap_const_lv32_80000000);
    tmp_219_to_int_fu_992_p1 <= grp_scaled_fixed2ieee_fu_344_ap_return;
    tmp_22_i_fu_639_p2 <= std_logic_vector(unsigned(ap_const_lv7_0) - unsigned(Ex_V_fu_625_p2));
    tmp_23_i_fu_657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_3_cast_fu_653_p1),40));
    tmp_24_i_fu_661_p2 <= std_logic_vector(shift_right(unsigned(Mx_V_fu_611_p4),to_integer(unsigned('0' & tmp_23_i_fu_657_p1(31-1 downto 0)))));
    tmp_25_i_fu_667_p2 <= std_logic_vector(shift_left(unsigned(Mx_V_fu_611_p4),to_integer(unsigned('0' & tmp_23_i_fu_657_p1(31-1 downto 0)))));
    tmp_34_fu_451_p1 <= addr_V_fu_428_p3(4 - 1 downto 0);
    tmp_35_fu_537_p1 <= p_Val2_23_fu_531_p3(1 - 1 downto 0);
    tmp_36_fu_396_p2 <= "1" when (unsigned(loc_V_fu_380_p4) < unsigned(ap_const_lv8_73)) else "0";
    tmp_37_fu_681_p2 <= "1" when (signed(Ex_V_fu_625_p2) < signed(ap_const_lv7_74)) else "0";
    tmp_38_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_reg_242),43));
    tmp_39_fu_711_p1 <= Ex_V_fu_625_p2(6 - 1 downto 0);
    tmp_40_fu_820_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_assign_reg_242),64));
    tmp_41_fu_846_p3 <= cordic_ctab_table_12_1_q0(85 downto 85);
    tmp_42_fu_825_p2 <= (p_Val2_23_reg_1074 xor ap_const_lv3_7);
    tmp_43_fu_1002_p1 <= tmp_219_neg_fu_996_p2;
    tmp_44_fu_987_p1 <= tmp_212_neg_fu_981_p2;
    tmp_45_fu_972_p1 <= tmp_213_neg_fu_966_p2;
    tmp_46_cast_fu_854_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_41_fu_846_p3),40));
    tmp_46_fu_942_p1 <= tmp_214_neg_fu_936_p2;
    tmp_47_fu_957_p1 <= tmp_215_neg_fu_951_p2;
    tmp_48_fu_912_p1 <= tmp_216_neg_fu_906_p2;
    tmp_49_fu_927_p1 <= tmp_217_neg_fu_921_p2;
    tmp_50_fu_897_p1 <= tmp_218_neg_fu_891_p2;
    tmp_5_i_i_fu_446_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_12_fu_436_p4),64));
    tmp_7_i_i_fu_462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_34_reg_1058),100));
    tmp_s_fu_390_p2 <= "1" when (loc_V_fu_380_p4 = ap_const_lv8_FF) else "0";
    tx_V_fu_786_p3 <= 
        r_V_i2_fu_780_p2 when (d_V_fu_756_p3(0) = '1') else 
        r_V_4_i_fu_774_p2;
    ty_V_fu_812_p3 <= 
        r_V_1_i_fu_800_p2 when (d_V_fu_756_p3(0) = '1') else 
        r_V_i7_fu_806_p2;
    tz_V_fu_880_p3 <= 
        r_V_i_fu_874_p2 when (d_V_reg_1112(0) = '1') else 
        r_V_5_i_fu_868_p2;
    
    val_assign_fu_589_p3_proc : process(p_Result_13_fu_581_p3)
    begin
        val_assign_fu_589_p3 <= std_logic_vector(to_unsigned(32, 32));
        for i in 0 to 32 - 1 loop
            if p_Result_13_fu_581_p3(i) = '1' then
                val_assign_fu_589_p3 <= std_logic_vector(to_unsigned(i,32));
                exit;
            end if;
        end loop;
    end process;

    x_s_V_fu_794_p2 <= std_logic_vector(shift_right(signed(p_Val2_2_reg_231),to_integer(unsigned('0' & tmp_38_fu_764_p1(31-1 downto 0)))));
    y_V_fu_707_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_697_p4),43));
    y_s_V_fu_768_p2 <= std_logic_vector(shift_right(signed(p_Val2_1_reg_220),to_integer(unsigned('0' & tmp_38_fu_764_p1(31-1 downto 0)))));
    yprescale_V_cast_fu_715_p2 <= std_logic_vector(unsigned(ap_const_lv6_0) - unsigned(tmp_39_fu_711_p1));
    z_V_fu_740_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_730_p4),43));
    z_s_V_cast_fu_864_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z_s_V_fu_858_p2),43));
    z_s_V_fu_858_p2 <= std_logic_vector(unsigned(tmp_46_cast_fu_854_p1) + unsigned(p_Val2_27_cast_fu_836_p4));
end behav;
