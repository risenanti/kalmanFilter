// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "filter.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic filter::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic filter::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<47> filter::ap_ST_fsm_state1 = "1";
const sc_lv<47> filter::ap_ST_fsm_state2 = "10";
const sc_lv<47> filter::ap_ST_fsm_state3 = "100";
const sc_lv<47> filter::ap_ST_fsm_state4 = "1000";
const sc_lv<47> filter::ap_ST_fsm_state5 = "10000";
const sc_lv<47> filter::ap_ST_fsm_state6 = "100000";
const sc_lv<47> filter::ap_ST_fsm_state7 = "1000000";
const sc_lv<47> filter::ap_ST_fsm_state8 = "10000000";
const sc_lv<47> filter::ap_ST_fsm_state9 = "100000000";
const sc_lv<47> filter::ap_ST_fsm_state10 = "1000000000";
const sc_lv<47> filter::ap_ST_fsm_state11 = "10000000000";
const sc_lv<47> filter::ap_ST_fsm_state12 = "100000000000";
const sc_lv<47> filter::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<47> filter::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<47> filter::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<47> filter::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<47> filter::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<32> filter::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool filter::ap_const_boolean_1 = true;
const sc_lv<32> filter::ap_const_lv32_1 = "1";
const sc_lv<32> filter::ap_const_lv32_5 = "101";
const sc_lv<32> filter::ap_const_lv32_E = "1110";
const sc_lv<32> filter::ap_const_lv32_1A = "11010";
const sc_lv<32> filter::ap_const_lv32_1E = "11110";
const sc_lv<32> filter::ap_const_lv32_28 = "101000";
const sc_lv<32> filter::ap_const_lv32_2A = "101010";
const sc_lv<32> filter::ap_const_lv32_10 = "10000";
const sc_lv<32> filter::ap_const_lv32_14 = "10100";
const sc_lv<32> filter::ap_const_lv32_4 = "100";
const sc_lv<32> filter::ap_const_lv32_8 = "1000";
const sc_lv<32> filter::ap_const_lv32_18 = "11000";
const sc_lv<32> filter::ap_const_lv32_9 = "1001";
const sc_lv<32> filter::ap_const_lv32_22 = "100010";
const sc_lv<32> filter::ap_const_lv32_26 = "100110";
const sc_lv<32> filter::ap_const_lv32_C = "1100";
const sc_lv<32> filter::ap_const_lv32_A = "1010";
const bool filter::ap_const_boolean_0 = false;
const sc_lv<32> filter::ap_const_lv32_3 = "11";
const sc_lv<32> filter::ap_const_lv32_7 = "111";
const sc_lv<32> filter::ap_const_lv32_B = "1011";
const sc_lv<32> filter::ap_const_lv32_F = "1111";
const sc_lv<32> filter::ap_const_lv32_12 = "10010";
const sc_lv<32> filter::ap_const_lv32_13 = "10011";
const sc_lv<32> filter::ap_const_lv32_15 = "10101";
const sc_lv<32> filter::ap_const_lv32_16 = "10110";
const sc_lv<32> filter::ap_const_lv32_1C = "11100";
const sc_lv<32> filter::ap_const_lv32_19 = "11001";
const sc_lv<32> filter::ap_const_lv32_1D = "11101";
const sc_lv<32> filter::ap_const_lv32_1F = "11111";
const sc_lv<32> filter::ap_const_lv32_27 = "100111";
const sc_lv<32> filter::ap_const_lv32_29 = "101001";
const sc_lv<32> filter::ap_const_lv32_2E = "101110";
const sc_lv<32> filter::ap_const_lv32_3F800000 = "111111100000000000000000000000";
const sc_lv<32> filter::ap_const_lv32_2 = "10";
const sc_lv<32> filter::ap_const_lv32_6 = "110";
const sc_lv<32> filter::ap_const_lv32_11 = "10001";
const sc_lv<32> filter::ap_const_lv32_1B = "11011";
const sc_lv<32> filter::ap_const_lv32_23 = "100011";
const sc_lv<32> filter::ap_const_lv32_2B = "101011";
const sc_lv<32> filter::ap_const_lv32_D = "1101";
const sc_lv<32> filter::ap_const_lv32_17 = "10111";
const sc_lv<2> filter::ap_const_lv2_0 = "00";
const sc_lv<2> filter::ap_const_lv2_1 = "1";

filter::filter(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_operator_mul_fu_648 = new operator_mul("grp_operator_mul_fu_648");
    grp_operator_mul_fu_648->ap_clk(ap_clk);
    grp_operator_mul_fu_648->ap_rst(ap_rst);
    grp_operator_mul_fu_648->ap_start(grp_operator_mul_fu_648_ap_start);
    grp_operator_mul_fu_648->ap_done(grp_operator_mul_fu_648_ap_done);
    grp_operator_mul_fu_648->ap_idle(grp_operator_mul_fu_648_ap_idle);
    grp_operator_mul_fu_648->ap_ready(grp_operator_mul_fu_648_ap_ready);
    grp_operator_mul_fu_648->mat3_a1_read(grp_operator_mul_fu_648_mat3_a1_read);
    grp_operator_mul_fu_648->mat3_a2_read(grp_operator_mul_fu_648_mat3_a2_read);
    grp_operator_mul_fu_648->mat3_a3_read(grp_operator_mul_fu_648_mat3_a3_read);
    grp_operator_mul_fu_648->mat3_b1_read(grp_operator_mul_fu_648_mat3_b1_read);
    grp_operator_mul_fu_648->mat3_b2_read(grp_operator_mul_fu_648_mat3_b2_read);
    grp_operator_mul_fu_648->mat3_b3_read(grp_operator_mul_fu_648_mat3_b3_read);
    grp_operator_mul_fu_648->mat3_c1_read(grp_operator_mul_fu_648_mat3_c1_read);
    grp_operator_mul_fu_648->mat3_c2_read(grp_operator_mul_fu_648_mat3_c2_read);
    grp_operator_mul_fu_648->mat3_c3_read(grp_operator_mul_fu_648_mat3_c3_read);
    grp_operator_mul_fu_648->other_a1_read(grp_operator_mul_fu_648_other_a1_read);
    grp_operator_mul_fu_648->other_a2_read(grp_operator_mul_fu_648_other_a2_read);
    grp_operator_mul_fu_648->other_a3_read(grp_operator_mul_fu_648_other_a3_read);
    grp_operator_mul_fu_648->other_b1_read(grp_operator_mul_fu_648_other_b1_read);
    grp_operator_mul_fu_648->other_b2_read(grp_operator_mul_fu_648_other_b2_read);
    grp_operator_mul_fu_648->other_b3_read(grp_operator_mul_fu_648_other_b3_read);
    grp_operator_mul_fu_648->other_c1_read(grp_operator_mul_fu_648_other_c1_read);
    grp_operator_mul_fu_648->other_c2_read(grp_operator_mul_fu_648_other_c2_read);
    grp_operator_mul_fu_648->other_c3_read(grp_operator_mul_fu_648_other_c3_read);
    grp_operator_mul_fu_648->ap_return_0(grp_operator_mul_fu_648_ap_return_0);
    grp_operator_mul_fu_648->ap_return_1(grp_operator_mul_fu_648_ap_return_1);
    grp_operator_mul_fu_648->ap_return_2(grp_operator_mul_fu_648_ap_return_2);
    grp_operator_mul_fu_648->ap_return_3(grp_operator_mul_fu_648_ap_return_3);
    grp_operator_mul_fu_648->ap_return_4(grp_operator_mul_fu_648_ap_return_4);
    grp_operator_mul_fu_648->ap_return_5(grp_operator_mul_fu_648_ap_return_5);
    grp_operator_mul_fu_648->ap_return_6(grp_operator_mul_fu_648_ap_return_6);
    grp_operator_mul_fu_648->ap_return_7(grp_operator_mul_fu_648_ap_return_7);
    grp_operator_mul_fu_648->ap_return_8(grp_operator_mul_fu_648_ap_return_8);
    grp_cordic_sincos_generi_fu_682 = new cordic_sincos_generi("grp_cordic_sincos_generi_fu_682");
    grp_cordic_sincos_generi_fu_682->ap_clk(ap_clk);
    grp_cordic_sincos_generi_fu_682->ap_rst(ap_rst);
    grp_cordic_sincos_generi_fu_682->ap_start(grp_cordic_sincos_generi_fu_682_ap_start);
    grp_cordic_sincos_generi_fu_682->ap_done(grp_cordic_sincos_generi_fu_682_ap_done);
    grp_cordic_sincos_generi_fu_682->ap_idle(grp_cordic_sincos_generi_fu_682_ap_idle);
    grp_cordic_sincos_generi_fu_682->ap_ready(grp_cordic_sincos_generi_fu_682_ap_ready);
    grp_cordic_sincos_generi_fu_682->t_in(reg_872);
    grp_cordic_sincos_generi_fu_682->ap_return_0(grp_cordic_sincos_generi_fu_682_ap_return_0);
    grp_cordic_sincos_generi_fu_682->ap_return_1(grp_cordic_sincos_generi_fu_682_ap_return_1);
    filter_faddfsub_3g8j_U56 = new filter_faddfsub_3g8j<1,4,32,32,32>("filter_faddfsub_3g8j_U56");
    filter_faddfsub_3g8j_U56->clk(ap_clk);
    filter_faddfsub_3g8j_U56->reset(ap_rst);
    filter_faddfsub_3g8j_U56->din0(grp_fu_691_p0);
    filter_faddfsub_3g8j_U56->din1(grp_fu_691_p1);
    filter_faddfsub_3g8j_U56->opcode(grp_fu_691_opcode);
    filter_faddfsub_3g8j_U56->ce(grp_fu_691_ce);
    filter_faddfsub_3g8j_U56->dout(grp_fu_691_p2);
    filter_faddfsub_3g8j_U57 = new filter_faddfsub_3g8j<1,4,32,32,32>("filter_faddfsub_3g8j_U57");
    filter_faddfsub_3g8j_U57->clk(ap_clk);
    filter_faddfsub_3g8j_U57->reset(ap_rst);
    filter_faddfsub_3g8j_U57->din0(grp_fu_697_p0);
    filter_faddfsub_3g8j_U57->din1(grp_fu_697_p1);
    filter_faddfsub_3g8j_U57->opcode(grp_fu_697_opcode);
    filter_faddfsub_3g8j_U57->ce(ap_var_for_const0);
    filter_faddfsub_3g8j_U57->dout(grp_fu_697_p2);
    filter_faddfsub_3g8j_U58 = new filter_faddfsub_3g8j<1,4,32,32,32>("filter_faddfsub_3g8j_U58");
    filter_faddfsub_3g8j_U58->clk(ap_clk);
    filter_faddfsub_3g8j_U58->reset(ap_rst);
    filter_faddfsub_3g8j_U58->din0(grp_fu_702_p0);
    filter_faddfsub_3g8j_U58->din1(grp_fu_702_p1);
    filter_faddfsub_3g8j_U58->opcode(grp_fu_702_opcode);
    filter_faddfsub_3g8j_U58->ce(ap_var_for_const0);
    filter_faddfsub_3g8j_U58->dout(grp_fu_702_p2);
    filter_faddfsub_3g8j_U59 = new filter_faddfsub_3g8j<1,4,32,32,32>("filter_faddfsub_3g8j_U59");
    filter_faddfsub_3g8j_U59->clk(ap_clk);
    filter_faddfsub_3g8j_U59->reset(ap_rst);
    filter_faddfsub_3g8j_U59->din0(grp_fu_707_p0);
    filter_faddfsub_3g8j_U59->din1(grp_fu_707_p1);
    filter_faddfsub_3g8j_U59->opcode(grp_fu_707_opcode);
    filter_faddfsub_3g8j_U59->ce(ap_var_for_const0);
    filter_faddfsub_3g8j_U59->dout(grp_fu_707_p2);
    filter_fsub_32ns_hbi_U60 = new filter_fsub_32ns_hbi<1,4,32,32,32>("filter_fsub_32ns_hbi_U60");
    filter_fsub_32ns_hbi_U60->clk(ap_clk);
    filter_fsub_32ns_hbi_U60->reset(ap_rst);
    filter_fsub_32ns_hbi_U60->din0(tempAdd_b2_reg_1175);
    filter_fsub_32ns_hbi_U60->din1(reg_975);
    filter_fsub_32ns_hbi_U60->ce(ap_var_for_const0);
    filter_fsub_32ns_hbi_U60->dout(grp_fu_725_p2);
    filter_fsub_32ns_hbi_U61 = new filter_fsub_32ns_hbi<1,4,32,32,32>("filter_fsub_32ns_hbi_U61");
    filter_fsub_32ns_hbi_U61->clk(ap_clk);
    filter_fsub_32ns_hbi_U61->reset(ap_rst);
    filter_fsub_32ns_hbi_U61->din0(tempAdd_b3_reg_1207);
    filter_fsub_32ns_hbi_U61->din1(tempMat_b3_reg_1269);
    filter_fsub_32ns_hbi_U61->ce(ap_var_for_const0);
    filter_fsub_32ns_hbi_U61->dout(grp_fu_730_p2);
    filter_fsub_32ns_hbi_U62 = new filter_fsub_32ns_hbi<1,4,32,32,32>("filter_fsub_32ns_hbi_U62");
    filter_fsub_32ns_hbi_U62->clk(ap_clk);
    filter_fsub_32ns_hbi_U62->reset(ap_rst);
    filter_fsub_32ns_hbi_U62->din0(tempAdd_c1_reg_1213);
    filter_fsub_32ns_hbi_U62->din1(tempMat_c1_reg_1274);
    filter_fsub_32ns_hbi_U62->ce(ap_var_for_const0);
    filter_fsub_32ns_hbi_U62->dout(grp_fu_735_p2);
    filter_fsub_32ns_hbi_U63 = new filter_fsub_32ns_hbi<1,4,32,32,32>("filter_fsub_32ns_hbi_U63");
    filter_fsub_32ns_hbi_U63->clk(ap_clk);
    filter_fsub_32ns_hbi_U63->reset(ap_rst);
    filter_fsub_32ns_hbi_U63->din0(tempAdd_c2_reg_1219);
    filter_fsub_32ns_hbi_U63->din1(tempMat_c2_reg_1279);
    filter_fsub_32ns_hbi_U63->ce(ap_var_for_const0);
    filter_fsub_32ns_hbi_U63->dout(grp_fu_740_p2);
    filter_fsub_32ns_hbi_U64 = new filter_fsub_32ns_hbi<1,4,32,32,32>("filter_fsub_32ns_hbi_U64");
    filter_fsub_32ns_hbi_U64->clk(ap_clk);
    filter_fsub_32ns_hbi_U64->reset(ap_rst);
    filter_fsub_32ns_hbi_U64->din0(tempAdd_c3_reg_1235);
    filter_fsub_32ns_hbi_U64->din1(tempMat_c3_reg_1284);
    filter_fsub_32ns_hbi_U64->ce(ap_var_for_const0);
    filter_fsub_32ns_hbi_U64->dout(grp_fu_745_p2);
    filter_fmul_32ns_cud_U65 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U65");
    filter_fmul_32ns_cud_U65->clk(ap_clk);
    filter_fmul_32ns_cud_U65->reset(ap_rst);
    filter_fmul_32ns_cud_U65->din0(grp_fu_750_p0);
    filter_fmul_32ns_cud_U65->din1(grp_fu_750_p1);
    filter_fmul_32ns_cud_U65->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U65->dout(grp_fu_750_p2);
    filter_fmul_32ns_cud_U66 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U66");
    filter_fmul_32ns_cud_U66->clk(ap_clk);
    filter_fmul_32ns_cud_U66->reset(ap_rst);
    filter_fmul_32ns_cud_U66->din0(grp_fu_756_p0);
    filter_fmul_32ns_cud_U66->din1(grp_fu_756_p1);
    filter_fmul_32ns_cud_U66->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U66->dout(grp_fu_756_p2);
    filter_fmul_32ns_cud_U67 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U67");
    filter_fmul_32ns_cud_U67->clk(ap_clk);
    filter_fmul_32ns_cud_U67->reset(ap_rst);
    filter_fmul_32ns_cud_U67->din0(grp_fu_768_p0);
    filter_fmul_32ns_cud_U67->din1(grp_fu_768_p1);
    filter_fmul_32ns_cud_U67->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U67->dout(grp_fu_768_p2);
    filter_fmul_32ns_cud_U68 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U68");
    filter_fmul_32ns_cud_U68->clk(ap_clk);
    filter_fmul_32ns_cud_U68->reset(ap_rst);
    filter_fmul_32ns_cud_U68->din0(grp_fu_772_p0);
    filter_fmul_32ns_cud_U68->din1(grp_fu_772_p1);
    filter_fmul_32ns_cud_U68->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U68->dout(grp_fu_772_p2);
    filter_fmul_32ns_cud_U69 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U69");
    filter_fmul_32ns_cud_U69->clk(ap_clk);
    filter_fmul_32ns_cud_U69->reset(ap_rst);
    filter_fmul_32ns_cud_U69->din0(grp_fu_777_p0);
    filter_fmul_32ns_cud_U69->din1(grp_fu_777_p1);
    filter_fmul_32ns_cud_U69->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U69->dout(grp_fu_777_p2);
    filter_fmul_32ns_cud_U70 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U70");
    filter_fmul_32ns_cud_U70->clk(ap_clk);
    filter_fmul_32ns_cud_U70->reset(ap_rst);
    filter_fmul_32ns_cud_U70->din0(reg_855);
    filter_fmul_32ns_cud_U70->din1(temp2_reg_1252);
    filter_fmul_32ns_cud_U70->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U70->dout(grp_fu_782_p2);
    filter_fmul_32ns_cud_U71 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U71");
    filter_fmul_32ns_cud_U71->clk(ap_clk);
    filter_fmul_32ns_cud_U71->reset(ap_rst);
    filter_fmul_32ns_cud_U71->din0(reg_948);
    filter_fmul_32ns_cud_U71->din1(reg_883);
    filter_fmul_32ns_cud_U71->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U71->dout(grp_fu_786_p2);
    filter_fmul_32ns_cud_U72 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U72");
    filter_fmul_32ns_cud_U72->clk(ap_clk);
    filter_fmul_32ns_cud_U72->reset(ap_rst);
    filter_fmul_32ns_cud_U72->din0(reg_948);
    filter_fmul_32ns_cud_U72->din1(reg_965);
    filter_fmul_32ns_cud_U72->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U72->dout(grp_fu_790_p2);
    filter_fmul_32ns_cud_U73 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U73");
    filter_fmul_32ns_cud_U73->clk(ap_clk);
    filter_fmul_32ns_cud_U73->reset(ap_rst);
    filter_fmul_32ns_cud_U73->din0(reg_948);
    filter_fmul_32ns_cud_U73->din1(temp2_reg_1252);
    filter_fmul_32ns_cud_U73->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U73->dout(grp_fu_794_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_agg_result_A_a1);
    sensitive << ( value_A_a1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_operator_mul_fu_648_ap_done );

    SC_METHOD(thread_agg_result_A_a1_ap_vld);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_operator_mul_fu_648_ap_done );

    SC_METHOD(thread_agg_result_A_a2);
    sensitive << ( value_A_a2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_operator_mul_fu_648_ap_done );

    SC_METHOD(thread_agg_result_A_a2_ap_vld);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_operator_mul_fu_648_ap_done );

    SC_METHOD(thread_agg_result_A_a3);
    sensitive << ( value_A_a3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_operator_mul_fu_648_ap_done );

    SC_METHOD(thread_agg_result_A_a3_ap_vld);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_operator_mul_fu_648_ap_done );

    SC_METHOD(thread_agg_result_A_b1);
    sensitive << ( value_A_b1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_operator_mul_fu_648_ap_done );

    SC_METHOD(thread_agg_result_A_b1_ap_vld);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_operator_mul_fu_648_ap_done );

    SC_METHOD(thread_agg_result_A_b2);
    sensitive << ( value_A_b2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_operator_mul_fu_648_ap_done );

    SC_METHOD(thread_agg_result_A_b2_ap_vld);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_operator_mul_fu_648_ap_done );

    SC_METHOD(thread_agg_result_A_b3);
    sensitive << ( value_A_b3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_operator_mul_fu_648_ap_done );

    SC_METHOD(thread_agg_result_A_b3_ap_vld);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_operator_mul_fu_648_ap_done );

    SC_METHOD(thread_agg_result_A_c1);
    sensitive << ( value_A_c1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_operator_mul_fu_648_ap_done );

    SC_METHOD(thread_agg_result_A_c1_ap_vld);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_operator_mul_fu_648_ap_done );

    SC_METHOD(thread_agg_result_A_c2);
    sensitive << ( value_A_c2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_operator_mul_fu_648_ap_done );

    SC_METHOD(thread_agg_result_A_c2_ap_vld);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_operator_mul_fu_648_ap_done );

    SC_METHOD(thread_agg_result_A_c3);
    sensitive << ( value_A_c3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_operator_mul_fu_648_ap_done );

    SC_METHOD(thread_agg_result_A_c3_ap_vld);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_operator_mul_fu_648_ap_done );

    SC_METHOD(thread_agg_result_H0);
    sensitive << ( reg_843 );
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_agg_result_H0_ap_vld);
    sensitive << ( ap_CS_fsm_state26 );

    SC_METHOD(thread_agg_result_H1);
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_agg_result_H1_ap_vld);
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_agg_result_H2);
    sensitive << ( s_out_reg_1123 );
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_agg_result_H2_ap_vld);
    sensitive << ( ap_CS_fsm_state30 );

    SC_METHOD(thread_agg_result_K0);
    sensitive << ( reg_883 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_agg_result_K0_ap_vld);
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_agg_result_K1);
    sensitive << ( reg_965 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_agg_result_K1_ap_vld);
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_agg_result_K2);
    sensitive << ( temp2_reg_1252 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_agg_result_K2_ap_vld);
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_agg_result_M0);
    sensitive << ( value_M0_buf_assign_5_reg_1262 );
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_agg_result_M0_ap_vld);
    sensitive << ( ap_CS_fsm_state32 );

    SC_METHOD(thread_agg_result_M1);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( grp_fu_697_p2 );

    SC_METHOD(thread_agg_result_M1_ap_vld);
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_agg_result_M2);
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( grp_fu_702_p2 );

    SC_METHOD(thread_agg_result_M2_ap_vld);
    sensitive << ( ap_CS_fsm_state35 );

    SC_METHOD(thread_agg_result_MU);
    sensitive << ( reg_864 );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_agg_result_MU_ap_vld);
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_agg_result_P_a1);
    sensitive << ( grp_fu_691_p2 );
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_agg_result_P_a1_ap_vld);
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_agg_result_P_a2);
    sensitive << ( grp_fu_697_p2 );
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_agg_result_P_a2_ap_vld);
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_agg_result_P_a3);
    sensitive << ( grp_fu_702_p2 );
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_agg_result_P_a3_ap_vld);
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_agg_result_P_b1);
    sensitive << ( grp_fu_707_p2 );
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_agg_result_P_b1_ap_vld);
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_agg_result_P_b2);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_fu_725_p2 );

    SC_METHOD(thread_agg_result_P_b2_ap_vld);
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_agg_result_P_b3);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_fu_730_p2 );

    SC_METHOD(thread_agg_result_P_b3_ap_vld);
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_agg_result_P_c1);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_fu_735_p2 );

    SC_METHOD(thread_agg_result_P_c1_ap_vld);
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_agg_result_P_c2);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_fu_740_p2 );

    SC_METHOD(thread_agg_result_P_c2_ap_vld);
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_agg_result_P_c3);
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( grp_fu_745_p2 );

    SC_METHOD(thread_agg_result_P_c3_ap_vld);
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_agg_result_Q_a1);
    sensitive << ( value_Q_a1 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_agg_result_Q_a1_ap_vld);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_agg_result_Q_a2);
    sensitive << ( value_Q_a2 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_agg_result_Q_a2_ap_vld);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_agg_result_Q_a3);
    sensitive << ( value_Q_a3 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_agg_result_Q_a3_ap_vld);
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_agg_result_Q_b1);
    sensitive << ( value_Q_b1 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_agg_result_Q_b1_ap_vld);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_agg_result_Q_b2);
    sensitive << ( value_Q_b2 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_agg_result_Q_b2_ap_vld);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_agg_result_Q_b3);
    sensitive << ( value_Q_b3 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_agg_result_Q_b3_ap_vld);
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_agg_result_Q_c1);
    sensitive << ( value_Q_c1 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_agg_result_Q_c1_ap_vld);
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_agg_result_Q_c2);
    sensitive << ( value_Q_c2 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_agg_result_Q_c2_ap_vld);
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_agg_result_Q_c3);
    sensitive << ( value_Q_c3 );
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_agg_result_Q_c3_ap_vld);
    sensitive << ( ap_CS_fsm_state20 );

    SC_METHOD(thread_agg_result_S);
    sensitive << ( reg_872 );
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_agg_result_S_ap_vld);
    sensitive << ( ap_CS_fsm_state40 );

    SC_METHOD(thread_agg_result_Y);
    sensitive << ( value_Y );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_agg_result_Y_ap_vld);
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state28);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state32);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state40);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state11_on_subcall_done);
    sensitive << ( grp_operator_mul_fu_648_ap_done );
    sensitive << ( grp_cordic_sincos_generi_fu_682_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_grp_cordic_sincos_generi_fu_682_ap_start);
    sensitive << ( grp_cordic_sincos_generi_fu_682_ap_start_reg );

    SC_METHOD(thread_grp_fu_691_ce);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_operator_mul_fu_648_ap_done );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_block_state11_on_subcall_done );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_grp_fu_691_opcode);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_grp_fu_691_p0);
    sensitive << ( reg_843 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( reg_864 );
    sensitive << ( reg_872 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( reg_883 );
    sensitive << ( reg_894 );
    sensitive << ( reg_906 );
    sensitive << ( reg_942 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tempAdd_a1_reg_1157 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( tmp_25_reg_1241 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_grp_fu_691_p1);
    sensitive << ( value_Q_a1 );
    sensitive << ( value_Q_a3 );
    sensitive << ( value_Q_c3 );
    sensitive << ( reg_843 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( reg_855 );
    sensitive << ( reg_864 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( tmp_12_reg_1044 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state36 );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_grp_fu_697_opcode);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_grp_fu_697_p0);
    sensitive << ( reg_872 );
    sensitive << ( reg_900 );
    sensitive << ( reg_924 );
    sensitive << ( reg_948 );
    sensitive << ( reg_965 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tempAdd_a2_reg_1163 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( value_M0_buf_assign_5_reg_1262 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_grp_fu_697_p1);
    sensitive << ( value_Q_a2 );
    sensitive << ( value_Q_b3 );
    sensitive << ( reg_855 );
    sensitive << ( reg_948 );
    sensitive << ( reg_958 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state18 );
    sensitive << ( ap_CS_fsm_state28 );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_grp_fu_702_opcode);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_grp_fu_702_p0);
    sensitive << ( reg_912 );
    sensitive << ( reg_930 );
    sensitive << ( reg_958 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tempAdd_a3_reg_1201 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( value_M0_buf_assign_5_reg_1262 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_grp_fu_702_p1);
    sensitive << ( value_Q_b1 );
    sensitive << ( value_Q_c1 );
    sensitive << ( reg_948 );
    sensitive << ( reg_975 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state32 );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_grp_fu_707_opcode);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_grp_fu_707_p0);
    sensitive << ( value_Y );
    sensitive << ( reg_918 );
    sensitive << ( reg_936 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( tempAdd_b1_reg_1169 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_grp_fu_707_p1);
    sensitive << ( value_Q_b2 );
    sensitive << ( value_Q_c2 );
    sensitive << ( reg_864 );
    sensitive << ( reg_958 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_grp_fu_750_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( value_A_a1 );
    sensitive << ( value_A_a3 );
    sensitive << ( value_A_c1 );
    sensitive << ( value_A_c3 );
    sensitive << ( reg_843 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( reg_883 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( s_out_reg_1123 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( temp2_reg_1252 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_grp_fu_750_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( value_M0 );
    sensitive << ( value_M2 );
    sensitive << ( reg_843 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( reg_872 );
    sensitive << ( reg_883 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( s_out_reg_1123 );
    sensitive << ( c_out_reg_1132 );
    sensitive << ( tempAdd_a1_reg_1157 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( tempAdd_c3_reg_1235 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( ap_CS_fsm_state24 );

    SC_METHOD(thread_grp_fu_756_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( value_A_a2 );
    sensitive << ( value_A_c2 );
    sensitive << ( reg_843 );
    sensitive << ( reg_965 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( s_out_reg_1123 );
    sensitive << ( tempAdd_b1_reg_1169 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_grp_fu_756_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( value_M1 );
    sensitive << ( reg_872 );
    sensitive << ( reg_965 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tempAdd_c1_reg_1213 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( tmp_32_reg_1246 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_grp_fu_768_p0);
    sensitive << ( reg_843 );
    sensitive << ( reg_883 );
    sensitive << ( s_out_reg_1123 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( temp2_reg_1252 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_grp_fu_768_p1);
    sensitive << ( reg_872 );
    sensitive << ( tempAdd_a2_reg_1163 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tempAdd_c2_reg_1219 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( tmp_32_reg_1246 );
    sensitive << ( temp2_reg_1252 );
    sensitive << ( ap_CS_fsm_state26 );
    sensitive << ( ap_CS_fsm_state30 );
    sensitive << ( ap_CS_fsm_state40 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_grp_fu_772_p0);
    sensitive << ( reg_843 );
    sensitive << ( reg_855 );
    sensitive << ( tempAdd_b2_reg_1175 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_grp_fu_772_p1);
    sensitive << ( reg_883 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tempAdd_a3_reg_1201 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_grp_fu_777_p0);
    sensitive << ( reg_855 );
    sensitive << ( tempAdd_b3_reg_1207 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_grp_fu_777_p1);
    sensitive << ( reg_965 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_grp_operator_mul_fu_648_ap_start);
    sensitive << ( grp_operator_mul_fu_648_ap_start_reg );

    SC_METHOD(thread_grp_operator_mul_fu_648_mat3_a1_read);
    sensitive << ( value_A_a1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( reg_894 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_operator_mul_fu_648_mat3_a2_read);
    sensitive << ( value_A_a2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( reg_900 );

    SC_METHOD(thread_grp_operator_mul_fu_648_mat3_a3_read);
    sensitive << ( value_A_a3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( reg_906 );

    SC_METHOD(thread_grp_operator_mul_fu_648_mat3_b1_read);
    sensitive << ( value_A_b1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( reg_912 );

    SC_METHOD(thread_grp_operator_mul_fu_648_mat3_b2_read);
    sensitive << ( value_A_b2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( reg_918 );

    SC_METHOD(thread_grp_operator_mul_fu_648_mat3_b3_read);
    sensitive << ( value_A_b3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( reg_924 );

    SC_METHOD(thread_grp_operator_mul_fu_648_mat3_c1_read);
    sensitive << ( value_A_c1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( reg_930 );

    SC_METHOD(thread_grp_operator_mul_fu_648_mat3_c2_read);
    sensitive << ( value_A_c2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( reg_936 );

    SC_METHOD(thread_grp_operator_mul_fu_648_mat3_c3_read);
    sensitive << ( value_A_c3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( reg_942 );

    SC_METHOD(thread_grp_operator_mul_fu_648_other_a1_read);
    sensitive << ( value_A_a1 );
    sensitive << ( value_P_a1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_operator_mul_fu_648_other_a2_read);
    sensitive << ( value_A_b1 );
    sensitive << ( value_P_a2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_operator_mul_fu_648_other_a3_read);
    sensitive << ( value_A_c1 );
    sensitive << ( value_P_a3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_operator_mul_fu_648_other_b1_read);
    sensitive << ( value_A_a2 );
    sensitive << ( value_P_b1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_operator_mul_fu_648_other_b2_read);
    sensitive << ( value_A_b2 );
    sensitive << ( value_P_b2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_operator_mul_fu_648_other_b3_read);
    sensitive << ( value_A_c2 );
    sensitive << ( value_P_b3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_operator_mul_fu_648_other_c1_read);
    sensitive << ( value_A_a3 );
    sensitive << ( value_P_c1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_operator_mul_fu_648_other_c2_read);
    sensitive << ( value_A_b3 );
    sensitive << ( value_P_c2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_grp_operator_mul_fu_648_other_c3_read);
    sensitive << ( value_A_c3 );
    sensitive << ( value_P_c3 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( grp_operator_mul_fu_648_ap_done );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_block_state11_on_subcall_done );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000000000000000000000000000000001";
    grp_operator_mul_fu_648_ap_start_reg = SC_LOGIC_0;
    grp_cordic_sincos_generi_fu_682_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "filter_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, agg_result_M0, "(port)agg_result_M0");
    sc_trace(mVcdFile, agg_result_M0_ap_vld, "(port)agg_result_M0_ap_vld");
    sc_trace(mVcdFile, agg_result_M1, "(port)agg_result_M1");
    sc_trace(mVcdFile, agg_result_M1_ap_vld, "(port)agg_result_M1_ap_vld");
    sc_trace(mVcdFile, agg_result_M2, "(port)agg_result_M2");
    sc_trace(mVcdFile, agg_result_M2_ap_vld, "(port)agg_result_M2_ap_vld");
    sc_trace(mVcdFile, agg_result_A_a1, "(port)agg_result_A_a1");
    sc_trace(mVcdFile, agg_result_A_a1_ap_vld, "(port)agg_result_A_a1_ap_vld");
    sc_trace(mVcdFile, agg_result_A_a2, "(port)agg_result_A_a2");
    sc_trace(mVcdFile, agg_result_A_a2_ap_vld, "(port)agg_result_A_a2_ap_vld");
    sc_trace(mVcdFile, agg_result_A_a3, "(port)agg_result_A_a3");
    sc_trace(mVcdFile, agg_result_A_a3_ap_vld, "(port)agg_result_A_a3_ap_vld");
    sc_trace(mVcdFile, agg_result_A_b1, "(port)agg_result_A_b1");
    sc_trace(mVcdFile, agg_result_A_b1_ap_vld, "(port)agg_result_A_b1_ap_vld");
    sc_trace(mVcdFile, agg_result_A_b2, "(port)agg_result_A_b2");
    sc_trace(mVcdFile, agg_result_A_b2_ap_vld, "(port)agg_result_A_b2_ap_vld");
    sc_trace(mVcdFile, agg_result_A_b3, "(port)agg_result_A_b3");
    sc_trace(mVcdFile, agg_result_A_b3_ap_vld, "(port)agg_result_A_b3_ap_vld");
    sc_trace(mVcdFile, agg_result_A_c1, "(port)agg_result_A_c1");
    sc_trace(mVcdFile, agg_result_A_c1_ap_vld, "(port)agg_result_A_c1_ap_vld");
    sc_trace(mVcdFile, agg_result_A_c2, "(port)agg_result_A_c2");
    sc_trace(mVcdFile, agg_result_A_c2_ap_vld, "(port)agg_result_A_c2_ap_vld");
    sc_trace(mVcdFile, agg_result_A_c3, "(port)agg_result_A_c3");
    sc_trace(mVcdFile, agg_result_A_c3_ap_vld, "(port)agg_result_A_c3_ap_vld");
    sc_trace(mVcdFile, agg_result_P_a1, "(port)agg_result_P_a1");
    sc_trace(mVcdFile, agg_result_P_a1_ap_vld, "(port)agg_result_P_a1_ap_vld");
    sc_trace(mVcdFile, agg_result_P_a2, "(port)agg_result_P_a2");
    sc_trace(mVcdFile, agg_result_P_a2_ap_vld, "(port)agg_result_P_a2_ap_vld");
    sc_trace(mVcdFile, agg_result_P_a3, "(port)agg_result_P_a3");
    sc_trace(mVcdFile, agg_result_P_a3_ap_vld, "(port)agg_result_P_a3_ap_vld");
    sc_trace(mVcdFile, agg_result_P_b1, "(port)agg_result_P_b1");
    sc_trace(mVcdFile, agg_result_P_b1_ap_vld, "(port)agg_result_P_b1_ap_vld");
    sc_trace(mVcdFile, agg_result_P_b2, "(port)agg_result_P_b2");
    sc_trace(mVcdFile, agg_result_P_b2_ap_vld, "(port)agg_result_P_b2_ap_vld");
    sc_trace(mVcdFile, agg_result_P_b3, "(port)agg_result_P_b3");
    sc_trace(mVcdFile, agg_result_P_b3_ap_vld, "(port)agg_result_P_b3_ap_vld");
    sc_trace(mVcdFile, agg_result_P_c1, "(port)agg_result_P_c1");
    sc_trace(mVcdFile, agg_result_P_c1_ap_vld, "(port)agg_result_P_c1_ap_vld");
    sc_trace(mVcdFile, agg_result_P_c2, "(port)agg_result_P_c2");
    sc_trace(mVcdFile, agg_result_P_c2_ap_vld, "(port)agg_result_P_c2_ap_vld");
    sc_trace(mVcdFile, agg_result_P_c3, "(port)agg_result_P_c3");
    sc_trace(mVcdFile, agg_result_P_c3_ap_vld, "(port)agg_result_P_c3_ap_vld");
    sc_trace(mVcdFile, agg_result_Q_a1, "(port)agg_result_Q_a1");
    sc_trace(mVcdFile, agg_result_Q_a1_ap_vld, "(port)agg_result_Q_a1_ap_vld");
    sc_trace(mVcdFile, agg_result_Q_a2, "(port)agg_result_Q_a2");
    sc_trace(mVcdFile, agg_result_Q_a2_ap_vld, "(port)agg_result_Q_a2_ap_vld");
    sc_trace(mVcdFile, agg_result_Q_a3, "(port)agg_result_Q_a3");
    sc_trace(mVcdFile, agg_result_Q_a3_ap_vld, "(port)agg_result_Q_a3_ap_vld");
    sc_trace(mVcdFile, agg_result_Q_b1, "(port)agg_result_Q_b1");
    sc_trace(mVcdFile, agg_result_Q_b1_ap_vld, "(port)agg_result_Q_b1_ap_vld");
    sc_trace(mVcdFile, agg_result_Q_b2, "(port)agg_result_Q_b2");
    sc_trace(mVcdFile, agg_result_Q_b2_ap_vld, "(port)agg_result_Q_b2_ap_vld");
    sc_trace(mVcdFile, agg_result_Q_b3, "(port)agg_result_Q_b3");
    sc_trace(mVcdFile, agg_result_Q_b3_ap_vld, "(port)agg_result_Q_b3_ap_vld");
    sc_trace(mVcdFile, agg_result_Q_c1, "(port)agg_result_Q_c1");
    sc_trace(mVcdFile, agg_result_Q_c1_ap_vld, "(port)agg_result_Q_c1_ap_vld");
    sc_trace(mVcdFile, agg_result_Q_c2, "(port)agg_result_Q_c2");
    sc_trace(mVcdFile, agg_result_Q_c2_ap_vld, "(port)agg_result_Q_c2_ap_vld");
    sc_trace(mVcdFile, agg_result_Q_c3, "(port)agg_result_Q_c3");
    sc_trace(mVcdFile, agg_result_Q_c3_ap_vld, "(port)agg_result_Q_c3_ap_vld");
    sc_trace(mVcdFile, agg_result_MU, "(port)agg_result_MU");
    sc_trace(mVcdFile, agg_result_MU_ap_vld, "(port)agg_result_MU_ap_vld");
    sc_trace(mVcdFile, agg_result_H0, "(port)agg_result_H0");
    sc_trace(mVcdFile, agg_result_H0_ap_vld, "(port)agg_result_H0_ap_vld");
    sc_trace(mVcdFile, agg_result_H1, "(port)agg_result_H1");
    sc_trace(mVcdFile, agg_result_H1_ap_vld, "(port)agg_result_H1_ap_vld");
    sc_trace(mVcdFile, agg_result_H2, "(port)agg_result_H2");
    sc_trace(mVcdFile, agg_result_H2_ap_vld, "(port)agg_result_H2_ap_vld");
    sc_trace(mVcdFile, agg_result_S, "(port)agg_result_S");
    sc_trace(mVcdFile, agg_result_S_ap_vld, "(port)agg_result_S_ap_vld");
    sc_trace(mVcdFile, agg_result_K0, "(port)agg_result_K0");
    sc_trace(mVcdFile, agg_result_K0_ap_vld, "(port)agg_result_K0_ap_vld");
    sc_trace(mVcdFile, agg_result_K1, "(port)agg_result_K1");
    sc_trace(mVcdFile, agg_result_K1_ap_vld, "(port)agg_result_K1_ap_vld");
    sc_trace(mVcdFile, agg_result_K2, "(port)agg_result_K2");
    sc_trace(mVcdFile, agg_result_K2_ap_vld, "(port)agg_result_K2_ap_vld");
    sc_trace(mVcdFile, agg_result_Y, "(port)agg_result_Y");
    sc_trace(mVcdFile, agg_result_Y_ap_vld, "(port)agg_result_Y_ap_vld");
    sc_trace(mVcdFile, value_M0, "(port)value_M0");
    sc_trace(mVcdFile, value_M1, "(port)value_M1");
    sc_trace(mVcdFile, value_M2, "(port)value_M2");
    sc_trace(mVcdFile, value_A_a1, "(port)value_A_a1");
    sc_trace(mVcdFile, value_A_a2, "(port)value_A_a2");
    sc_trace(mVcdFile, value_A_a3, "(port)value_A_a3");
    sc_trace(mVcdFile, value_A_b1, "(port)value_A_b1");
    sc_trace(mVcdFile, value_A_b2, "(port)value_A_b2");
    sc_trace(mVcdFile, value_A_b3, "(port)value_A_b3");
    sc_trace(mVcdFile, value_A_c1, "(port)value_A_c1");
    sc_trace(mVcdFile, value_A_c2, "(port)value_A_c2");
    sc_trace(mVcdFile, value_A_c3, "(port)value_A_c3");
    sc_trace(mVcdFile, value_P_a1, "(port)value_P_a1");
    sc_trace(mVcdFile, value_P_a2, "(port)value_P_a2");
    sc_trace(mVcdFile, value_P_a3, "(port)value_P_a3");
    sc_trace(mVcdFile, value_P_b1, "(port)value_P_b1");
    sc_trace(mVcdFile, value_P_b2, "(port)value_P_b2");
    sc_trace(mVcdFile, value_P_b3, "(port)value_P_b3");
    sc_trace(mVcdFile, value_P_c1, "(port)value_P_c1");
    sc_trace(mVcdFile, value_P_c2, "(port)value_P_c2");
    sc_trace(mVcdFile, value_P_c3, "(port)value_P_c3");
    sc_trace(mVcdFile, value_Q_a1, "(port)value_Q_a1");
    sc_trace(mVcdFile, value_Q_a2, "(port)value_Q_a2");
    sc_trace(mVcdFile, value_Q_a3, "(port)value_Q_a3");
    sc_trace(mVcdFile, value_Q_b1, "(port)value_Q_b1");
    sc_trace(mVcdFile, value_Q_b2, "(port)value_Q_b2");
    sc_trace(mVcdFile, value_Q_b3, "(port)value_Q_b3");
    sc_trace(mVcdFile, value_Q_c1, "(port)value_Q_c1");
    sc_trace(mVcdFile, value_Q_c2, "(port)value_Q_c2");
    sc_trace(mVcdFile, value_Q_c3, "(port)value_Q_c3");
    sc_trace(mVcdFile, value_MU, "(port)value_MU");
    sc_trace(mVcdFile, value_H0, "(port)value_H0");
    sc_trace(mVcdFile, value_H1, "(port)value_H1");
    sc_trace(mVcdFile, value_H2, "(port)value_H2");
    sc_trace(mVcdFile, value_S, "(port)value_S");
    sc_trace(mVcdFile, value_K0, "(port)value_K0");
    sc_trace(mVcdFile, value_K1, "(port)value_K1");
    sc_trace(mVcdFile, value_K2, "(port)value_K2");
    sc_trace(mVcdFile, value_Y, "(port)value_Y");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_fu_750_p2, "grp_fu_750_p2");
    sc_trace(mVcdFile, reg_843, "reg_843");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, grp_fu_756_p2, "grp_fu_756_p2");
    sc_trace(mVcdFile, reg_855, "reg_855");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, reg_864, "reg_864");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, grp_fu_691_p2, "grp_fu_691_p2");
    sc_trace(mVcdFile, reg_872, "reg_872");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_ap_idle, "grp_operator_mul_fu_648_ap_idle");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_ap_ready, "grp_operator_mul_fu_648_ap_ready");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_ap_done, "grp_operator_mul_fu_648_ap_done");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, reg_883, "reg_883");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, reg_894, "reg_894");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_cordic_sincos_generi_fu_682_ap_idle, "grp_cordic_sincos_generi_fu_682_ap_idle");
    sc_trace(mVcdFile, grp_cordic_sincos_generi_fu_682_ap_ready, "grp_cordic_sincos_generi_fu_682_ap_ready");
    sc_trace(mVcdFile, grp_cordic_sincos_generi_fu_682_ap_done, "grp_cordic_sincos_generi_fu_682_ap_done");
    sc_trace(mVcdFile, ap_block_state11_on_subcall_done, "ap_block_state11_on_subcall_done");
    sc_trace(mVcdFile, reg_900, "reg_900");
    sc_trace(mVcdFile, reg_906, "reg_906");
    sc_trace(mVcdFile, reg_912, "reg_912");
    sc_trace(mVcdFile, reg_918, "reg_918");
    sc_trace(mVcdFile, reg_924, "reg_924");
    sc_trace(mVcdFile, reg_930, "reg_930");
    sc_trace(mVcdFile, reg_936, "reg_936");
    sc_trace(mVcdFile, reg_942, "reg_942");
    sc_trace(mVcdFile, grp_fu_768_p2, "grp_fu_768_p2");
    sc_trace(mVcdFile, reg_948, "reg_948");
    sc_trace(mVcdFile, grp_fu_772_p2, "grp_fu_772_p2");
    sc_trace(mVcdFile, reg_958, "reg_958");
    sc_trace(mVcdFile, grp_fu_697_p2, "grp_fu_697_p2");
    sc_trace(mVcdFile, reg_965, "reg_965");
    sc_trace(mVcdFile, grp_fu_777_p2, "grp_fu_777_p2");
    sc_trace(mVcdFile, reg_975, "reg_975");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_12_reg_1044, "tmp_12_reg_1044");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, s_out_reg_1123, "s_out_reg_1123");
    sc_trace(mVcdFile, c_out_reg_1132, "c_out_reg_1132");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, tempAdd_a1_reg_1157, "tempAdd_a1_reg_1157");
    sc_trace(mVcdFile, tempAdd_a2_reg_1163, "tempAdd_a2_reg_1163");
    sc_trace(mVcdFile, grp_fu_702_p2, "grp_fu_702_p2");
    sc_trace(mVcdFile, tempAdd_b1_reg_1169, "tempAdd_b1_reg_1169");
    sc_trace(mVcdFile, grp_fu_707_p2, "grp_fu_707_p2");
    sc_trace(mVcdFile, tempAdd_b2_reg_1175, "tempAdd_b2_reg_1175");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, tempAdd_a3_reg_1201, "tempAdd_a3_reg_1201");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, tempAdd_b3_reg_1207, "tempAdd_b3_reg_1207");
    sc_trace(mVcdFile, tempAdd_c1_reg_1213, "tempAdd_c1_reg_1213");
    sc_trace(mVcdFile, tempAdd_c2_reg_1219, "tempAdd_c2_reg_1219");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, tempAdd_c3_reg_1235, "tempAdd_c3_reg_1235");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, tmp_25_reg_1241, "tmp_25_reg_1241");
    sc_trace(mVcdFile, tmp_32_reg_1246, "tmp_32_reg_1246");
    sc_trace(mVcdFile, temp2_reg_1252, "temp2_reg_1252");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, value_M0_buf_assign_5_reg_1262, "value_M0_buf_assign_5_reg_1262");
    sc_trace(mVcdFile, grp_fu_782_p2, "grp_fu_782_p2");
    sc_trace(mVcdFile, tempMat_b3_reg_1269, "tempMat_b3_reg_1269");
    sc_trace(mVcdFile, grp_fu_786_p2, "grp_fu_786_p2");
    sc_trace(mVcdFile, tempMat_c1_reg_1274, "tempMat_c1_reg_1274");
    sc_trace(mVcdFile, grp_fu_790_p2, "grp_fu_790_p2");
    sc_trace(mVcdFile, tempMat_c2_reg_1279, "tempMat_c2_reg_1279");
    sc_trace(mVcdFile, grp_fu_794_p2, "grp_fu_794_p2");
    sc_trace(mVcdFile, tempMat_c3_reg_1284, "tempMat_c3_reg_1284");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_ap_start, "grp_operator_mul_fu_648_ap_start");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_mat3_a1_read, "grp_operator_mul_fu_648_mat3_a1_read");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_mat3_a2_read, "grp_operator_mul_fu_648_mat3_a2_read");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_mat3_a3_read, "grp_operator_mul_fu_648_mat3_a3_read");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_mat3_b1_read, "grp_operator_mul_fu_648_mat3_b1_read");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_mat3_b2_read, "grp_operator_mul_fu_648_mat3_b2_read");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_mat3_b3_read, "grp_operator_mul_fu_648_mat3_b3_read");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_mat3_c1_read, "grp_operator_mul_fu_648_mat3_c1_read");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_mat3_c2_read, "grp_operator_mul_fu_648_mat3_c2_read");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_mat3_c3_read, "grp_operator_mul_fu_648_mat3_c3_read");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_other_a1_read, "grp_operator_mul_fu_648_other_a1_read");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_other_a2_read, "grp_operator_mul_fu_648_other_a2_read");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_other_a3_read, "grp_operator_mul_fu_648_other_a3_read");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_other_b1_read, "grp_operator_mul_fu_648_other_b1_read");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_other_b2_read, "grp_operator_mul_fu_648_other_b2_read");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_other_b3_read, "grp_operator_mul_fu_648_other_b3_read");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_other_c1_read, "grp_operator_mul_fu_648_other_c1_read");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_other_c2_read, "grp_operator_mul_fu_648_other_c2_read");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_other_c3_read, "grp_operator_mul_fu_648_other_c3_read");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_ap_return_0, "grp_operator_mul_fu_648_ap_return_0");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_ap_return_1, "grp_operator_mul_fu_648_ap_return_1");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_ap_return_2, "grp_operator_mul_fu_648_ap_return_2");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_ap_return_3, "grp_operator_mul_fu_648_ap_return_3");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_ap_return_4, "grp_operator_mul_fu_648_ap_return_4");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_ap_return_5, "grp_operator_mul_fu_648_ap_return_5");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_ap_return_6, "grp_operator_mul_fu_648_ap_return_6");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_ap_return_7, "grp_operator_mul_fu_648_ap_return_7");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_ap_return_8, "grp_operator_mul_fu_648_ap_return_8");
    sc_trace(mVcdFile, grp_cordic_sincos_generi_fu_682_ap_start, "grp_cordic_sincos_generi_fu_682_ap_start");
    sc_trace(mVcdFile, grp_cordic_sincos_generi_fu_682_ap_return_0, "grp_cordic_sincos_generi_fu_682_ap_return_0");
    sc_trace(mVcdFile, grp_cordic_sincos_generi_fu_682_ap_return_1, "grp_cordic_sincos_generi_fu_682_ap_return_1");
    sc_trace(mVcdFile, grp_operator_mul_fu_648_ap_start_reg, "grp_operator_mul_fu_648_ap_start_reg");
    sc_trace(mVcdFile, grp_cordic_sincos_generi_fu_682_ap_start_reg, "grp_cordic_sincos_generi_fu_682_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_CS_fsm_state32, "ap_CS_fsm_state32");
    sc_trace(mVcdFile, ap_CS_fsm_state40, "ap_CS_fsm_state40");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, grp_fu_725_p2, "grp_fu_725_p2");
    sc_trace(mVcdFile, grp_fu_730_p2, "grp_fu_730_p2");
    sc_trace(mVcdFile, grp_fu_735_p2, "grp_fu_735_p2");
    sc_trace(mVcdFile, grp_fu_740_p2, "grp_fu_740_p2");
    sc_trace(mVcdFile, grp_fu_745_p2, "grp_fu_745_p2");
    sc_trace(mVcdFile, grp_fu_691_p0, "grp_fu_691_p0");
    sc_trace(mVcdFile, grp_fu_691_p1, "grp_fu_691_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, ap_CS_fsm_state28, "ap_CS_fsm_state28");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, grp_fu_697_p0, "grp_fu_697_p0");
    sc_trace(mVcdFile, grp_fu_697_p1, "grp_fu_697_p1");
    sc_trace(mVcdFile, grp_fu_702_p0, "grp_fu_702_p0");
    sc_trace(mVcdFile, grp_fu_702_p1, "grp_fu_702_p1");
    sc_trace(mVcdFile, grp_fu_707_p0, "grp_fu_707_p0");
    sc_trace(mVcdFile, grp_fu_707_p1, "grp_fu_707_p1");
    sc_trace(mVcdFile, grp_fu_750_p0, "grp_fu_750_p0");
    sc_trace(mVcdFile, grp_fu_750_p1, "grp_fu_750_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, grp_fu_756_p0, "grp_fu_756_p0");
    sc_trace(mVcdFile, grp_fu_756_p1, "grp_fu_756_p1");
    sc_trace(mVcdFile, grp_fu_768_p0, "grp_fu_768_p0");
    sc_trace(mVcdFile, grp_fu_768_p1, "grp_fu_768_p1");
    sc_trace(mVcdFile, grp_fu_772_p0, "grp_fu_772_p0");
    sc_trace(mVcdFile, grp_fu_772_p1, "grp_fu_772_p1");
    sc_trace(mVcdFile, grp_fu_777_p0, "grp_fu_777_p0");
    sc_trace(mVcdFile, grp_fu_777_p1, "grp_fu_777_p1");
    sc_trace(mVcdFile, grp_fu_691_opcode, "grp_fu_691_opcode");
    sc_trace(mVcdFile, grp_fu_691_ce, "grp_fu_691_ce");
    sc_trace(mVcdFile, grp_fu_697_opcode, "grp_fu_697_opcode");
    sc_trace(mVcdFile, grp_fu_702_opcode, "grp_fu_702_opcode");
    sc_trace(mVcdFile, grp_fu_707_opcode, "grp_fu_707_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("filter.hdltvin.dat");
    mHdltvoutHandle.open("filter.hdltvout.dat");
}

filter::~filter() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_operator_mul_fu_648;
    delete grp_cordic_sincos_generi_fu_682;
    delete filter_faddfsub_3g8j_U56;
    delete filter_faddfsub_3g8j_U57;
    delete filter_faddfsub_3g8j_U58;
    delete filter_faddfsub_3g8j_U59;
    delete filter_fsub_32ns_hbi_U60;
    delete filter_fsub_32ns_hbi_U61;
    delete filter_fsub_32ns_hbi_U62;
    delete filter_fsub_32ns_hbi_U63;
    delete filter_fsub_32ns_hbi_U64;
    delete filter_fmul_32ns_cud_U65;
    delete filter_fmul_32ns_cud_U66;
    delete filter_fmul_32ns_cud_U67;
    delete filter_fmul_32ns_cud_U68;
    delete filter_fmul_32ns_cud_U69;
    delete filter_fmul_32ns_cud_U70;
    delete filter_fmul_32ns_cud_U71;
    delete filter_fmul_32ns_cud_U72;
    delete filter_fmul_32ns_cud_U73;
}

void filter::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void filter::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_cordic_sincos_generi_fu_682_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(grp_operator_mul_fu_648_ap_done.read(), ap_const_logic_1) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
            grp_cordic_sincos_generi_fu_682_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_cordic_sincos_generi_fu_682_ap_ready.read())) {
            grp_cordic_sincos_generi_fu_682_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_operator_mul_fu_648_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
             (esl_seteq<1,1,1>(grp_operator_mul_fu_648_ap_done.read(), ap_const_logic_1) && 
              esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())))) {
            grp_operator_mul_fu_648_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_operator_mul_fu_648_ap_ready.read())) {
            grp_operator_mul_fu_648_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state11_on_subcall_done.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        c_out_reg_1132 = grp_cordic_sincos_generi_fu_682_ap_return_1.read();
        s_out_reg_1123 = grp_cordic_sincos_generi_fu_682_ap_return_0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()))) {
        reg_843 = grp_fu_750_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        reg_855 = grp_fu_756_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        reg_864 = grp_fu_750_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || (esl_seteq<1,1,1>(grp_operator_mul_fu_648_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()))) {
        reg_872 = grp_fu_691_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        reg_883 = grp_fu_691_p2.read();
    }
    if (((esl_seteq<1,1,1>(grp_operator_mul_fu_648_ap_done.read(), ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) || (esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state11_on_subcall_done.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())))) {
        reg_894 = grp_operator_mul_fu_648_ap_return_0.read();
        reg_900 = grp_operator_mul_fu_648_ap_return_1.read();
        reg_906 = grp_operator_mul_fu_648_ap_return_2.read();
        reg_912 = grp_operator_mul_fu_648_ap_return_3.read();
        reg_918 = grp_operator_mul_fu_648_ap_return_4.read();
        reg_924 = grp_operator_mul_fu_648_ap_return_5.read();
        reg_930 = grp_operator_mul_fu_648_ap_return_6.read();
        reg_936 = grp_operator_mul_fu_648_ap_return_7.read();
        reg_942 = grp_operator_mul_fu_648_ap_return_8.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        reg_948 = grp_fu_768_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        reg_958 = grp_fu_772_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        reg_965 = grp_fu_697_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()))) {
        reg_975 = grp_fu_777_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        temp2_reg_1252 = grp_fu_691_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        tempAdd_a1_reg_1157 = grp_fu_691_p2.read();
        tempAdd_a2_reg_1163 = grp_fu_697_p2.read();
        tempAdd_b1_reg_1169 = grp_fu_702_p2.read();
        tempAdd_b2_reg_1175 = grp_fu_707_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        tempAdd_a3_reg_1201 = grp_fu_691_p2.read();
        tempAdd_b3_reg_1207 = grp_fu_697_p2.read();
        tempAdd_c1_reg_1213 = grp_fu_702_p2.read();
        tempAdd_c2_reg_1219 = grp_fu_707_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read())) {
        tempAdd_c3_reg_1235 = grp_fu_691_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        tempMat_b3_reg_1269 = grp_fu_782_p2.read();
        tempMat_c1_reg_1274 = grp_fu_786_p2.read();
        tempMat_c2_reg_1279 = grp_fu_790_p2.read();
        tempMat_c3_reg_1284 = grp_fu_794_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        tmp_12_reg_1044 = grp_fu_756_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        tmp_25_reg_1241 = grp_fu_702_p2.read();
        tmp_32_reg_1246 = grp_fu_707_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read())) {
        value_M0_buf_assign_5_reg_1262 = grp_fu_697_p2.read();
    }
}

void filter::thread_agg_result_A_a1() {
    agg_result_A_a1 = value_A_a1.read();
}

void filter::thread_agg_result_A_a1_ap_vld() {
    if ((esl_seteq<1,1,1>(grp_operator_mul_fu_648_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        agg_result_A_a1_ap_vld = ap_const_logic_1;
    } else {
        agg_result_A_a1_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_A_a2() {
    agg_result_A_a2 = value_A_a2.read();
}

void filter::thread_agg_result_A_a2_ap_vld() {
    if ((esl_seteq<1,1,1>(grp_operator_mul_fu_648_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        agg_result_A_a2_ap_vld = ap_const_logic_1;
    } else {
        agg_result_A_a2_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_A_a3() {
    agg_result_A_a3 = value_A_a3.read();
}

void filter::thread_agg_result_A_a3_ap_vld() {
    if ((esl_seteq<1,1,1>(grp_operator_mul_fu_648_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        agg_result_A_a3_ap_vld = ap_const_logic_1;
    } else {
        agg_result_A_a3_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_A_b1() {
    agg_result_A_b1 = value_A_b1.read();
}

void filter::thread_agg_result_A_b1_ap_vld() {
    if ((esl_seteq<1,1,1>(grp_operator_mul_fu_648_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        agg_result_A_b1_ap_vld = ap_const_logic_1;
    } else {
        agg_result_A_b1_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_A_b2() {
    agg_result_A_b2 = value_A_b2.read();
}

void filter::thread_agg_result_A_b2_ap_vld() {
    if ((esl_seteq<1,1,1>(grp_operator_mul_fu_648_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        agg_result_A_b2_ap_vld = ap_const_logic_1;
    } else {
        agg_result_A_b2_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_A_b3() {
    agg_result_A_b3 = value_A_b3.read();
}

void filter::thread_agg_result_A_b3_ap_vld() {
    if ((esl_seteq<1,1,1>(grp_operator_mul_fu_648_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        agg_result_A_b3_ap_vld = ap_const_logic_1;
    } else {
        agg_result_A_b3_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_A_c1() {
    agg_result_A_c1 = value_A_c1.read();
}

void filter::thread_agg_result_A_c1_ap_vld() {
    if ((esl_seteq<1,1,1>(grp_operator_mul_fu_648_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        agg_result_A_c1_ap_vld = ap_const_logic_1;
    } else {
        agg_result_A_c1_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_A_c2() {
    agg_result_A_c2 = value_A_c2.read();
}

void filter::thread_agg_result_A_c2_ap_vld() {
    if ((esl_seteq<1,1,1>(grp_operator_mul_fu_648_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        agg_result_A_c2_ap_vld = ap_const_logic_1;
    } else {
        agg_result_A_c2_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_A_c3() {
    agg_result_A_c3 = value_A_c3.read();
}

void filter::thread_agg_result_A_c3_ap_vld() {
    if ((esl_seteq<1,1,1>(grp_operator_mul_fu_648_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        agg_result_A_c3_ap_vld = ap_const_logic_1;
    } else {
        agg_result_A_c3_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_H0() {
    agg_result_H0 = reg_843.read();
}

void filter::thread_agg_result_H0_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        agg_result_H0_ap_vld = ap_const_logic_1;
    } else {
        agg_result_H0_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_H1() {
    agg_result_H1 = ap_const_lv32_0;
}

void filter::thread_agg_result_H1_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        agg_result_H1_ap_vld = ap_const_logic_1;
    } else {
        agg_result_H1_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_H2() {
    agg_result_H2 = s_out_reg_1123.read();
}

void filter::thread_agg_result_H2_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        agg_result_H2_ap_vld = ap_const_logic_1;
    } else {
        agg_result_H2_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_K0() {
    agg_result_K0 = reg_883.read();
}

void filter::thread_agg_result_K0_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        agg_result_K0_ap_vld = ap_const_logic_1;
    } else {
        agg_result_K0_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_K1() {
    agg_result_K1 = reg_965.read();
}

void filter::thread_agg_result_K1_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        agg_result_K1_ap_vld = ap_const_logic_1;
    } else {
        agg_result_K1_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_K2() {
    agg_result_K2 = temp2_reg_1252.read();
}

void filter::thread_agg_result_K2_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        agg_result_K2_ap_vld = ap_const_logic_1;
    } else {
        agg_result_K2_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_M0() {
    agg_result_M0 = value_M0_buf_assign_5_reg_1262.read();
}

void filter::thread_agg_result_M0_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        agg_result_M0_ap_vld = ap_const_logic_1;
    } else {
        agg_result_M0_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_M1() {
    agg_result_M1 = grp_fu_697_p2.read();
}

void filter::thread_agg_result_M1_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        agg_result_M1_ap_vld = ap_const_logic_1;
    } else {
        agg_result_M1_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_M2() {
    agg_result_M2 = grp_fu_702_p2.read();
}

void filter::thread_agg_result_M2_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read())) {
        agg_result_M2_ap_vld = ap_const_logic_1;
    } else {
        agg_result_M2_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_MU() {
    agg_result_MU = reg_864.read();
}

void filter::thread_agg_result_MU_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        agg_result_MU_ap_vld = ap_const_logic_1;
    } else {
        agg_result_MU_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_P_a1() {
    agg_result_P_a1 = grp_fu_691_p2.read();
}

void filter::thread_agg_result_P_a1_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        agg_result_P_a1_ap_vld = ap_const_logic_1;
    } else {
        agg_result_P_a1_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_P_a2() {
    agg_result_P_a2 = grp_fu_697_p2.read();
}

void filter::thread_agg_result_P_a2_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        agg_result_P_a2_ap_vld = ap_const_logic_1;
    } else {
        agg_result_P_a2_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_P_a3() {
    agg_result_P_a3 = grp_fu_702_p2.read();
}

void filter::thread_agg_result_P_a3_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        agg_result_P_a3_ap_vld = ap_const_logic_1;
    } else {
        agg_result_P_a3_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_P_b1() {
    agg_result_P_b1 = grp_fu_707_p2.read();
}

void filter::thread_agg_result_P_b1_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        agg_result_P_b1_ap_vld = ap_const_logic_1;
    } else {
        agg_result_P_b1_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_P_b2() {
    agg_result_P_b2 = grp_fu_725_p2.read();
}

void filter::thread_agg_result_P_b2_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        agg_result_P_b2_ap_vld = ap_const_logic_1;
    } else {
        agg_result_P_b2_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_P_b3() {
    agg_result_P_b3 = grp_fu_730_p2.read();
}

void filter::thread_agg_result_P_b3_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        agg_result_P_b3_ap_vld = ap_const_logic_1;
    } else {
        agg_result_P_b3_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_P_c1() {
    agg_result_P_c1 = grp_fu_735_p2.read();
}

void filter::thread_agg_result_P_c1_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        agg_result_P_c1_ap_vld = ap_const_logic_1;
    } else {
        agg_result_P_c1_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_P_c2() {
    agg_result_P_c2 = grp_fu_740_p2.read();
}

void filter::thread_agg_result_P_c2_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        agg_result_P_c2_ap_vld = ap_const_logic_1;
    } else {
        agg_result_P_c2_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_P_c3() {
    agg_result_P_c3 = grp_fu_745_p2.read();
}

void filter::thread_agg_result_P_c3_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        agg_result_P_c3_ap_vld = ap_const_logic_1;
    } else {
        agg_result_P_c3_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_Q_a1() {
    agg_result_Q_a1 = value_Q_a1.read();
}

void filter::thread_agg_result_Q_a1_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        agg_result_Q_a1_ap_vld = ap_const_logic_1;
    } else {
        agg_result_Q_a1_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_Q_a2() {
    agg_result_Q_a2 = value_Q_a2.read();
}

void filter::thread_agg_result_Q_a2_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        agg_result_Q_a2_ap_vld = ap_const_logic_1;
    } else {
        agg_result_Q_a2_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_Q_a3() {
    agg_result_Q_a3 = value_Q_a3.read();
}

void filter::thread_agg_result_Q_a3_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        agg_result_Q_a3_ap_vld = ap_const_logic_1;
    } else {
        agg_result_Q_a3_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_Q_b1() {
    agg_result_Q_b1 = value_Q_b1.read();
}

void filter::thread_agg_result_Q_b1_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        agg_result_Q_b1_ap_vld = ap_const_logic_1;
    } else {
        agg_result_Q_b1_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_Q_b2() {
    agg_result_Q_b2 = value_Q_b2.read();
}

void filter::thread_agg_result_Q_b2_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        agg_result_Q_b2_ap_vld = ap_const_logic_1;
    } else {
        agg_result_Q_b2_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_Q_b3() {
    agg_result_Q_b3 = value_Q_b3.read();
}

void filter::thread_agg_result_Q_b3_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        agg_result_Q_b3_ap_vld = ap_const_logic_1;
    } else {
        agg_result_Q_b3_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_Q_c1() {
    agg_result_Q_c1 = value_Q_c1.read();
}

void filter::thread_agg_result_Q_c1_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        agg_result_Q_c1_ap_vld = ap_const_logic_1;
    } else {
        agg_result_Q_c1_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_Q_c2() {
    agg_result_Q_c2 = value_Q_c2.read();
}

void filter::thread_agg_result_Q_c2_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        agg_result_Q_c2_ap_vld = ap_const_logic_1;
    } else {
        agg_result_Q_c2_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_Q_c3() {
    agg_result_Q_c3 = value_Q_c3.read();
}

void filter::thread_agg_result_Q_c3_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        agg_result_Q_c3_ap_vld = ap_const_logic_1;
    } else {
        agg_result_Q_c3_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_S() {
    agg_result_S = reg_872.read();
}

void filter::thread_agg_result_S_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        agg_result_S_ap_vld = ap_const_logic_1;
    } else {
        agg_result_S_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_agg_result_Y() {
    agg_result_Y = value_Y.read();
}

void filter::thread_agg_result_Y_ap_vld() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        agg_result_Y_ap_vld = ap_const_logic_1;
    } else {
        agg_result_Y_ap_vld = ap_const_logic_0;
    }
}

void filter::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void filter::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void filter::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void filter::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void filter::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void filter::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void filter::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void filter::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void filter::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[16];
}

void filter::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void filter::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void filter::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void filter::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void filter::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void filter::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void filter::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[22];
}

void filter::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read()[23];
}

void filter::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void filter::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[25];
}

void filter::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[26];
}

void filter::thread_ap_CS_fsm_state28() {
    ap_CS_fsm_state28 = ap_CS_fsm.read()[27];
}

void filter::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[28];
}

void filter::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void filter::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[29];
}

void filter::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[30];
}

void filter::thread_ap_CS_fsm_state32() {
    ap_CS_fsm_state32 = ap_CS_fsm.read()[31];
}

void filter::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[34];
}

void filter::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void filter::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void filter::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void filter::thread_ap_CS_fsm_state40() {
    ap_CS_fsm_state40 = ap_CS_fsm.read()[39];
}

void filter::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void filter::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void filter::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void filter::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void filter::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void filter::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void filter::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void filter::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void filter::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void filter::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void filter::thread_ap_block_state11_on_subcall_done() {
    ap_block_state11_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_operator_mul_fu_648_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_cordic_sincos_generi_fu_682_ap_done.read()));
}

void filter::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void filter::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void filter::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void filter::thread_grp_cordic_sincos_generi_fu_682_ap_start() {
    grp_cordic_sincos_generi_fu_682_ap_start = grp_cordic_sincos_generi_fu_682_ap_start_reg.read();
}

void filter::thread_grp_fu_691_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_0, grp_operator_mul_fu_648_ap_done.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state11_on_subcall_done.read())))) {
        grp_fu_691_ce = ap_const_logic_0;
    } else {
        grp_fu_691_ce = ap_const_logic_1;
    }
}

void filter::thread_grp_fu_691_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        grp_fu_691_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        grp_fu_691_opcode = ap_const_lv2_0;
    } else {
        grp_fu_691_opcode = "XX";
    }
}

void filter::thread_grp_fu_691_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        grp_fu_691_p0 = tempAdd_a1_reg_1157.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_fu_691_p0 = tmp_25_reg_1241.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_691_p0 = reg_942.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_691_p0 = reg_906.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_691_p0 = reg_894.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()))) {
        grp_fu_691_p0 = reg_883.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read()))) {
        grp_fu_691_p0 = reg_872.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        grp_fu_691_p0 = reg_864.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        grp_fu_691_p0 = reg_843.read();
    } else {
        grp_fu_691_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_fu_691_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        grp_fu_691_p1 = ap_const_lv32_3F800000;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_691_p1 = value_Q_c3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_691_p1 = value_Q_a3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_691_p1 = value_Q_a1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        grp_fu_691_p1 = reg_864.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        grp_fu_691_p1 = reg_843.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_691_p1 = tmp_12_reg_1044.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        grp_fu_691_p1 = reg_855.read();
    } else {
        grp_fu_691_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_fu_697_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        grp_fu_697_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        grp_fu_697_opcode = ap_const_lv2_0;
    } else {
        grp_fu_697_opcode = "XX";
    }
}

void filter::thread_grp_fu_697_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        grp_fu_697_p0 = tempAdd_a2_reg_1163.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        grp_fu_697_p0 = value_M0_buf_assign_5_reg_1262.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read())) {
        grp_fu_697_p0 = reg_872.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_697_p0 = reg_965.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_697_p0 = reg_948.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_697_p0 = reg_924.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_697_p0 = reg_900.read();
    } else {
        grp_fu_697_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_fu_697_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        grp_fu_697_p1 = reg_855.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state28.read()))) {
        grp_fu_697_p1 = reg_948.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        grp_fu_697_p1 = reg_958.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_697_p1 = value_Q_b3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_697_p1 = value_Q_a2.read();
    } else {
        grp_fu_697_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_fu_702_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        grp_fu_702_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()))) {
        grp_fu_702_opcode = ap_const_lv2_0;
    } else {
        grp_fu_702_opcode = "XX";
    }
}

void filter::thread_grp_fu_702_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        grp_fu_702_p0 = tempAdd_a3_reg_1201.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read())) {
        grp_fu_702_p0 = value_M0_buf_assign_5_reg_1262.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_702_p0 = reg_958.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_702_p0 = reg_930.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_702_p0 = reg_912.read();
    } else {
        grp_fu_702_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_fu_702_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state32.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        grp_fu_702_p1 = reg_948.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_702_p1 = reg_975.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_702_p1 = value_Q_c1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_702_p1 = value_Q_b1.read();
    } else {
        grp_fu_702_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_fu_707_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read()))) {
        grp_fu_707_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        grp_fu_707_opcode = ap_const_lv2_0;
    } else {
        grp_fu_707_opcode = "XX";
    }
}

void filter::thread_grp_fu_707_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        grp_fu_707_p0 = tempAdd_b1_reg_1169.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_707_p0 = value_Y.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_707_p0 = reg_936.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_707_p0 = reg_918.read();
    } else {
        grp_fu_707_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_fu_707_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        grp_fu_707_p1 = reg_958.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        grp_fu_707_p1 = reg_864.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_707_p1 = value_Q_c2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        grp_fu_707_p1 = value_Q_b2.read();
    } else {
        grp_fu_707_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_fu_750_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        grp_fu_750_p0 = temp2_reg_1252.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        grp_fu_750_p0 = s_out_reg_1123.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        grp_fu_750_p0 = reg_843.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        grp_fu_750_p0 = reg_883.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        grp_fu_750_p0 = value_A_c3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_750_p0 = value_A_a3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_750_p0 = value_A_c1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_750_p0 = value_A_a1.read();
    } else {
        grp_fu_750_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_fu_750_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        grp_fu_750_p1 = reg_883.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        grp_fu_750_p1 = reg_872.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_fu_750_p1 = reg_843.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state24.read())) {
        grp_fu_750_p1 = tempAdd_c3_reg_1235.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        grp_fu_750_p1 = s_out_reg_1123.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_750_p1 = tempAdd_a1_reg_1157.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        grp_fu_750_p1 = c_out_reg_1132.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        grp_fu_750_p1 = value_M2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        grp_fu_750_p1 = value_M0.read();
    } else {
        grp_fu_750_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_fu_756_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        grp_fu_756_p0 = reg_843.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
        grp_fu_756_p0 = reg_965.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_756_p0 = s_out_reg_1123.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_756_p0 = tempAdd_b1_reg_1169.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        grp_fu_756_p0 = value_A_c2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_756_p0 = value_A_a2.read();
    } else {
        grp_fu_756_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_fu_756_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        grp_fu_756_p1 = reg_965.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        grp_fu_756_p1 = reg_872.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read())) {
        grp_fu_756_p1 = tmp_32_reg_1246.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_756_p1 = tempAdd_c1_reg_1213.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()))) {
        grp_fu_756_p1 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        grp_fu_756_p1 = value_M1.read();
    } else {
        grp_fu_756_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_fu_768_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read()))) {
        grp_fu_768_p0 = temp2_reg_1252.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read())) {
        grp_fu_768_p0 = reg_883.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_768_p0 = s_out_reg_1123.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        grp_fu_768_p0 = reg_843.read();
    } else {
        grp_fu_768_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_fu_768_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        grp_fu_768_p1 = temp2_reg_1252.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state40.read())) {
        grp_fu_768_p1 = reg_872.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()))) {
        grp_fu_768_p1 = tmp_32_reg_1246.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_768_p1 = tempAdd_c2_reg_1219.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_768_p1 = tempAdd_a2_reg_1163.read();
    } else {
        grp_fu_768_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_fu_772_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        grp_fu_772_p0 = reg_855.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_772_p0 = reg_843.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_772_p0 = tempAdd_b2_reg_1175.read();
    } else {
        grp_fu_772_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_fu_772_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        grp_fu_772_p1 = reg_883.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_772_p1 = tempAdd_a3_reg_1201.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        grp_fu_772_p1 = ap_const_lv32_0;
    } else {
        grp_fu_772_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_fu_777_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        grp_fu_777_p0 = reg_855.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_777_p0 = tempAdd_b3_reg_1207.read();
    } else {
        grp_fu_777_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_fu_777_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        grp_fu_777_p1 = reg_965.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        grp_fu_777_p1 = ap_const_lv32_0;
    } else {
        grp_fu_777_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_operator_mul_fu_648_ap_start() {
    grp_operator_mul_fu_648_ap_start = grp_operator_mul_fu_648_ap_start_reg.read();
}

void filter::thread_grp_operator_mul_fu_648_mat3_a1_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_operator_mul_fu_648_mat3_a1_read = reg_894.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_operator_mul_fu_648_mat3_a1_read = value_A_a1.read();
    } else {
        grp_operator_mul_fu_648_mat3_a1_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_operator_mul_fu_648_mat3_a2_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_operator_mul_fu_648_mat3_a2_read = reg_900.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_operator_mul_fu_648_mat3_a2_read = value_A_a2.read();
    } else {
        grp_operator_mul_fu_648_mat3_a2_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_operator_mul_fu_648_mat3_a3_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_operator_mul_fu_648_mat3_a3_read = reg_906.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_operator_mul_fu_648_mat3_a3_read = value_A_a3.read();
    } else {
        grp_operator_mul_fu_648_mat3_a3_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_operator_mul_fu_648_mat3_b1_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_operator_mul_fu_648_mat3_b1_read = reg_912.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_operator_mul_fu_648_mat3_b1_read = value_A_b1.read();
    } else {
        grp_operator_mul_fu_648_mat3_b1_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_operator_mul_fu_648_mat3_b2_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_operator_mul_fu_648_mat3_b2_read = reg_918.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_operator_mul_fu_648_mat3_b2_read = value_A_b2.read();
    } else {
        grp_operator_mul_fu_648_mat3_b2_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_operator_mul_fu_648_mat3_b3_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_operator_mul_fu_648_mat3_b3_read = reg_924.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_operator_mul_fu_648_mat3_b3_read = value_A_b3.read();
    } else {
        grp_operator_mul_fu_648_mat3_b3_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_operator_mul_fu_648_mat3_c1_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_operator_mul_fu_648_mat3_c1_read = reg_930.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_operator_mul_fu_648_mat3_c1_read = value_A_c1.read();
    } else {
        grp_operator_mul_fu_648_mat3_c1_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_operator_mul_fu_648_mat3_c2_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_operator_mul_fu_648_mat3_c2_read = reg_936.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_operator_mul_fu_648_mat3_c2_read = value_A_c2.read();
    } else {
        grp_operator_mul_fu_648_mat3_c2_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_operator_mul_fu_648_mat3_c3_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_operator_mul_fu_648_mat3_c3_read = reg_942.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_operator_mul_fu_648_mat3_c3_read = value_A_c3.read();
    } else {
        grp_operator_mul_fu_648_mat3_c3_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_operator_mul_fu_648_other_a1_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_operator_mul_fu_648_other_a1_read = value_A_a1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_operator_mul_fu_648_other_a1_read = value_P_a1.read();
    } else {
        grp_operator_mul_fu_648_other_a1_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_operator_mul_fu_648_other_a2_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_operator_mul_fu_648_other_a2_read = value_A_b1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_operator_mul_fu_648_other_a2_read = value_P_a2.read();
    } else {
        grp_operator_mul_fu_648_other_a2_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_operator_mul_fu_648_other_a3_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_operator_mul_fu_648_other_a3_read = value_A_c1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_operator_mul_fu_648_other_a3_read = value_P_a3.read();
    } else {
        grp_operator_mul_fu_648_other_a3_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_operator_mul_fu_648_other_b1_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_operator_mul_fu_648_other_b1_read = value_A_a2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_operator_mul_fu_648_other_b1_read = value_P_b1.read();
    } else {
        grp_operator_mul_fu_648_other_b1_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_operator_mul_fu_648_other_b2_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_operator_mul_fu_648_other_b2_read = value_A_b2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_operator_mul_fu_648_other_b2_read = value_P_b2.read();
    } else {
        grp_operator_mul_fu_648_other_b2_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_operator_mul_fu_648_other_b3_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_operator_mul_fu_648_other_b3_read = value_A_c2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_operator_mul_fu_648_other_b3_read = value_P_b3.read();
    } else {
        grp_operator_mul_fu_648_other_b3_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_operator_mul_fu_648_other_c1_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_operator_mul_fu_648_other_c1_read = value_A_a3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_operator_mul_fu_648_other_c1_read = value_P_c1.read();
    } else {
        grp_operator_mul_fu_648_other_c1_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_operator_mul_fu_648_other_c2_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_operator_mul_fu_648_other_c2_read = value_A_b3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_operator_mul_fu_648_other_c2_read = value_P_c2.read();
    } else {
        grp_operator_mul_fu_648_other_c2_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_grp_operator_mul_fu_648_other_c3_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        grp_operator_mul_fu_648_other_c3_read = value_A_c3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        grp_operator_mul_fu_648_other_c3_read = value_P_c3.read();
    } else {
        grp_operator_mul_fu_648_other_c3_read =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void filter::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(grp_operator_mul_fu_648_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_boolean_0, ap_block_state11_on_subcall_done.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 4398046511104 : 
            ap_NS_fsm = ap_ST_fsm_state44;
            break;
        case 8796093022208 : 
            ap_NS_fsm = ap_ST_fsm_state45;
            break;
        case 17592186044416 : 
            ap_NS_fsm = ap_ST_fsm_state46;
            break;
        case 35184372088832 : 
            ap_NS_fsm = ap_ST_fsm_state47;
            break;
        case 70368744177664 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<47>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void filter::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_M0\" :  \"" << agg_result_M0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_M0_ap_vld\" :  \"" << agg_result_M0_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_M1\" :  \"" << agg_result_M1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_M1_ap_vld\" :  \"" << agg_result_M1_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_M2\" :  \"" << agg_result_M2.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_M2_ap_vld\" :  \"" << agg_result_M2_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_A_a1\" :  \"" << agg_result_A_a1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_A_a1_ap_vld\" :  \"" << agg_result_A_a1_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_A_a2\" :  \"" << agg_result_A_a2.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_A_a2_ap_vld\" :  \"" << agg_result_A_a2_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_A_a3\" :  \"" << agg_result_A_a3.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_A_a3_ap_vld\" :  \"" << agg_result_A_a3_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_A_b1\" :  \"" << agg_result_A_b1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_A_b1_ap_vld\" :  \"" << agg_result_A_b1_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_A_b2\" :  \"" << agg_result_A_b2.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_A_b2_ap_vld\" :  \"" << agg_result_A_b2_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_A_b3\" :  \"" << agg_result_A_b3.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_A_b3_ap_vld\" :  \"" << agg_result_A_b3_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_A_c1\" :  \"" << agg_result_A_c1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_A_c1_ap_vld\" :  \"" << agg_result_A_c1_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_A_c2\" :  \"" << agg_result_A_c2.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_A_c2_ap_vld\" :  \"" << agg_result_A_c2_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_A_c3\" :  \"" << agg_result_A_c3.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_A_c3_ap_vld\" :  \"" << agg_result_A_c3_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_P_a1\" :  \"" << agg_result_P_a1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_P_a1_ap_vld\" :  \"" << agg_result_P_a1_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_P_a2\" :  \"" << agg_result_P_a2.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_P_a2_ap_vld\" :  \"" << agg_result_P_a2_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_P_a3\" :  \"" << agg_result_P_a3.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_P_a3_ap_vld\" :  \"" << agg_result_P_a3_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_P_b1\" :  \"" << agg_result_P_b1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_P_b1_ap_vld\" :  \"" << agg_result_P_b1_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_P_b2\" :  \"" << agg_result_P_b2.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_P_b2_ap_vld\" :  \"" << agg_result_P_b2_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_P_b3\" :  \"" << agg_result_P_b3.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_P_b3_ap_vld\" :  \"" << agg_result_P_b3_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_P_c1\" :  \"" << agg_result_P_c1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_P_c1_ap_vld\" :  \"" << agg_result_P_c1_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_P_c2\" :  \"" << agg_result_P_c2.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_P_c2_ap_vld\" :  \"" << agg_result_P_c2_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_P_c3\" :  \"" << agg_result_P_c3.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_P_c3_ap_vld\" :  \"" << agg_result_P_c3_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_Q_a1\" :  \"" << agg_result_Q_a1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_Q_a1_ap_vld\" :  \"" << agg_result_Q_a1_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_Q_a2\" :  \"" << agg_result_Q_a2.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_Q_a2_ap_vld\" :  \"" << agg_result_Q_a2_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_Q_a3\" :  \"" << agg_result_Q_a3.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_Q_a3_ap_vld\" :  \"" << agg_result_Q_a3_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_Q_b1\" :  \"" << agg_result_Q_b1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_Q_b1_ap_vld\" :  \"" << agg_result_Q_b1_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_Q_b2\" :  \"" << agg_result_Q_b2.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_Q_b2_ap_vld\" :  \"" << agg_result_Q_b2_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_Q_b3\" :  \"" << agg_result_Q_b3.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_Q_b3_ap_vld\" :  \"" << agg_result_Q_b3_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_Q_c1\" :  \"" << agg_result_Q_c1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_Q_c1_ap_vld\" :  \"" << agg_result_Q_c1_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_Q_c2\" :  \"" << agg_result_Q_c2.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_Q_c2_ap_vld\" :  \"" << agg_result_Q_c2_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_Q_c3\" :  \"" << agg_result_Q_c3.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_Q_c3_ap_vld\" :  \"" << agg_result_Q_c3_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_MU\" :  \"" << agg_result_MU.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_MU_ap_vld\" :  \"" << agg_result_MU_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_H0\" :  \"" << agg_result_H0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_H0_ap_vld\" :  \"" << agg_result_H0_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_H1\" :  \"" << agg_result_H1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_H1_ap_vld\" :  \"" << agg_result_H1_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_H2\" :  \"" << agg_result_H2.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_H2_ap_vld\" :  \"" << agg_result_H2_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_S\" :  \"" << agg_result_S.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_S_ap_vld\" :  \"" << agg_result_S_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_K0\" :  \"" << agg_result_K0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_K0_ap_vld\" :  \"" << agg_result_K0_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_K1\" :  \"" << agg_result_K1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_K1_ap_vld\" :  \"" << agg_result_K1_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_K2\" :  \"" << agg_result_K2.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_K2_ap_vld\" :  \"" << agg_result_K2_ap_vld.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_Y\" :  \"" << agg_result_Y.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"agg_result_Y_ap_vld\" :  \"" << agg_result_Y_ap_vld.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_M0\" :  \"" << value_M0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_M1\" :  \"" << value_M1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_M2\" :  \"" << value_M2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_A_a1\" :  \"" << value_A_a1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_A_a2\" :  \"" << value_A_a2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_A_a3\" :  \"" << value_A_a3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_A_b1\" :  \"" << value_A_b1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_A_b2\" :  \"" << value_A_b2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_A_b3\" :  \"" << value_A_b3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_A_c1\" :  \"" << value_A_c1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_A_c2\" :  \"" << value_A_c2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_A_c3\" :  \"" << value_A_c3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_P_a1\" :  \"" << value_P_a1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_P_a2\" :  \"" << value_P_a2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_P_a3\" :  \"" << value_P_a3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_P_b1\" :  \"" << value_P_b1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_P_b2\" :  \"" << value_P_b2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_P_b3\" :  \"" << value_P_b3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_P_c1\" :  \"" << value_P_c1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_P_c2\" :  \"" << value_P_c2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_P_c3\" :  \"" << value_P_c3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_Q_a1\" :  \"" << value_Q_a1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_Q_a2\" :  \"" << value_Q_a2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_Q_a3\" :  \"" << value_Q_a3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_Q_b1\" :  \"" << value_Q_b1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_Q_b2\" :  \"" << value_Q_b2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_Q_b3\" :  \"" << value_Q_b3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_Q_c1\" :  \"" << value_Q_c1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_Q_c2\" :  \"" << value_Q_c2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_Q_c3\" :  \"" << value_Q_c3.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_MU\" :  \"" << value_MU.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_H0\" :  \"" << value_H0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_H1\" :  \"" << value_H1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_H2\" :  \"" << value_H2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_S\" :  \"" << value_S.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_K0\" :  \"" << value_K0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_K1\" :  \"" << value_K1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_K2\" :  \"" << value_K2.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"value_Y\" :  \"" << value_Y.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

