// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _operator_mul_HH_
#define _operator_mul_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "filter_fadd_32ns_bkb.h"
#include "filter_fmul_32ns_cud.h"

namespace ap_rtl {

struct operator_mul : public sc_module {
    // Port declarations 33
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > mat3_a1_read;
    sc_in< sc_lv<32> > mat3_a2_read;
    sc_in< sc_lv<32> > mat3_a3_read;
    sc_in< sc_lv<32> > mat3_b1_read;
    sc_in< sc_lv<32> > mat3_b2_read;
    sc_in< sc_lv<32> > mat3_b3_read;
    sc_in< sc_lv<32> > mat3_c1_read;
    sc_in< sc_lv<32> > mat3_c2_read;
    sc_in< sc_lv<32> > mat3_c3_read;
    sc_in< sc_lv<32> > other_a1_read;
    sc_in< sc_lv<32> > other_a2_read;
    sc_in< sc_lv<32> > other_a3_read;
    sc_in< sc_lv<32> > other_b1_read;
    sc_in< sc_lv<32> > other_b2_read;
    sc_in< sc_lv<32> > other_b3_read;
    sc_in< sc_lv<32> > other_c1_read;
    sc_in< sc_lv<32> > other_c2_read;
    sc_in< sc_lv<32> > other_c3_read;
    sc_out< sc_lv<32> > ap_return_0;
    sc_out< sc_lv<32> > ap_return_1;
    sc_out< sc_lv<32> > ap_return_2;
    sc_out< sc_lv<32> > ap_return_3;
    sc_out< sc_lv<32> > ap_return_4;
    sc_out< sc_lv<32> > ap_return_5;
    sc_out< sc_lv<32> > ap_return_6;
    sc_out< sc_lv<32> > ap_return_7;
    sc_out< sc_lv<32> > ap_return_8;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    operator_mul(sc_module_name name);
    SC_HAS_PROCESS(operator_mul);

    ~operator_mul();

    sc_trace_file* mVcdFile;

    filter_fadd_32ns_bkb<1,4,32,32,32>* filter_fadd_32ns_bkb_U1;
    filter_fadd_32ns_bkb<1,4,32,32,32>* filter_fadd_32ns_bkb_U2;
    filter_fadd_32ns_bkb<1,4,32,32,32>* filter_fadd_32ns_bkb_U3;
    filter_fadd_32ns_bkb<1,4,32,32,32>* filter_fadd_32ns_bkb_U4;
    filter_fadd_32ns_bkb<1,4,32,32,32>* filter_fadd_32ns_bkb_U5;
    filter_fadd_32ns_bkb<1,4,32,32,32>* filter_fadd_32ns_bkb_U6;
    filter_fadd_32ns_bkb<1,4,32,32,32>* filter_fadd_32ns_bkb_U7;
    filter_fadd_32ns_bkb<1,4,32,32,32>* filter_fadd_32ns_bkb_U8;
    filter_fadd_32ns_bkb<1,4,32,32,32>* filter_fadd_32ns_bkb_U9;
    filter_fmul_32ns_cud<1,2,32,32,32>* filter_fmul_32ns_cud_U10;
    filter_fmul_32ns_cud<1,2,32,32,32>* filter_fmul_32ns_cud_U11;
    filter_fmul_32ns_cud<1,2,32,32,32>* filter_fmul_32ns_cud_U12;
    filter_fmul_32ns_cud<1,2,32,32,32>* filter_fmul_32ns_cud_U13;
    filter_fmul_32ns_cud<1,2,32,32,32>* filter_fmul_32ns_cud_U14;
    filter_fmul_32ns_cud<1,2,32,32,32>* filter_fmul_32ns_cud_U15;
    filter_fmul_32ns_cud<1,2,32,32,32>* filter_fmul_32ns_cud_U16;
    filter_fmul_32ns_cud<1,2,32,32,32>* filter_fmul_32ns_cud_U17;
    filter_fmul_32ns_cud<1,2,32,32,32>* filter_fmul_32ns_cud_U18;
    filter_fmul_32ns_cud<1,2,32,32,32>* filter_fmul_32ns_cud_U19;
    filter_fmul_32ns_cud<1,2,32,32,32>* filter_fmul_32ns_cud_U20;
    filter_fmul_32ns_cud<1,2,32,32,32>* filter_fmul_32ns_cud_U21;
    filter_fmul_32ns_cud<1,2,32,32,32>* filter_fmul_32ns_cud_U22;
    filter_fmul_32ns_cud<1,2,32,32,32>* filter_fmul_32ns_cud_U23;
    filter_fmul_32ns_cud<1,2,32,32,32>* filter_fmul_32ns_cud_U24;
    filter_fmul_32ns_cud<1,2,32,32,32>* filter_fmul_32ns_cud_U25;
    filter_fmul_32ns_cud<1,2,32,32,32>* filter_fmul_32ns_cud_U26;
    filter_fmul_32ns_cud<1,2,32,32,32>* filter_fmul_32ns_cud_U27;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > grp_fu_184_p2;
    sc_signal< sc_lv<32> > reg_310;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > grp_fu_190_p2;
    sc_signal< sc_lv<32> > reg_316;
    sc_signal< sc_lv<32> > grp_fu_196_p2;
    sc_signal< sc_lv<32> > reg_322;
    sc_signal< sc_lv<32> > grp_fu_202_p2;
    sc_signal< sc_lv<32> > reg_328;
    sc_signal< sc_lv<32> > grp_fu_208_p2;
    sc_signal< sc_lv<32> > reg_334;
    sc_signal< sc_lv<32> > grp_fu_214_p2;
    sc_signal< sc_lv<32> > reg_340;
    sc_signal< sc_lv<32> > grp_fu_220_p2;
    sc_signal< sc_lv<32> > reg_346;
    sc_signal< sc_lv<32> > grp_fu_226_p2;
    sc_signal< sc_lv<32> > reg_352;
    sc_signal< sc_lv<32> > grp_fu_232_p2;
    sc_signal< sc_lv<32> > reg_358;
    sc_signal< sc_lv<32> > grp_fu_238_p2;
    sc_signal< sc_lv<32> > tmp_41_i_reg_502;
    sc_signal< sc_lv<32> > grp_fu_244_p2;
    sc_signal< sc_lv<32> > tmp_44_i_reg_507;
    sc_signal< sc_lv<32> > grp_fu_250_p2;
    sc_signal< sc_lv<32> > tmp_45_i_reg_512;
    sc_signal< sc_lv<32> > grp_fu_256_p2;
    sc_signal< sc_lv<32> > tmp_48_i_reg_517;
    sc_signal< sc_lv<32> > grp_fu_262_p2;
    sc_signal< sc_lv<32> > tmp_49_i_reg_522;
    sc_signal< sc_lv<32> > grp_fu_268_p2;
    sc_signal< sc_lv<32> > tmp_52_i_reg_527;
    sc_signal< sc_lv<32> > grp_fu_274_p2;
    sc_signal< sc_lv<32> > tmp_53_i_reg_532;
    sc_signal< sc_lv<32> > grp_fu_280_p2;
    sc_signal< sc_lv<32> > tmp_56_i_reg_537;
    sc_signal< sc_lv<32> > grp_fu_286_p2;
    sc_signal< sc_lv<32> > tmp_57_i_reg_542;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<32> > grp_fu_148_p2;
    sc_signal< sc_lv<32> > tmp_26_i_reg_589;
    sc_signal< sc_lv<32> > grp_fu_152_p2;
    sc_signal< sc_lv<32> > tmp_30_i_reg_594;
    sc_signal< sc_lv<32> > grp_fu_156_p2;
    sc_signal< sc_lv<32> > tmp_34_i_reg_599;
    sc_signal< sc_lv<32> > grp_fu_160_p2;
    sc_signal< sc_lv<32> > tmp_38_i_reg_604;
    sc_signal< sc_lv<32> > grp_fu_164_p2;
    sc_signal< sc_lv<32> > tmp_42_i_reg_609;
    sc_signal< sc_lv<32> > grp_fu_168_p2;
    sc_signal< sc_lv<32> > tmp_46_i_reg_614;
    sc_signal< sc_lv<32> > grp_fu_172_p2;
    sc_signal< sc_lv<32> > tmp_50_i_reg_619;
    sc_signal< sc_lv<32> > grp_fu_176_p2;
    sc_signal< sc_lv<32> > tmp_54_i_reg_624;
    sc_signal< sc_lv<32> > grp_fu_180_p2;
    sc_signal< sc_lv<32> > tmp_58_i_reg_629;
    sc_signal< sc_lv<32> > grp_fu_148_p0;
    sc_signal< sc_lv<32> > grp_fu_148_p1;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > grp_fu_152_p0;
    sc_signal< sc_lv<32> > grp_fu_152_p1;
    sc_signal< sc_lv<32> > grp_fu_156_p0;
    sc_signal< sc_lv<32> > grp_fu_156_p1;
    sc_signal< sc_lv<32> > grp_fu_160_p0;
    sc_signal< sc_lv<32> > grp_fu_160_p1;
    sc_signal< sc_lv<32> > grp_fu_164_p0;
    sc_signal< sc_lv<32> > grp_fu_164_p1;
    sc_signal< sc_lv<32> > grp_fu_168_p0;
    sc_signal< sc_lv<32> > grp_fu_168_p1;
    sc_signal< sc_lv<32> > grp_fu_172_p0;
    sc_signal< sc_lv<32> > grp_fu_172_p1;
    sc_signal< sc_lv<32> > grp_fu_176_p0;
    sc_signal< sc_lv<32> > grp_fu_176_p1;
    sc_signal< sc_lv<32> > grp_fu_180_p0;
    sc_signal< sc_lv<32> > grp_fu_180_p1;
    sc_signal< sc_lv<32> > grp_fu_184_p0;
    sc_signal< sc_lv<32> > grp_fu_184_p1;
    sc_signal< sc_lv<32> > grp_fu_190_p0;
    sc_signal< sc_lv<32> > grp_fu_190_p1;
    sc_signal< sc_lv<32> > grp_fu_196_p0;
    sc_signal< sc_lv<32> > grp_fu_196_p1;
    sc_signal< sc_lv<32> > grp_fu_202_p0;
    sc_signal< sc_lv<32> > grp_fu_202_p1;
    sc_signal< sc_lv<32> > grp_fu_208_p0;
    sc_signal< sc_lv<32> > grp_fu_208_p1;
    sc_signal< sc_lv<32> > grp_fu_214_p0;
    sc_signal< sc_lv<32> > grp_fu_214_p1;
    sc_signal< sc_lv<32> > grp_fu_220_p0;
    sc_signal< sc_lv<32> > grp_fu_220_p1;
    sc_signal< sc_lv<32> > grp_fu_226_p0;
    sc_signal< sc_lv<32> > grp_fu_226_p1;
    sc_signal< sc_lv<32> > grp_fu_232_p0;
    sc_signal< sc_lv<32> > grp_fu_232_p1;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<32> > ap_return_0_preg;
    sc_signal< sc_lv<32> > ap_return_1_preg;
    sc_signal< sc_lv<32> > ap_return_2_preg;
    sc_signal< sc_lv<32> > ap_return_3_preg;
    sc_signal< sc_lv<32> > ap_return_4_preg;
    sc_signal< sc_lv<32> > ap_return_5_preg;
    sc_signal< sc_lv<32> > ap_return_6_preg;
    sc_signal< sc_lv<32> > ap_return_7_preg;
    sc_signal< sc_lv<32> > ap_return_8_preg;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_9;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_grp_fu_148_p0();
    void thread_grp_fu_148_p1();
    void thread_grp_fu_152_p0();
    void thread_grp_fu_152_p1();
    void thread_grp_fu_156_p0();
    void thread_grp_fu_156_p1();
    void thread_grp_fu_160_p0();
    void thread_grp_fu_160_p1();
    void thread_grp_fu_164_p0();
    void thread_grp_fu_164_p1();
    void thread_grp_fu_168_p0();
    void thread_grp_fu_168_p1();
    void thread_grp_fu_172_p0();
    void thread_grp_fu_172_p1();
    void thread_grp_fu_176_p0();
    void thread_grp_fu_176_p1();
    void thread_grp_fu_180_p0();
    void thread_grp_fu_180_p1();
    void thread_grp_fu_184_p0();
    void thread_grp_fu_184_p1();
    void thread_grp_fu_190_p0();
    void thread_grp_fu_190_p1();
    void thread_grp_fu_196_p0();
    void thread_grp_fu_196_p1();
    void thread_grp_fu_202_p0();
    void thread_grp_fu_202_p1();
    void thread_grp_fu_208_p0();
    void thread_grp_fu_208_p1();
    void thread_grp_fu_214_p0();
    void thread_grp_fu_214_p1();
    void thread_grp_fu_220_p0();
    void thread_grp_fu_220_p1();
    void thread_grp_fu_226_p0();
    void thread_grp_fu_226_p1();
    void thread_grp_fu_232_p0();
    void thread_grp_fu_232_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
