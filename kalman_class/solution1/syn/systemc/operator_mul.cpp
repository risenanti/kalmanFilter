// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "operator_mul.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic operator_mul::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic operator_mul::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> operator_mul::ap_ST_fsm_state1 = "1";
const sc_lv<10> operator_mul::ap_ST_fsm_state2 = "10";
const sc_lv<10> operator_mul::ap_ST_fsm_state3 = "100";
const sc_lv<10> operator_mul::ap_ST_fsm_state4 = "1000";
const sc_lv<10> operator_mul::ap_ST_fsm_state5 = "10000";
const sc_lv<10> operator_mul::ap_ST_fsm_state6 = "100000";
const sc_lv<10> operator_mul::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> operator_mul::ap_ST_fsm_state8 = "10000000";
const sc_lv<10> operator_mul::ap_ST_fsm_state9 = "100000000";
const sc_lv<10> operator_mul::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> operator_mul::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> operator_mul::ap_const_lv32_1 = "1";
const sc_lv<32> operator_mul::ap_const_lv32_5 = "101";
const sc_lv<32> operator_mul::ap_const_lv32_4 = "100";
const sc_lv<32> operator_mul::ap_const_lv32_2 = "10";
const sc_lv<32> operator_mul::ap_const_lv32_6 = "110";
const sc_lv<32> operator_mul::ap_const_lv32_9 = "1001";
const bool operator_mul::ap_const_boolean_1 = true;

operator_mul::operator_mul(sc_module_name name) : sc_module(name), mVcdFile(0) {
    filter_fadd_32ns_bkb_U1 = new filter_fadd_32ns_bkb<1,4,32,32,32>("filter_fadd_32ns_bkb_U1");
    filter_fadd_32ns_bkb_U1->clk(ap_clk);
    filter_fadd_32ns_bkb_U1->reset(ap_rst);
    filter_fadd_32ns_bkb_U1->din0(grp_fu_148_p0);
    filter_fadd_32ns_bkb_U1->din1(grp_fu_148_p1);
    filter_fadd_32ns_bkb_U1->ce(ap_var_for_const0);
    filter_fadd_32ns_bkb_U1->dout(grp_fu_148_p2);
    filter_fadd_32ns_bkb_U2 = new filter_fadd_32ns_bkb<1,4,32,32,32>("filter_fadd_32ns_bkb_U2");
    filter_fadd_32ns_bkb_U2->clk(ap_clk);
    filter_fadd_32ns_bkb_U2->reset(ap_rst);
    filter_fadd_32ns_bkb_U2->din0(grp_fu_152_p0);
    filter_fadd_32ns_bkb_U2->din1(grp_fu_152_p1);
    filter_fadd_32ns_bkb_U2->ce(ap_var_for_const0);
    filter_fadd_32ns_bkb_U2->dout(grp_fu_152_p2);
    filter_fadd_32ns_bkb_U3 = new filter_fadd_32ns_bkb<1,4,32,32,32>("filter_fadd_32ns_bkb_U3");
    filter_fadd_32ns_bkb_U3->clk(ap_clk);
    filter_fadd_32ns_bkb_U3->reset(ap_rst);
    filter_fadd_32ns_bkb_U3->din0(grp_fu_156_p0);
    filter_fadd_32ns_bkb_U3->din1(grp_fu_156_p1);
    filter_fadd_32ns_bkb_U3->ce(ap_var_for_const0);
    filter_fadd_32ns_bkb_U3->dout(grp_fu_156_p2);
    filter_fadd_32ns_bkb_U4 = new filter_fadd_32ns_bkb<1,4,32,32,32>("filter_fadd_32ns_bkb_U4");
    filter_fadd_32ns_bkb_U4->clk(ap_clk);
    filter_fadd_32ns_bkb_U4->reset(ap_rst);
    filter_fadd_32ns_bkb_U4->din0(grp_fu_160_p0);
    filter_fadd_32ns_bkb_U4->din1(grp_fu_160_p1);
    filter_fadd_32ns_bkb_U4->ce(ap_var_for_const0);
    filter_fadd_32ns_bkb_U4->dout(grp_fu_160_p2);
    filter_fadd_32ns_bkb_U5 = new filter_fadd_32ns_bkb<1,4,32,32,32>("filter_fadd_32ns_bkb_U5");
    filter_fadd_32ns_bkb_U5->clk(ap_clk);
    filter_fadd_32ns_bkb_U5->reset(ap_rst);
    filter_fadd_32ns_bkb_U5->din0(grp_fu_164_p0);
    filter_fadd_32ns_bkb_U5->din1(grp_fu_164_p1);
    filter_fadd_32ns_bkb_U5->ce(ap_var_for_const0);
    filter_fadd_32ns_bkb_U5->dout(grp_fu_164_p2);
    filter_fadd_32ns_bkb_U6 = new filter_fadd_32ns_bkb<1,4,32,32,32>("filter_fadd_32ns_bkb_U6");
    filter_fadd_32ns_bkb_U6->clk(ap_clk);
    filter_fadd_32ns_bkb_U6->reset(ap_rst);
    filter_fadd_32ns_bkb_U6->din0(grp_fu_168_p0);
    filter_fadd_32ns_bkb_U6->din1(grp_fu_168_p1);
    filter_fadd_32ns_bkb_U6->ce(ap_var_for_const0);
    filter_fadd_32ns_bkb_U6->dout(grp_fu_168_p2);
    filter_fadd_32ns_bkb_U7 = new filter_fadd_32ns_bkb<1,4,32,32,32>("filter_fadd_32ns_bkb_U7");
    filter_fadd_32ns_bkb_U7->clk(ap_clk);
    filter_fadd_32ns_bkb_U7->reset(ap_rst);
    filter_fadd_32ns_bkb_U7->din0(grp_fu_172_p0);
    filter_fadd_32ns_bkb_U7->din1(grp_fu_172_p1);
    filter_fadd_32ns_bkb_U7->ce(ap_var_for_const0);
    filter_fadd_32ns_bkb_U7->dout(grp_fu_172_p2);
    filter_fadd_32ns_bkb_U8 = new filter_fadd_32ns_bkb<1,4,32,32,32>("filter_fadd_32ns_bkb_U8");
    filter_fadd_32ns_bkb_U8->clk(ap_clk);
    filter_fadd_32ns_bkb_U8->reset(ap_rst);
    filter_fadd_32ns_bkb_U8->din0(grp_fu_176_p0);
    filter_fadd_32ns_bkb_U8->din1(grp_fu_176_p1);
    filter_fadd_32ns_bkb_U8->ce(ap_var_for_const0);
    filter_fadd_32ns_bkb_U8->dout(grp_fu_176_p2);
    filter_fadd_32ns_bkb_U9 = new filter_fadd_32ns_bkb<1,4,32,32,32>("filter_fadd_32ns_bkb_U9");
    filter_fadd_32ns_bkb_U9->clk(ap_clk);
    filter_fadd_32ns_bkb_U9->reset(ap_rst);
    filter_fadd_32ns_bkb_U9->din0(grp_fu_180_p0);
    filter_fadd_32ns_bkb_U9->din1(grp_fu_180_p1);
    filter_fadd_32ns_bkb_U9->ce(ap_var_for_const0);
    filter_fadd_32ns_bkb_U9->dout(grp_fu_180_p2);
    filter_fmul_32ns_cud_U10 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U10");
    filter_fmul_32ns_cud_U10->clk(ap_clk);
    filter_fmul_32ns_cud_U10->reset(ap_rst);
    filter_fmul_32ns_cud_U10->din0(grp_fu_184_p0);
    filter_fmul_32ns_cud_U10->din1(grp_fu_184_p1);
    filter_fmul_32ns_cud_U10->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U10->dout(grp_fu_184_p2);
    filter_fmul_32ns_cud_U11 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U11");
    filter_fmul_32ns_cud_U11->clk(ap_clk);
    filter_fmul_32ns_cud_U11->reset(ap_rst);
    filter_fmul_32ns_cud_U11->din0(grp_fu_190_p0);
    filter_fmul_32ns_cud_U11->din1(grp_fu_190_p1);
    filter_fmul_32ns_cud_U11->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U11->dout(grp_fu_190_p2);
    filter_fmul_32ns_cud_U12 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U12");
    filter_fmul_32ns_cud_U12->clk(ap_clk);
    filter_fmul_32ns_cud_U12->reset(ap_rst);
    filter_fmul_32ns_cud_U12->din0(grp_fu_196_p0);
    filter_fmul_32ns_cud_U12->din1(grp_fu_196_p1);
    filter_fmul_32ns_cud_U12->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U12->dout(grp_fu_196_p2);
    filter_fmul_32ns_cud_U13 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U13");
    filter_fmul_32ns_cud_U13->clk(ap_clk);
    filter_fmul_32ns_cud_U13->reset(ap_rst);
    filter_fmul_32ns_cud_U13->din0(grp_fu_202_p0);
    filter_fmul_32ns_cud_U13->din1(grp_fu_202_p1);
    filter_fmul_32ns_cud_U13->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U13->dout(grp_fu_202_p2);
    filter_fmul_32ns_cud_U14 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U14");
    filter_fmul_32ns_cud_U14->clk(ap_clk);
    filter_fmul_32ns_cud_U14->reset(ap_rst);
    filter_fmul_32ns_cud_U14->din0(grp_fu_208_p0);
    filter_fmul_32ns_cud_U14->din1(grp_fu_208_p1);
    filter_fmul_32ns_cud_U14->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U14->dout(grp_fu_208_p2);
    filter_fmul_32ns_cud_U15 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U15");
    filter_fmul_32ns_cud_U15->clk(ap_clk);
    filter_fmul_32ns_cud_U15->reset(ap_rst);
    filter_fmul_32ns_cud_U15->din0(grp_fu_214_p0);
    filter_fmul_32ns_cud_U15->din1(grp_fu_214_p1);
    filter_fmul_32ns_cud_U15->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U15->dout(grp_fu_214_p2);
    filter_fmul_32ns_cud_U16 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U16");
    filter_fmul_32ns_cud_U16->clk(ap_clk);
    filter_fmul_32ns_cud_U16->reset(ap_rst);
    filter_fmul_32ns_cud_U16->din0(grp_fu_220_p0);
    filter_fmul_32ns_cud_U16->din1(grp_fu_220_p1);
    filter_fmul_32ns_cud_U16->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U16->dout(grp_fu_220_p2);
    filter_fmul_32ns_cud_U17 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U17");
    filter_fmul_32ns_cud_U17->clk(ap_clk);
    filter_fmul_32ns_cud_U17->reset(ap_rst);
    filter_fmul_32ns_cud_U17->din0(grp_fu_226_p0);
    filter_fmul_32ns_cud_U17->din1(grp_fu_226_p1);
    filter_fmul_32ns_cud_U17->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U17->dout(grp_fu_226_p2);
    filter_fmul_32ns_cud_U18 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U18");
    filter_fmul_32ns_cud_U18->clk(ap_clk);
    filter_fmul_32ns_cud_U18->reset(ap_rst);
    filter_fmul_32ns_cud_U18->din0(grp_fu_232_p0);
    filter_fmul_32ns_cud_U18->din1(grp_fu_232_p1);
    filter_fmul_32ns_cud_U18->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U18->dout(grp_fu_232_p2);
    filter_fmul_32ns_cud_U19 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U19");
    filter_fmul_32ns_cud_U19->clk(ap_clk);
    filter_fmul_32ns_cud_U19->reset(ap_rst);
    filter_fmul_32ns_cud_U19->din0(mat3_b2_read);
    filter_fmul_32ns_cud_U19->din1(other_b2_read);
    filter_fmul_32ns_cud_U19->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U19->dout(grp_fu_238_p2);
    filter_fmul_32ns_cud_U20 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U20");
    filter_fmul_32ns_cud_U20->clk(ap_clk);
    filter_fmul_32ns_cud_U20->reset(ap_rst);
    filter_fmul_32ns_cud_U20->din0(mat3_b1_read);
    filter_fmul_32ns_cud_U20->din1(other_a3_read);
    filter_fmul_32ns_cud_U20->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U20->dout(grp_fu_244_p2);
    filter_fmul_32ns_cud_U21 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U21");
    filter_fmul_32ns_cud_U21->clk(ap_clk);
    filter_fmul_32ns_cud_U21->reset(ap_rst);
    filter_fmul_32ns_cud_U21->din0(mat3_b2_read);
    filter_fmul_32ns_cud_U21->din1(other_b3_read);
    filter_fmul_32ns_cud_U21->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U21->dout(grp_fu_250_p2);
    filter_fmul_32ns_cud_U22 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U22");
    filter_fmul_32ns_cud_U22->clk(ap_clk);
    filter_fmul_32ns_cud_U22->reset(ap_rst);
    filter_fmul_32ns_cud_U22->din0(mat3_c1_read);
    filter_fmul_32ns_cud_U22->din1(other_a1_read);
    filter_fmul_32ns_cud_U22->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U22->dout(grp_fu_256_p2);
    filter_fmul_32ns_cud_U23 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U23");
    filter_fmul_32ns_cud_U23->clk(ap_clk);
    filter_fmul_32ns_cud_U23->reset(ap_rst);
    filter_fmul_32ns_cud_U23->din0(mat3_c2_read);
    filter_fmul_32ns_cud_U23->din1(other_b1_read);
    filter_fmul_32ns_cud_U23->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U23->dout(grp_fu_262_p2);
    filter_fmul_32ns_cud_U24 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U24");
    filter_fmul_32ns_cud_U24->clk(ap_clk);
    filter_fmul_32ns_cud_U24->reset(ap_rst);
    filter_fmul_32ns_cud_U24->din0(mat3_c1_read);
    filter_fmul_32ns_cud_U24->din1(other_a2_read);
    filter_fmul_32ns_cud_U24->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U24->dout(grp_fu_268_p2);
    filter_fmul_32ns_cud_U25 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U25");
    filter_fmul_32ns_cud_U25->clk(ap_clk);
    filter_fmul_32ns_cud_U25->reset(ap_rst);
    filter_fmul_32ns_cud_U25->din0(mat3_c2_read);
    filter_fmul_32ns_cud_U25->din1(other_b2_read);
    filter_fmul_32ns_cud_U25->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U25->dout(grp_fu_274_p2);
    filter_fmul_32ns_cud_U26 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U26");
    filter_fmul_32ns_cud_U26->clk(ap_clk);
    filter_fmul_32ns_cud_U26->reset(ap_rst);
    filter_fmul_32ns_cud_U26->din0(mat3_c1_read);
    filter_fmul_32ns_cud_U26->din1(other_a3_read);
    filter_fmul_32ns_cud_U26->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U26->dout(grp_fu_280_p2);
    filter_fmul_32ns_cud_U27 = new filter_fmul_32ns_cud<1,2,32,32,32>("filter_fmul_32ns_cud_U27");
    filter_fmul_32ns_cud_U27->clk(ap_clk);
    filter_fmul_32ns_cud_U27->reset(ap_rst);
    filter_fmul_32ns_cud_U27->din0(mat3_c2_read);
    filter_fmul_32ns_cud_U27->din1(other_b3_read);
    filter_fmul_32ns_cud_U27->ce(ap_var_for_const0);
    filter_fmul_32ns_cud_U27->dout(grp_fu_286_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_grp_fu_148_p0);
    sensitive << ( reg_310 );
    sensitive << ( tmp_26_i_reg_589 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_148_p1);
    sensitive << ( reg_310 );
    sensitive << ( reg_316 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_152_p0);
    sensitive << ( reg_322 );
    sensitive << ( tmp_30_i_reg_594 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_152_p1);
    sensitive << ( reg_316 );
    sensitive << ( reg_328 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_156_p0);
    sensitive << ( reg_334 );
    sensitive << ( tmp_34_i_reg_599 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_156_p1);
    sensitive << ( reg_322 );
    sensitive << ( reg_340 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_160_p0);
    sensitive << ( reg_346 );
    sensitive << ( tmp_38_i_reg_604 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_160_p1);
    sensitive << ( reg_328 );
    sensitive << ( reg_352 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_164_p0);
    sensitive << ( reg_358 );
    sensitive << ( tmp_42_i_reg_609 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_164_p1);
    sensitive << ( reg_334 );
    sensitive << ( tmp_41_i_reg_502 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_168_p0);
    sensitive << ( tmp_44_i_reg_507 );
    sensitive << ( tmp_46_i_reg_614 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_168_p1);
    sensitive << ( reg_340 );
    sensitive << ( tmp_45_i_reg_512 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_172_p0);
    sensitive << ( tmp_48_i_reg_517 );
    sensitive << ( tmp_50_i_reg_619 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_172_p1);
    sensitive << ( reg_346 );
    sensitive << ( tmp_49_i_reg_522 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_176_p0);
    sensitive << ( tmp_52_i_reg_527 );
    sensitive << ( tmp_54_i_reg_624 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_176_p1);
    sensitive << ( reg_352 );
    sensitive << ( tmp_53_i_reg_532 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_180_p0);
    sensitive << ( tmp_56_i_reg_537 );
    sensitive << ( tmp_58_i_reg_629 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_180_p1);
    sensitive << ( reg_358 );
    sensitive << ( tmp_57_i_reg_542 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_grp_fu_184_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mat3_a1_read );
    sensitive << ( mat3_a3_read );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_184_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( other_a1_read );
    sensitive << ( other_c1_read );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_190_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mat3_a2_read );
    sensitive << ( mat3_a3_read );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_190_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( other_b1_read );
    sensitive << ( other_c2_read );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_196_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mat3_a1_read );
    sensitive << ( mat3_a3_read );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_196_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( other_a2_read );
    sensitive << ( other_c3_read );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_202_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mat3_a2_read );
    sensitive << ( mat3_b3_read );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_202_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( other_b2_read );
    sensitive << ( other_c1_read );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_208_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mat3_a1_read );
    sensitive << ( mat3_b3_read );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_208_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( other_a3_read );
    sensitive << ( other_c2_read );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_214_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mat3_a2_read );
    sensitive << ( mat3_b3_read );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_214_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( other_b3_read );
    sensitive << ( other_c3_read );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_220_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mat3_b1_read );
    sensitive << ( mat3_c3_read );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_220_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( other_a1_read );
    sensitive << ( other_c1_read );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_226_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mat3_b2_read );
    sensitive << ( mat3_c3_read );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_226_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( other_b1_read );
    sensitive << ( other_c2_read );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_232_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( mat3_b1_read );
    sensitive << ( mat3_c3_read );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_grp_fu_232_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( other_a2_read );
    sensitive << ( other_c3_read );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000001";
    ap_return_0_preg = "00000000000000000000000000000000";
    ap_return_1_preg = "00000000000000000000000000000000";
    ap_return_2_preg = "00000000000000000000000000000000";
    ap_return_3_preg = "00000000000000000000000000000000";
    ap_return_4_preg = "00000000000000000000000000000000";
    ap_return_5_preg = "00000000000000000000000000000000";
    ap_return_6_preg = "00000000000000000000000000000000";
    ap_return_7_preg = "00000000000000000000000000000000";
    ap_return_8_preg = "00000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "operator_mul_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, mat3_a1_read, "(port)mat3_a1_read");
    sc_trace(mVcdFile, mat3_a2_read, "(port)mat3_a2_read");
    sc_trace(mVcdFile, mat3_a3_read, "(port)mat3_a3_read");
    sc_trace(mVcdFile, mat3_b1_read, "(port)mat3_b1_read");
    sc_trace(mVcdFile, mat3_b2_read, "(port)mat3_b2_read");
    sc_trace(mVcdFile, mat3_b3_read, "(port)mat3_b3_read");
    sc_trace(mVcdFile, mat3_c1_read, "(port)mat3_c1_read");
    sc_trace(mVcdFile, mat3_c2_read, "(port)mat3_c2_read");
    sc_trace(mVcdFile, mat3_c3_read, "(port)mat3_c3_read");
    sc_trace(mVcdFile, other_a1_read, "(port)other_a1_read");
    sc_trace(mVcdFile, other_a2_read, "(port)other_a2_read");
    sc_trace(mVcdFile, other_a3_read, "(port)other_a3_read");
    sc_trace(mVcdFile, other_b1_read, "(port)other_b1_read");
    sc_trace(mVcdFile, other_b2_read, "(port)other_b2_read");
    sc_trace(mVcdFile, other_b3_read, "(port)other_b3_read");
    sc_trace(mVcdFile, other_c1_read, "(port)other_c1_read");
    sc_trace(mVcdFile, other_c2_read, "(port)other_c2_read");
    sc_trace(mVcdFile, other_c3_read, "(port)other_c3_read");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
    sc_trace(mVcdFile, ap_return_3, "(port)ap_return_3");
    sc_trace(mVcdFile, ap_return_4, "(port)ap_return_4");
    sc_trace(mVcdFile, ap_return_5, "(port)ap_return_5");
    sc_trace(mVcdFile, ap_return_6, "(port)ap_return_6");
    sc_trace(mVcdFile, ap_return_7, "(port)ap_return_7");
    sc_trace(mVcdFile, ap_return_8, "(port)ap_return_8");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_fu_184_p2, "grp_fu_184_p2");
    sc_trace(mVcdFile, reg_310, "reg_310");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_fu_190_p2, "grp_fu_190_p2");
    sc_trace(mVcdFile, reg_316, "reg_316");
    sc_trace(mVcdFile, grp_fu_196_p2, "grp_fu_196_p2");
    sc_trace(mVcdFile, reg_322, "reg_322");
    sc_trace(mVcdFile, grp_fu_202_p2, "grp_fu_202_p2");
    sc_trace(mVcdFile, reg_328, "reg_328");
    sc_trace(mVcdFile, grp_fu_208_p2, "grp_fu_208_p2");
    sc_trace(mVcdFile, reg_334, "reg_334");
    sc_trace(mVcdFile, grp_fu_214_p2, "grp_fu_214_p2");
    sc_trace(mVcdFile, reg_340, "reg_340");
    sc_trace(mVcdFile, grp_fu_220_p2, "grp_fu_220_p2");
    sc_trace(mVcdFile, reg_346, "reg_346");
    sc_trace(mVcdFile, grp_fu_226_p2, "grp_fu_226_p2");
    sc_trace(mVcdFile, reg_352, "reg_352");
    sc_trace(mVcdFile, grp_fu_232_p2, "grp_fu_232_p2");
    sc_trace(mVcdFile, reg_358, "reg_358");
    sc_trace(mVcdFile, grp_fu_238_p2, "grp_fu_238_p2");
    sc_trace(mVcdFile, tmp_41_i_reg_502, "tmp_41_i_reg_502");
    sc_trace(mVcdFile, grp_fu_244_p2, "grp_fu_244_p2");
    sc_trace(mVcdFile, tmp_44_i_reg_507, "tmp_44_i_reg_507");
    sc_trace(mVcdFile, grp_fu_250_p2, "grp_fu_250_p2");
    sc_trace(mVcdFile, tmp_45_i_reg_512, "tmp_45_i_reg_512");
    sc_trace(mVcdFile, grp_fu_256_p2, "grp_fu_256_p2");
    sc_trace(mVcdFile, tmp_48_i_reg_517, "tmp_48_i_reg_517");
    sc_trace(mVcdFile, grp_fu_262_p2, "grp_fu_262_p2");
    sc_trace(mVcdFile, tmp_49_i_reg_522, "tmp_49_i_reg_522");
    sc_trace(mVcdFile, grp_fu_268_p2, "grp_fu_268_p2");
    sc_trace(mVcdFile, tmp_52_i_reg_527, "tmp_52_i_reg_527");
    sc_trace(mVcdFile, grp_fu_274_p2, "grp_fu_274_p2");
    sc_trace(mVcdFile, tmp_53_i_reg_532, "tmp_53_i_reg_532");
    sc_trace(mVcdFile, grp_fu_280_p2, "grp_fu_280_p2");
    sc_trace(mVcdFile, tmp_56_i_reg_537, "tmp_56_i_reg_537");
    sc_trace(mVcdFile, grp_fu_286_p2, "grp_fu_286_p2");
    sc_trace(mVcdFile, tmp_57_i_reg_542, "tmp_57_i_reg_542");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_fu_148_p2, "grp_fu_148_p2");
    sc_trace(mVcdFile, tmp_26_i_reg_589, "tmp_26_i_reg_589");
    sc_trace(mVcdFile, grp_fu_152_p2, "grp_fu_152_p2");
    sc_trace(mVcdFile, tmp_30_i_reg_594, "tmp_30_i_reg_594");
    sc_trace(mVcdFile, grp_fu_156_p2, "grp_fu_156_p2");
    sc_trace(mVcdFile, tmp_34_i_reg_599, "tmp_34_i_reg_599");
    sc_trace(mVcdFile, grp_fu_160_p2, "grp_fu_160_p2");
    sc_trace(mVcdFile, tmp_38_i_reg_604, "tmp_38_i_reg_604");
    sc_trace(mVcdFile, grp_fu_164_p2, "grp_fu_164_p2");
    sc_trace(mVcdFile, tmp_42_i_reg_609, "tmp_42_i_reg_609");
    sc_trace(mVcdFile, grp_fu_168_p2, "grp_fu_168_p2");
    sc_trace(mVcdFile, tmp_46_i_reg_614, "tmp_46_i_reg_614");
    sc_trace(mVcdFile, grp_fu_172_p2, "grp_fu_172_p2");
    sc_trace(mVcdFile, tmp_50_i_reg_619, "tmp_50_i_reg_619");
    sc_trace(mVcdFile, grp_fu_176_p2, "grp_fu_176_p2");
    sc_trace(mVcdFile, tmp_54_i_reg_624, "tmp_54_i_reg_624");
    sc_trace(mVcdFile, grp_fu_180_p2, "grp_fu_180_p2");
    sc_trace(mVcdFile, tmp_58_i_reg_629, "tmp_58_i_reg_629");
    sc_trace(mVcdFile, grp_fu_148_p0, "grp_fu_148_p0");
    sc_trace(mVcdFile, grp_fu_148_p1, "grp_fu_148_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_fu_152_p0, "grp_fu_152_p0");
    sc_trace(mVcdFile, grp_fu_152_p1, "grp_fu_152_p1");
    sc_trace(mVcdFile, grp_fu_156_p0, "grp_fu_156_p0");
    sc_trace(mVcdFile, grp_fu_156_p1, "grp_fu_156_p1");
    sc_trace(mVcdFile, grp_fu_160_p0, "grp_fu_160_p0");
    sc_trace(mVcdFile, grp_fu_160_p1, "grp_fu_160_p1");
    sc_trace(mVcdFile, grp_fu_164_p0, "grp_fu_164_p0");
    sc_trace(mVcdFile, grp_fu_164_p1, "grp_fu_164_p1");
    sc_trace(mVcdFile, grp_fu_168_p0, "grp_fu_168_p0");
    sc_trace(mVcdFile, grp_fu_168_p1, "grp_fu_168_p1");
    sc_trace(mVcdFile, grp_fu_172_p0, "grp_fu_172_p0");
    sc_trace(mVcdFile, grp_fu_172_p1, "grp_fu_172_p1");
    sc_trace(mVcdFile, grp_fu_176_p0, "grp_fu_176_p0");
    sc_trace(mVcdFile, grp_fu_176_p1, "grp_fu_176_p1");
    sc_trace(mVcdFile, grp_fu_180_p0, "grp_fu_180_p0");
    sc_trace(mVcdFile, grp_fu_180_p1, "grp_fu_180_p1");
    sc_trace(mVcdFile, grp_fu_184_p0, "grp_fu_184_p0");
    sc_trace(mVcdFile, grp_fu_184_p1, "grp_fu_184_p1");
    sc_trace(mVcdFile, grp_fu_190_p0, "grp_fu_190_p0");
    sc_trace(mVcdFile, grp_fu_190_p1, "grp_fu_190_p1");
    sc_trace(mVcdFile, grp_fu_196_p0, "grp_fu_196_p0");
    sc_trace(mVcdFile, grp_fu_196_p1, "grp_fu_196_p1");
    sc_trace(mVcdFile, grp_fu_202_p0, "grp_fu_202_p0");
    sc_trace(mVcdFile, grp_fu_202_p1, "grp_fu_202_p1");
    sc_trace(mVcdFile, grp_fu_208_p0, "grp_fu_208_p0");
    sc_trace(mVcdFile, grp_fu_208_p1, "grp_fu_208_p1");
    sc_trace(mVcdFile, grp_fu_214_p0, "grp_fu_214_p0");
    sc_trace(mVcdFile, grp_fu_214_p1, "grp_fu_214_p1");
    sc_trace(mVcdFile, grp_fu_220_p0, "grp_fu_220_p0");
    sc_trace(mVcdFile, grp_fu_220_p1, "grp_fu_220_p1");
    sc_trace(mVcdFile, grp_fu_226_p0, "grp_fu_226_p0");
    sc_trace(mVcdFile, grp_fu_226_p1, "grp_fu_226_p1");
    sc_trace(mVcdFile, grp_fu_232_p0, "grp_fu_232_p0");
    sc_trace(mVcdFile, grp_fu_232_p1, "grp_fu_232_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_return_0_preg, "ap_return_0_preg");
    sc_trace(mVcdFile, ap_return_1_preg, "ap_return_1_preg");
    sc_trace(mVcdFile, ap_return_2_preg, "ap_return_2_preg");
    sc_trace(mVcdFile, ap_return_3_preg, "ap_return_3_preg");
    sc_trace(mVcdFile, ap_return_4_preg, "ap_return_4_preg");
    sc_trace(mVcdFile, ap_return_5_preg, "ap_return_5_preg");
    sc_trace(mVcdFile, ap_return_6_preg, "ap_return_6_preg");
    sc_trace(mVcdFile, ap_return_7_preg, "ap_return_7_preg");
    sc_trace(mVcdFile, ap_return_8_preg, "ap_return_8_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

operator_mul::~operator_mul() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete filter_fadd_32ns_bkb_U1;
    delete filter_fadd_32ns_bkb_U2;
    delete filter_fadd_32ns_bkb_U3;
    delete filter_fadd_32ns_bkb_U4;
    delete filter_fadd_32ns_bkb_U5;
    delete filter_fadd_32ns_bkb_U6;
    delete filter_fadd_32ns_bkb_U7;
    delete filter_fadd_32ns_bkb_U8;
    delete filter_fadd_32ns_bkb_U9;
    delete filter_fmul_32ns_cud_U10;
    delete filter_fmul_32ns_cud_U11;
    delete filter_fmul_32ns_cud_U12;
    delete filter_fmul_32ns_cud_U13;
    delete filter_fmul_32ns_cud_U14;
    delete filter_fmul_32ns_cud_U15;
    delete filter_fmul_32ns_cud_U16;
    delete filter_fmul_32ns_cud_U17;
    delete filter_fmul_32ns_cud_U18;
    delete filter_fmul_32ns_cud_U19;
    delete filter_fmul_32ns_cud_U20;
    delete filter_fmul_32ns_cud_U21;
    delete filter_fmul_32ns_cud_U22;
    delete filter_fmul_32ns_cud_U23;
    delete filter_fmul_32ns_cud_U24;
    delete filter_fmul_32ns_cud_U25;
    delete filter_fmul_32ns_cud_U26;
    delete filter_fmul_32ns_cud_U27;
}

void operator_mul::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void operator_mul::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_0_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_return_0_preg = grp_fu_148_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_1_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_return_1_preg = grp_fu_152_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_2_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_return_2_preg = grp_fu_156_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_3_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_return_3_preg = grp_fu_160_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_4_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_return_4_preg = grp_fu_164_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_5_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_return_5_preg = grp_fu_168_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_6_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_return_6_preg = grp_fu_172_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_7_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_return_7_preg = grp_fu_176_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_8_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
            ap_return_8_preg = grp_fu_180_p2.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        ap_return_0 = grp_fu_148_p2.read();
        ap_return_1 = grp_fu_152_p2.read();
        ap_return_2 = grp_fu_156_p2.read();
        ap_return_3 = grp_fu_160_p2.read();
        ap_return_4 = grp_fu_164_p2.read();
        ap_return_5 = grp_fu_168_p2.read();
        ap_return_6 = grp_fu_172_p2.read();
        ap_return_7 = grp_fu_176_p2.read();
        ap_return_8 = grp_fu_180_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        reg_310 = grp_fu_184_p2.read();
        reg_316 = grp_fu_190_p2.read();
        reg_322 = grp_fu_196_p2.read();
        reg_328 = grp_fu_202_p2.read();
        reg_334 = grp_fu_208_p2.read();
        reg_340 = grp_fu_214_p2.read();
        reg_346 = grp_fu_220_p2.read();
        reg_352 = grp_fu_226_p2.read();
        reg_358 = grp_fu_232_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        tmp_26_i_reg_589 = grp_fu_148_p2.read();
        tmp_30_i_reg_594 = grp_fu_152_p2.read();
        tmp_34_i_reg_599 = grp_fu_156_p2.read();
        tmp_38_i_reg_604 = grp_fu_160_p2.read();
        tmp_42_i_reg_609 = grp_fu_164_p2.read();
        tmp_46_i_reg_614 = grp_fu_168_p2.read();
        tmp_50_i_reg_619 = grp_fu_172_p2.read();
        tmp_54_i_reg_624 = grp_fu_176_p2.read();
        tmp_58_i_reg_629 = grp_fu_180_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        tmp_41_i_reg_502 = grp_fu_238_p2.read();
        tmp_44_i_reg_507 = grp_fu_244_p2.read();
        tmp_45_i_reg_512 = grp_fu_250_p2.read();
        tmp_48_i_reg_517 = grp_fu_256_p2.read();
        tmp_49_i_reg_522 = grp_fu_262_p2.read();
        tmp_52_i_reg_527 = grp_fu_268_p2.read();
        tmp_53_i_reg_532 = grp_fu_274_p2.read();
        tmp_56_i_reg_537 = grp_fu_280_p2.read();
        tmp_57_i_reg_542 = grp_fu_286_p2.read();
    }
}

void operator_mul::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void operator_mul::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void operator_mul::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void operator_mul::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void operator_mul::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void operator_mul::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void operator_mul::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void operator_mul::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void operator_mul::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void operator_mul::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void operator_mul::thread_grp_fu_148_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_148_p0 = tmp_26_i_reg_589.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_148_p0 = reg_310.read();
    } else {
        grp_fu_148_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_148_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_148_p1 = reg_310.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_148_p1 = reg_316.read();
    } else {
        grp_fu_148_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_152_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_152_p0 = tmp_30_i_reg_594.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_152_p0 = reg_322.read();
    } else {
        grp_fu_152_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_152_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_152_p1 = reg_316.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_152_p1 = reg_328.read();
    } else {
        grp_fu_152_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_156_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_156_p0 = tmp_34_i_reg_599.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_156_p0 = reg_334.read();
    } else {
        grp_fu_156_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_156_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_156_p1 = reg_322.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_156_p1 = reg_340.read();
    } else {
        grp_fu_156_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_160_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_160_p0 = tmp_38_i_reg_604.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_160_p0 = reg_346.read();
    } else {
        grp_fu_160_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_160_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_160_p1 = reg_328.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_160_p1 = reg_352.read();
    } else {
        grp_fu_160_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_164_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_164_p0 = tmp_42_i_reg_609.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_164_p0 = reg_358.read();
    } else {
        grp_fu_164_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_164_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_164_p1 = reg_334.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_164_p1 = tmp_41_i_reg_502.read();
    } else {
        grp_fu_164_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_168_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_168_p0 = tmp_46_i_reg_614.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_168_p0 = tmp_44_i_reg_507.read();
    } else {
        grp_fu_168_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_168_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_168_p1 = reg_340.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_168_p1 = tmp_45_i_reg_512.read();
    } else {
        grp_fu_168_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_172_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_172_p0 = tmp_50_i_reg_619.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_172_p0 = tmp_48_i_reg_517.read();
    } else {
        grp_fu_172_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_172_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_172_p1 = reg_346.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_172_p1 = tmp_49_i_reg_522.read();
    } else {
        grp_fu_172_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_176_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_176_p0 = tmp_54_i_reg_624.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_176_p0 = tmp_52_i_reg_527.read();
    } else {
        grp_fu_176_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_176_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_176_p1 = reg_352.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_176_p1 = tmp_53_i_reg_532.read();
    } else {
        grp_fu_176_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_180_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_180_p0 = tmp_58_i_reg_629.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_180_p0 = tmp_56_i_reg_537.read();
    } else {
        grp_fu_180_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_180_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        grp_fu_180_p1 = reg_358.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        grp_fu_180_p1 = tmp_57_i_reg_542.read();
    } else {
        grp_fu_180_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_184_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_184_p0 = mat3_a3_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_184_p0 = mat3_a1_read.read();
    } else {
        grp_fu_184_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_184_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_184_p1 = other_c1_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_184_p1 = other_a1_read.read();
    } else {
        grp_fu_184_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_190_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_190_p0 = mat3_a3_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_190_p0 = mat3_a2_read.read();
    } else {
        grp_fu_190_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_190_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_190_p1 = other_c2_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_190_p1 = other_b1_read.read();
    } else {
        grp_fu_190_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_196_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_196_p0 = mat3_a3_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_196_p0 = mat3_a1_read.read();
    } else {
        grp_fu_196_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_196_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_196_p1 = other_c3_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_196_p1 = other_a2_read.read();
    } else {
        grp_fu_196_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_202_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_202_p0 = mat3_b3_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_202_p0 = mat3_a2_read.read();
    } else {
        grp_fu_202_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_202_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_202_p1 = other_c1_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_202_p1 = other_b2_read.read();
    } else {
        grp_fu_202_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_208_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_208_p0 = mat3_b3_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_208_p0 = mat3_a1_read.read();
    } else {
        grp_fu_208_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_208_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_208_p1 = other_c2_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_208_p1 = other_a3_read.read();
    } else {
        grp_fu_208_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_214_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_214_p0 = mat3_b3_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_214_p0 = mat3_a2_read.read();
    } else {
        grp_fu_214_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_214_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_214_p1 = other_c3_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_214_p1 = other_b3_read.read();
    } else {
        grp_fu_214_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_220_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_220_p0 = mat3_c3_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_220_p0 = mat3_b1_read.read();
    } else {
        grp_fu_220_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_220_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_220_p1 = other_c1_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_220_p1 = other_a1_read.read();
    } else {
        grp_fu_220_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_226_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_226_p0 = mat3_c3_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_226_p0 = mat3_b2_read.read();
    } else {
        grp_fu_226_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_226_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_226_p1 = other_c2_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_226_p1 = other_b1_read.read();
    } else {
        grp_fu_226_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_232_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_232_p0 = mat3_c3_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_232_p0 = mat3_b1_read.read();
    } else {
        grp_fu_232_p0 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_grp_fu_232_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        grp_fu_232_p1 = other_c3_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        grp_fu_232_p1 = other_a2_read.read();
    } else {
        grp_fu_232_p1 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void operator_mul::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

}

